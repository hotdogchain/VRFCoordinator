{
	"id": "1e13e775647b5a469eccaa650b1e924f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.6",
	"solcLongVersion": "0.6.6+commit.6c089d02",
	"input": {
		"language": "Solidity",
		"sources": {
			"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol": {
				"content": "pragma solidity 0.6.6;\n\nimport \"./SafeMath.sol\";\n\nimport \"./interfaces/LinkTokenInterface.sol\";\nimport \"./interfaces/BlockHashStoreInterface.sol\";\n\nimport \"./VRF.sol\";\nimport \"./VRFRequestIDBase.sol\";\nimport \"./VRFConsumerBase.sol\";\n\n/**\n * @title VRFCoordinator coordinates on-chain verifiable-randomness requests\n * @title with off-chain responses\n */\ncontract VRFCoordinator is VRF, VRFRequestIDBase {\n\n  using SafeMath for uint256;\n\n  LinkTokenInterface internal LINK;\n  BlockHashStoreInterface internal blockHashStore;\n\n  constructor(address _link, address _blockHashStore) public {\n    LINK = LinkTokenInterface(_link);\n    blockHashStore = BlockHashStoreInterface(_blockHashStore);\n  }\n\n  struct Callback { // Tracks an ongoing request\n    address callbackContract; // Requesting contract, which will receive response\n    // Amount of LINK paid at request time. Total LINK = 1e9 * 1e18 < 2^96, so\n    // this representation is adequate, and saves a word of storage when this\n    // field follows the 160-bit callbackContract address.\n    uint96 randomnessFee;\n    // Commitment to seed passed to oracle by this contract, and the number of\n    // the block in which the request appeared. This is the keccak256 of the\n    // concatenation of those values. Storing this commitment saves a word of\n    // storage.\n    bytes32 seedAndBlockNum;\n  }\n\n  struct ServiceAgreement { // Tracks oracle commitments to VRF service\n    address vRFOracle; // Oracle committing to respond with VRF service\n    uint96 fee; // Minimum payment for oracle response. Total LINK=1e9*1e18<2^96\n    bytes32 jobID; // ID of corresponding chainlink job in oracle's DB\n  }\n\n  mapping(bytes32 /* (provingKey, seed) */ => Callback) public callbacks;\n  mapping(bytes32 /* provingKey */ => ServiceAgreement)\n    public serviceAgreements;\n  mapping(address /* oracle */ => uint256 /* LINK balance */)\n    public withdrawableTokens;\n  mapping(bytes32 /* provingKey */ => mapping(address /* consumer */ => uint256))\n    private nonces;\n\n  // The oracle only needs the jobID to look up the VRF, but specifying public\n  // key as well prevents a malicious oracle from inducing VRF outputs from\n  // another oracle by reusing the jobID.\n  event RandomnessRequest(\n    bytes32 keyHash,\n    uint256 seed,\n    bytes32 indexed jobID,\n    address sender,\n    uint256 fee,\n    bytes32 requestID);\n\n  event NewServiceAgreement(bytes32 keyHash, uint256 fee);\n\n  event RandomnessRequestFulfilled(bytes32 requestId, uint256 output);\n\n  /**\n   * @notice Commits calling address to serve randomness\n   * @param _fee minimum LINK payment required to serve randomness\n   * @param _oracle the address of the Chainlink node with the proving key and job\n   * @param _publicProvingKey public key used to prove randomness\n   * @param _jobID ID of the corresponding chainlink job in the oracle's db\n   */\n  function registerProvingKey(\n    uint256 _fee, address _oracle, uint256[2] calldata _publicProvingKey, bytes32 _jobID\n  )\n    external\n  {\n    bytes32 keyHash = hashOfKey(_publicProvingKey);\n    address oldVRFOracle = serviceAgreements[keyHash].vRFOracle;\n    require(oldVRFOracle == address(0), \"please register a new key\");\n    require(_oracle != address(0), \"_oracle must not be 0x0\");\n    serviceAgreements[keyHash].vRFOracle = _oracle;\n    serviceAgreements[keyHash].jobID = _jobID;\n    // Yes, this revert message doesn't fit in a word\n    require(_fee <= 1e9 ether,\n      \"you can't charge more than all the LINK in the world, greedy\");\n    serviceAgreements[keyHash].fee = uint96(_fee);\n    emit NewServiceAgreement(keyHash, _fee);\n  }\n\n  /**\n   * @notice Called by LINK.transferAndCall, on successful LINK transfer\n   *\n   * @dev To invoke this, use the requestRandomness method in VRFConsumerBase.\n   *\n   * @dev The VRFCoordinator will call back to the calling contract when the\n   * @dev oracle responds, on the method fulfillRandomness. See\n   * @dev VRFConsumerBase.fulfilRandomness for its signature. Your consuming\n   * @dev contract should inherit from VRFConsumerBase, and implement\n   * @dev fulfilRandomness.\n   *\n   * @param _sender address: who sent the LINK (must be a contract)\n   * @param _fee amount of LINK sent\n   * @param _data abi-encoded call to randomnessRequest\n   */\n  function onTokenTransfer(address _sender, uint256 _fee, bytes memory _data)\n    public\n    onlyLINK\n  {\n    (bytes32 keyHash, uint256 seed) = abi.decode(_data, (bytes32, uint256));\n    randomnessRequest(keyHash, seed, _fee, _sender);\n  }\n\n  /**\n   * @notice creates the chainlink request for randomness\n   *\n   * @param _keyHash ID of the VRF public key against which to generate output\n   * @param _consumerSeed Input to the VRF, from which randomness is generated\n   * @param _feePaid Amount of LINK sent with request. Must exceed fee for key\n   * @param _sender Requesting contract; to be called back with VRF output\n   *\n   * @dev _consumerSeed is mixed with key hash, sender address and nonce to\n   * @dev obtain preSeed, which is passed to VRF oracle, which mixes it with the\n   * @dev hash of the block containing this request, to compute the final seed.\n   *\n   * @dev The requestId used to store the request data is constructed from the\n   * @dev preSeed and keyHash.\n   */\n  function randomnessRequest(\n    bytes32 _keyHash,\n    uint256 _consumerSeed,\n    uint256 _feePaid,\n    address _sender\n  )\n    internal\n    sufficientLINK(_feePaid, _keyHash)\n  {\n    uint256 nonce = nonces[_keyHash][_sender];\n    uint256 preSeed = makeVRFInputSeed(_keyHash, _consumerSeed, _sender, nonce);\n    bytes32 requestId = makeRequestId(_keyHash, preSeed);\n    // Cryptographically guaranteed by preSeed including an increasing nonce\n    assert(callbacks[requestId].callbackContract == address(0));\n    callbacks[requestId].callbackContract = _sender;\n    assert(_feePaid < 1e27); // Total LINK fits in uint96\n    callbacks[requestId].randomnessFee = uint96(_feePaid);\n    callbacks[requestId].seedAndBlockNum = keccak256(abi.encodePacked(\n      preSeed, block.number));\n    emit RandomnessRequest(_keyHash, preSeed, serviceAgreements[_keyHash].jobID,\n      _sender, _feePaid, requestId);\n    nonces[_keyHash][_sender] = nonces[_keyHash][_sender].add(1);\n  }\n\n  // Offsets into fulfillRandomnessRequest's _proof of various values\n  //\n  // Public key. Skips byte array's length prefix.\n  uint256 public constant PUBLIC_KEY_OFFSET = 0x20;\n  // Seed is 7th word in proof, plus word for length, (6+1)*0x20=0xe0\n  uint256 public constant PRESEED_OFFSET = 0xe0;\n\n  /**\n   * @notice Called by the chainlink node to fulfill requests\n   *\n   * @param _proof the proof of randomness. Actual random output built from this\n   *\n   * @dev The structure of _proof corresponds to vrf.MarshaledOnChainResponse,\n   * @dev in the node source code. I.e., it is a vrf.MarshaledProof with the\n   * @dev seed replaced by the preSeed, followed by the hash of the requesting\n   * @dev block.\n   */\n  function fulfillRandomnessRequest(bytes memory _proof) public {\n    (bytes32 currentKeyHash, Callback memory callback, bytes32 requestId,\n     uint256 randomness) = getRandomnessFromProof(_proof);\n\n    // Pay oracle\n    address oadd = serviceAgreements[currentKeyHash].vRFOracle;\n    withdrawableTokens[oadd] = withdrawableTokens[oadd].add(\n      callback.randomnessFee);\n\n    // Forget request. Must precede callback (prevents reentrancy)\n    delete callbacks[requestId];\n    callBackWithRandomness(requestId, randomness, callback.callbackContract);\n\n    emit RandomnessRequestFulfilled(requestId, randomness);\n  }\n\n  function callBackWithRandomness(bytes32 requestId, uint256 randomness,\n    address consumerContract) internal {\n    // Dummy variable; allows access to method selector in next line. See\n    // https://github.com/ethereum/solidity/issues/3506#issuecomment-553727797\n    VRFConsumerBase v;\n    bytes memory resp = abi.encodeWithSelector(\n      v.rawFulfillRandomness.selector, requestId, randomness);\n    // The bound b here comes from https://eips.ethereum.org/EIPS/eip-150. The\n    // actual gas available to the consuming contract will be b-floor(b/64).\n    // This is chosen to leave the consuming contract ~200k gas, after the cost\n    // of the call itself.\n    uint256 b = 206000;\n    require(gasleft() >= b, \"not enough gas for consumer\");\n    // A low-level call is necessary, here, because we don't want the consuming\n    // contract to be able to revert this execution, and thus deny the oracle\n    // payment for a valid randomness response. This also necessitates the above\n    // check on the gasleft, as otherwise there would be no indication if the\n    // callback method ran out of gas.\n    //\n    // solhint-disable-next-line avoid-low-level-calls\n    (bool success,) = consumerContract.call(resp);\n    // Avoid unused-local-variable warning. (success is only present to prevent\n    // a warning that the return value of consumerContract.call is unused.)\n    (success);\n  }\n\n  function getRandomnessFromProof(bytes memory _proof)\n    internal view returns (bytes32 currentKeyHash, Callback memory callback,\n      bytes32 requestId, uint256 randomness) {\n    // blockNum follows proof, which follows length word (only direct-number\n    // constants are allowed in assembly, so have to compute this in code)\n    uint256 BLOCKNUM_OFFSET = 0x20 + PROOF_LENGTH;\n    // _proof.length skips the initial length word, so not including the\n    // blocknum in this length check balances out.\n    require(_proof.length == BLOCKNUM_OFFSET, \"wrong proof length\");\n    uint256[2] memory publicKey;\n    uint256 preSeed;\n    uint256 blockNum;\n    assembly { // solhint-disable-line no-inline-assembly\n      publicKey := add(_proof, PUBLIC_KEY_OFFSET)\n      preSeed := mload(add(_proof, PRESEED_OFFSET))\n      blockNum := mload(add(_proof, BLOCKNUM_OFFSET))\n    }\n    currentKeyHash = hashOfKey(publicKey);\n    requestId = makeRequestId(currentKeyHash, preSeed);\n    callback = callbacks[requestId];\n    require(callback.callbackContract != address(0), \"no corresponding request\");\n    require(callback.seedAndBlockNum == keccak256(abi.encodePacked(preSeed,\n      blockNum)), \"wrong preSeed or block num\");\n\n    bytes32 blockHash = blockhash(blockNum);\n    if (blockHash == bytes32(0)) {\n      blockHash = blockHashStore.getBlockhash(blockNum);\n      require(blockHash != bytes32(0), \"please prove blockhash\");\n    }\n    // The seed actually used by the VRF machinery, mixing in the blockhash\n    uint256 actualSeed = uint256(keccak256(abi.encodePacked(preSeed, blockHash)));\n    // solhint-disable-next-line no-inline-assembly\n    assembly { // Construct the actual proof from the remains of _proof\n      mstore(add(_proof, PRESEED_OFFSET), actualSeed)\n      mstore(_proof, PROOF_LENGTH)\n    }\n    randomness = VRF.randomValueFromVRFProof(_proof); // Reverts on failure\n  }\n\n  /**\n   * @dev Allows the oracle operator to withdraw their LINK\n   * @param _recipient is the address the funds will be sent to\n   * @param _amount is the amount of LINK transferred from the Coordinator contract\n   */\n  function withdraw(address _recipient, uint256 _amount)\n    external\n    hasAvailableFunds(_amount)\n  {\n    withdrawableTokens[msg.sender] = withdrawableTokens[msg.sender].sub(_amount);\n    assert(LINK.transfer(_recipient, _amount));\n  }\n\n  /**\n   * @notice Returns the serviceAgreements key associated with this public key\n   * @param _publicKey the key to return the address for\n   */\n  function hashOfKey(uint256[2] memory _publicKey) public pure returns (bytes32) {\n    return keccak256(abi.encodePacked(_publicKey));\n  }\n\n  /**\n   * @dev Reverts if amount is not at least what was agreed upon in the service agreement\n   * @param _feePaid The payment for the request\n   * @param _keyHash The key which the request is for\n   */\n  modifier sufficientLINK(uint256 _feePaid, bytes32 _keyHash) {\n    require(_feePaid >= serviceAgreements[_keyHash].fee, \"Below agreed payment\");\n    _;\n  }\n\n/**\n   * @dev Reverts if not sent from the LINK token\n   */\n  modifier onlyLINK() {\n    require(msg.sender == address(LINK), \"Must use LINK token\");\n    _;\n  }\n\n  /**\n   * @dev Reverts if amount requested is greater than withdrawable balance\n   * @param _amount The given amount to compare to `withdrawableTokens`\n   */\n  modifier hasAvailableFunds(uint256 _amount) {\n    require(withdrawableTokens[msg.sender] >= _amount, \"can't withdraw more than balance\");\n    _;\n  }\n\n}"
			},
			"Users/leilei/Downloads/VRFCoordinator/VRFConsumerBase.sol": {
				"content": "pragma solidity ^0.6.0;\n\nimport { SafeMath as SafeMath_Chainlink } from \"./SafeMath.sol\";\n\nimport \"./interfaces/LinkTokenInterface.sol\";\n\nimport \"./VRFRequestIDBase.sol\";\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerInterface, and can\n * @dev initialize VRFConsumerInterface's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constuctor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator, _link) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash), and have told you the minimum LINK\n * @dev price for VRF service. Make sure your contract has sufficient LINK, and\n * @dev call requestRandomness(keyHash, fee, seed), where seed is the input you\n * @dev want to generate randomness from.\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomness method.\n *\n * @dev The randomness argument to fulfillRandomness is the actual random value\n * @dev generated from your seed.\n *\n * @dev The requestId argument is generated from the keyHash and the seed by\n * @dev makeRequestId(keyHash, seed). If your contract could have concurrent\n * @dev requests open, you can use the requestId to track which seed is\n * @dev associated with which randomness. See VRFRequestIDBase.sol for more\n * @dev details.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ. (Which is critical to making unpredictable randomness! See the\n * @dev next section.)\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev Since the ultimate input to the VRF is mixed with the block hash of the\n * @dev block in which the request is made, user-provided seeds have no impact\n * @dev on its economic security properties. They are only included for API\n * @dev compatability with previous versions of this contract.\n *\n * @dev Since the block hash of the block which contains the requestRandomness()\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls fulfillRandomness().\n */\nabstract contract VRFConsumerBase is VRFRequestIDBase {\n\n  using SafeMath_Chainlink for uint256;\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it.\n   *\n   * @dev The VRFCoordinator expects a calling contract to have a method with\n   * @dev this signature, and will trigger it once it has verified the proof\n   * @dev associated with the randomness (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomness the VRF output\n   */\n  function fulfillRandomness(bytes32 requestId, uint256 randomness)\n    internal virtual;\n\n  /**\n   * @notice requestRandomness initiates a request for VRF output given _seed\n   *\n   * @dev See \"SECURITY CONSIDERATIONS\" above for more information on _seed.\n   *\n   * @dev The fulfillRandomness method receives the output, once it's provided\n   * @dev by the Oracle, and verified by the vrfCoordinator.\n   *\n   * @dev The _keyHash must already be registered with the VRFCoordinator, and\n   * @dev the _fee must exceed the fee specified during registration of the\n   * @dev _keyHash.\n   *\n   * @param _keyHash ID of public key against which randomness is generated\n   * @param _fee The amount of LINK to send with the request\n   * @param _seed seed mixed into the input of the VRF\n   *\n   * @return requestId unique ID for this request\n   *\n   * @dev The returned requestId can be used to distinguish responses to *\n   * @dev concurrent requests. It is passed as the first argument to\n   * @dev fulfillRandomness.\n   */\n  function requestRandomness(bytes32 _keyHash, uint256 _fee, uint256 _seed)\n    public returns (bytes32 requestId)\n  {\n    LINK.transferAndCall(vrfCoordinator, _fee, abi.encode(_keyHash, _seed));\n    // This is the seed passed to VRFCoordinator. The oracle will mix this with\n    // the hash of the block containing this request to obtain the seed/input\n    // which is finally passed to the VRF cryptographic machinery.\n    uint256 vRFSeed  = makeVRFInputSeed(_keyHash, _seed, address(this), nonces[_keyHash]);\n    // nonces[_keyHash] must stay in sync with\n    // VRFCoordinator.nonces[_keyHash][this], which was incremented by the above\n    // successful LINK.transferAndCall (in VRFCoordinator.randomnessRequest).\n    // This provides protection against the user repeating their input\n    // seed, which would result in a predictable/duplicate output.\n    nonces[_keyHash] = nonces[_keyHash].add(1);\n    return makeRequestId(_keyHash, vRFSeed);\n  }\n\n  LinkTokenInterface immutable internal LINK;\n  address immutable private vrfCoordinator;\n\n  // Nonces for each VRF key from which randomness has been requested.\n  //\n  // Must stay in sync with VRFCoordinator[_keyHash][this]\n  mapping(bytes32 /* keyHash */ => uint256 /* nonce */) public nonces;\n  constructor(address _vrfCoordinator, address _link) public {\n    vrfCoordinator = _vrfCoordinator;\n    LINK = LinkTokenInterface(_link);\n  }\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomness(bytes32 requestId, uint256 randomness) external {\n    require(msg.sender == vrfCoordinator, \"Only VRFCoordinator can fulfill\");\n    fulfillRandomness(requestId, randomness);\n  }\n}"
			},
			"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol": {
				"content": "pragma solidity ^0.6.0;\n\ncontract VRFRequestIDBase {\n\n  /**\n   * @notice returns the seed which is actually input to the VRF coordinator\n   *\n   * @dev To prevent repetition of VRF output due to repetition of the\n   * @dev user-supplied seed, that seed is combined in a hash with the\n   * @dev user-specific nonce, and the address of the consuming contract. The\n   * @dev risk of repetition is mostly mitigated by inclusion of a blockhash in\n   * @dev the final seed, but the nonce does protect against repetition in\n   * @dev requests which are included in a single block.\n   *\n   * @param _userSeed VRF seed input provided by user\n   * @param _requester Address of the requesting contract\n   * @param _nonce User-specific nonce at the time of the request\n   */\n  function makeVRFInputSeed(bytes32 _keyHash, uint256 _userSeed,\n    address _requester, uint256 _nonce)\n    internal pure returns (uint256)\n  {\n    return  uint256(keccak256(abi.encode(_keyHash, _userSeed, _requester, _nonce)));\n  }\n\n  /**\n   * @notice Returns the id for this request\n   * @param _keyHash The serviceAgreement ID to be used for this request\n   * @param _vRFInputSeed The seed to be passed directly to the VRF\n   * @return The id for this request\n   *\n   * @dev Note that _vRFInputSeed is not the seed passed by the consuming\n   * @dev contract, but the one generated by makeVRFInputSeed\n   */\n  function makeRequestId(\n    bytes32 _keyHash, uint256 _vRFInputSeed) internal pure returns (bytes32) {\n    return keccak256(abi.encodePacked(_keyHash, _vRFInputSeed));\n  }\n}"
			},
			"Users/leilei/Downloads/VRFCoordinator/VRF.sol": {
				"content": "pragma solidity 0.6.6;\n\n/** ****************************************************************************\n  * @notice Verification of verifiable-random-function (VRF) proofs, following\n  * @notice https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\n  * @notice See https://eprint.iacr.org/2017/099.pdf for security proofs.\n\n  * @dev Bibliographic references:\n\n  * @dev Goldberg, et al., \"Verifiable Random Functions (VRFs)\", Internet Draft\n  * @dev draft-irtf-cfrg-vrf-05, IETF, Aug 11 2019,\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05\n\n  * @dev Papadopoulos, et al., \"Making NSEC5 Practical for DNSSEC\", Cryptology\n  * @dev ePrint Archive, Report 2017/099, https://eprint.iacr.org/2017/099.pdf\n  * ****************************************************************************\n  * @dev USAGE\n\n  * @dev The main entry point is randomValueFromVRFProof. See its docstring.\n  * ****************************************************************************\n  * @dev PURPOSE\n\n  * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n  * @dev to Vera the verifier in such a way that Vera can be sure he's not\n  * @dev making his output up to suit himself. Reggie provides Vera a public key\n  * @dev to which he knows the secret key. Each time Vera provides a seed to\n  * @dev Reggie, he gives back a value which is computed completely\n  * @dev deterministically from the seed and the secret key.\n\n  * @dev Reggie provides a proof by which Vera can verify that the output was\n  * @dev correctly computed once Reggie tells it to her, but without that proof,\n  * @dev the output is computationally indistinguishable to her from a uniform\n  * @dev random sample from the output space.\n\n  * @dev The purpose of this contract is to perform that verification.\n  * ****************************************************************************\n  * @dev DESIGN NOTES\n\n  * @dev The VRF algorithm verified here satisfies the full unqiqueness, full\n  * @dev collision resistance, and full pseudorandomness security properties.\n  * @dev See \"SECURITY PROPERTIES\" below, and\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-3\n\n  * @dev An elliptic curve point is generally represented in the solidity code\n  * @dev as a uint256[2], corresponding to its affine coordinates in\n  * @dev GF(FIELD_SIZE).\n\n  * @dev For the sake of efficiency, this implementation deviates from the spec\n  * @dev in some minor ways:\n\n  * @dev - Keccak hash rather than the SHA256 hash recommended in\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\n  * @dev   Keccak costs much less gas on the EVM, and provides similar security.\n\n  * @dev - Secp256k1 curve instead of the P-256 or ED25519 curves recommended in\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\n  * @dev   For curve-point multiplication, it's much cheaper to abuse ECRECOVER\n\n  * @dev - hashToCurve recursively hashes until it finds a curve x-ordinate. On\n  * @dev   the EVM, this is slightly more efficient than the recommendation in\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1\n  * @dev   step 5, to concatenate with a nonce then hash, and rehash with the\n  * @dev   nonce updated until a valid x-ordinate is found.\n\n  * @dev - hashToCurve does not include a cipher version string or the byte 0x1\n  * @dev   in the hash message, as recommended in step 5.B of the draft\n  * @dev   standard. They are unnecessary here because no variation in the\n  * @dev   cipher suite is allowed.\n\n  * @dev - Similarly, the hash input in scalarFromCurvePoints does not include a\n  * @dev   commitment to the cipher suite, either, which differs from step 2 of\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3\n  * @dev   . Also, the hash input is the concatenation of the uncompressed\n  * @dev   points, not the compressed points as recommended in step 3.\n\n  * @dev - In the calculation of the challenge value \"c\", the \"u\" value (i.e.\n  * @dev   the value computed by Reggie as the nonce times the secp256k1\n  * @dev   generator point, see steps 5 and 7 of\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\n  * @dev   ) is replaced by its ethereum address, i.e. the lower 160 bits of the\n  * @dev   keccak hash of the original u. This is because we only verify the\n  * @dev   calculation of u up to its address, by abusing ECRECOVER.\n  * ****************************************************************************\n  * @dev   SECURITY PROPERTIES\n\n  * @dev Here are the security properties for this VRF:\n\n  * @dev Full uniqueness: For any seed and valid VRF public key, there is\n  * @dev   exactly one VRF output which can be proved to come from that seed, in\n  * @dev   the sense that the proof will pass verifyVRFProof.\n\n  * @dev Full collision resistance: It's cryptographically infeasible to find\n  * @dev   two seeds with same VRF output from a fixed, valid VRF key\n\n  * @dev Full pseudorandomness: Absent the proofs that the VRF outputs are\n  * @dev   derived from a given seed, the outputs are computationally\n  * @dev   indistinguishable from randomness.\n\n  * @dev https://eprint.iacr.org/2017/099.pdf, Appendix B contains the proofs\n  * @dev for these properties.\n\n  * @dev For secp256k1, the key validation described in section\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.6\n  * @dev is unnecessary, because secp256k1 has cofactor 1, and the\n  * @dev representation of the public key used here (affine x- and y-ordinates\n  * @dev of the secp256k1 point on the standard y^2=x^3+7 curve) cannot refer to\n  * @dev the point at infinity.\n  * ****************************************************************************\n  * @dev OTHER SECURITY CONSIDERATIONS\n  *\n  * @dev The seed input to the VRF could in principle force an arbitrary amount\n  * @dev of work in hashToCurve, by requiring extra rounds of hashing and\n  * @dev checking whether that's yielded the x ordinate of a secp256k1 point.\n  * @dev However, under the Random Oracle Model the probability of choosing a\n  * @dev point which forces n extra rounds in hashToCurve is 2⁻ⁿ. The base cost\n  * @dev for calling hashToCurve is about 25,000 gas, and each round of checking\n  * @dev for a valid x ordinate costs about 15,555 gas, so to find a seed for\n  * @dev which hashToCurve would cost more than 2,017,000 gas, one would have to\n  * @dev try, in expectation, about 2¹²⁸ seeds, which is infeasible for any\n  * @dev foreseeable computational resources. (25,000 + 128 * 15,555 < 2,017,000.)\n\n  * @dev Since the gas block limit for the Ethereum main net is 10,000,000 gas,\n  * @dev this means it is infeasible for an adversary to prevent correct\n  * @dev operation of this contract by choosing an adverse seed.\n\n  * @dev (See TestMeasureHashToCurveGasCost for verification of the gas cost for\n  * @dev hashToCurve.)\n\n  * @dev It may be possible to make a secure constant-time hashToCurve function.\n  * @dev See notes in hashToCurve docstring.\n*/\ncontract VRF {\n\n  // See https://www.secg.org/sec2-v2.pdf, section 2.4.1, for these constants.\n  uint256 constant private GROUP_ORDER = // Number of points in Secp256k1\n    // solium-disable-next-line indentation\n    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141;\n  // Prime characteristic of the galois field over which Secp256k1 is defined\n  uint256 constant private FIELD_SIZE =\n    // solium-disable-next-line indentation\n    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F;\n  uint256 constant private WORD_LENGTH_BYTES = 0x20;\n\n  // (base^exponent) % FIELD_SIZE\n  // Cribbed from https://medium.com/@rbkhmrcr/precompiles-solidity-e5d29bd428c4\n  function bigModExp(uint256 base, uint256 exponent)\n    internal view returns (uint256 exponentiation) {\n      uint256 callResult;\n      uint256[6] memory bigModExpContractInputs;\n      bigModExpContractInputs[0] = WORD_LENGTH_BYTES;  // Length of base\n      bigModExpContractInputs[1] = WORD_LENGTH_BYTES;  // Length of exponent\n      bigModExpContractInputs[2] = WORD_LENGTH_BYTES;  // Length of modulus\n      bigModExpContractInputs[3] = base;\n      bigModExpContractInputs[4] = exponent;\n      bigModExpContractInputs[5] = FIELD_SIZE;\n      uint256[1] memory output;\n      assembly { // solhint-disable-line no-inline-assembly\n      callResult := staticcall(\n        not(0),                   // Gas cost: no limit\n        0x05,                     // Bigmodexp contract address\n        bigModExpContractInputs,\n        0xc0,                     // Length of input segment: 6*0x20-bytes\n        output,\n        0x20                      // Length of output segment\n      )\n      }\n      if (callResult == 0) {revert(\"bigModExp failure!\");}\n      return output[0];\n    }\n\n  // Let q=FIELD_SIZE. q % 4 = 3, ∴ x≡r^2 mod q ⇒ x^SQRT_POWER≡±r mod q.  See\n  // https://en.wikipedia.org/wiki/Modular_square_root#Prime_or_prime_power_modulus\n  uint256 constant private SQRT_POWER = (FIELD_SIZE + 1) >> 2;\n\n  // Computes a s.t. a^2 = x in the field. Assumes a exists\n  function squareRoot(uint256 x) internal view returns (uint256) {\n    return bigModExp(x, SQRT_POWER);\n  }\n\n  // The value of y^2 given that (x,y) is on secp256k1.\n  function ySquared(uint256 x) internal pure returns (uint256) {\n    // Curve is y^2=x^3+7. See section 2.4.1 of https://www.secg.org/sec2-v2.pdf\n    uint256 xCubed = mulmod(x, mulmod(x, x, FIELD_SIZE), FIELD_SIZE);\n    return addmod(xCubed, 7, FIELD_SIZE);\n  }\n\n  // True iff p is on secp256k1\n  function isOnCurve(uint256[2] memory p) internal pure returns (bool) {\n    return ySquared(p[0]) == mulmod(p[1], p[1], FIELD_SIZE);\n  }\n\n  // Hash x uniformly into {0, ..., FIELD_SIZE-1}.\n  function fieldHash(bytes memory b) internal pure returns (uint256 x_) {\n    x_ = uint256(keccak256(b));\n    // Rejecting if x >= FIELD_SIZE corresponds to step 2.1 in section 2.3.4 of\n    // http://www.secg.org/sec1-v2.pdf , which is part of the definition of\n    // string_to_point in the IETF draft\n    while (x_ >= FIELD_SIZE) {\n      x_ = uint256(keccak256(abi.encodePacked(x_)));\n    }\n  }\n\n  // Hash b to a random point which hopefully lies on secp256k1. The y ordinate\n  // is always even, due to\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1\n  // step 5.C, which references arbitrary_string_to_point, defined in\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5 as\n  // returning the point with given x ordinate, and even y ordinate.\n  function newCandidateSecp256k1Point(bytes memory b)\n    internal view returns (uint256[2] memory p) {\n      p[0] = fieldHash(b);\n      p[1] = squareRoot(ySquared(p[0]));\n      if (p[1] % 2 == 1) {\n        p[1] = FIELD_SIZE - p[1];\n      }\n    }\n\n  // Domain-separation tag for initial hash in hashToCurve. Corresponds to\n  // vrf.go/hashToCurveHashPrefix\n  uint256 constant HASH_TO_CURVE_HASH_PREFIX = 1;\n\n  // Cryptographic hash function onto the curve.\n  //\n  // Corresponds to algorithm in section 5.4.1.1 of the draft standard. (But see\n  // DESIGN NOTES above for slight differences.)\n  //\n  // TODO(alx): Implement a bounded-computation hash-to-curve, as described in\n  // \"Construction of Rational Points on Elliptic Curves over Finite Fields\"\n  // http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.831.5299&rep=rep1&type=pdf\n  // and suggested by\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-01#section-5.2.2\n  // (Though we can't used exactly that because secp256k1's j-invariant is 0.)\n  //\n  // This would greatly simplify the analysis in \"OTHER SECURITY CONSIDERATIONS\"\n  // https://www.pivotaltracker.com/story/show/171120900\n  function hashToCurve(uint256[2] memory pk, uint256 input)\n    internal view returns (uint256[2] memory rv) {\n      rv = newCandidateSecp256k1Point(abi.encodePacked(HASH_TO_CURVE_HASH_PREFIX,\n                                                       pk, input));\n      while (!isOnCurve(rv)) {\n        rv = newCandidateSecp256k1Point(abi.encodePacked(rv[0]));\n      }\n    }\n\n  /** *********************************************************************\n   * @notice Check that product==scalar*multiplicand\n   *\n   * @dev Based on Vitalik Buterin's idea in ethresear.ch post cited below.\n   *\n   * @param multiplicand: secp256k1 point\n   * @param scalar: non-zero GF(GROUP_ORDER) scalar\n   * @param product: secp256k1 expected to be multiplier * multiplicand\n   * @return verifies true iff product==scalar*multiplicand, with cryptographically high probability\n   */\n  function ecmulVerify(uint256[2] memory multiplicand, uint256 scalar,\n    uint256[2] memory product) internal pure returns(bool verifies)\n  {\n    require(scalar != 0); // Rules out an ecrecover failure case\n    uint256 x = multiplicand[0]; // x ordinate of multiplicand\n    uint8 v = multiplicand[1] % 2 == 0 ? 27 : 28; // parity of y ordinate\n    // https://ethresear.ch/t/you-can-kinda-abuse-ecrecover-to-do-ecmul-in-secp256k1-today/2384/9\n    // Point corresponding to address ecrecover(0, v, x, s=scalar*x) is\n    // (x⁻¹ mod GROUP_ORDER) * (scalar * x * multiplicand - 0 * g), i.e.\n    // scalar*multiplicand. See https://crypto.stackexchange.com/a/18106\n    bytes32 scalarTimesX = bytes32(mulmod(scalar, x, GROUP_ORDER));\n    address actual = ecrecover(bytes32(0), v, bytes32(x), scalarTimesX);\n    // Explicit conversion to address takes bottom 160 bits\n    address expected = address(uint256(keccak256(abi.encodePacked(product))));\n    return (actual == expected);\n  }\n\n  // Returns x1/z1-x2/z2=(x1z2-x2z1)/(z1z2) in projective coordinates on P¹(𝔽ₙ)\n  function projectiveSub(uint256 x1, uint256 z1, uint256 x2, uint256 z2)\n    internal pure returns(uint256 x3, uint256 z3) {\n      uint256 num1 = mulmod(z2, x1, FIELD_SIZE);\n      uint256 num2 = mulmod(FIELD_SIZE - x2, z1, FIELD_SIZE);\n      (x3, z3) = (addmod(num1, num2, FIELD_SIZE), mulmod(z1, z2, FIELD_SIZE));\n    }\n\n  // Returns x1/z1*x2/z2=(x1x2)/(z1z2), in projective coordinates on P¹(𝔽ₙ)\n  function projectiveMul(uint256 x1, uint256 z1, uint256 x2, uint256 z2)\n    internal pure returns(uint256 x3, uint256 z3) {\n      (x3, z3) = (mulmod(x1, x2, FIELD_SIZE), mulmod(z1, z2, FIELD_SIZE));\n    }\n\n  /** **************************************************************************\n      @notice Computes elliptic-curve sum, in projective co-ordinates\n\n      @dev Using projective coordinates avoids costly divisions\n\n      @dev To use this with p and q in affine coordinates, call\n      @dev projectiveECAdd(px, py, qx, qy). This will return\n      @dev the addition of (px, py, 1) and (qx, qy, 1), in the\n      @dev secp256k1 group.\n\n      @dev This can be used to calculate the z which is the inverse to zInv\n      @dev in isValidVRFOutput. But consider using a faster\n      @dev re-implementation such as ProjectiveECAdd in the golang vrf package.\n\n      @dev This function assumes [px,py,1],[qx,qy,1] are valid projective\n           coordinates of secp256k1 points. That is safe in this contract,\n           because this method is only used by linearCombination, which checks\n           points are on the curve via ecrecover.\n      **************************************************************************\n      @param px The first affine coordinate of the first summand\n      @param py The second affine coordinate of the first summand\n      @param qx The first affine coordinate of the second summand\n      @param qy The second affine coordinate of the second summand\n\n      (px,py) and (qx,qy) must be distinct, valid secp256k1 points.\n      **************************************************************************\n      Return values are projective coordinates of [px,py,1]+[qx,qy,1] as points\n      on secp256k1, in P²(𝔽ₙ)\n      @return sx \n      @return sy\n      @return sz\n  */\n  function projectiveECAdd(uint256 px, uint256 py, uint256 qx, uint256 qy)\n    internal pure returns(uint256 sx, uint256 sy, uint256 sz) {\n      // See \"Group law for E/K : y^2 = x^3 + ax + b\", in section 3.1.2, p. 80,\n      // \"Guide to Elliptic Curve Cryptography\" by Hankerson, Menezes and Vanstone\n      // We take the equations there for (sx,sy), and homogenize them to\n      // projective coordinates. That way, no inverses are required, here, and we\n      // only need the one inverse in affineECAdd.\n\n      // We only need the \"point addition\" equations from Hankerson et al. Can\n      // skip the \"point doubling\" equations because p1 == p2 is cryptographically\n      // impossible, and require'd not to be the case in linearCombination.\n\n      // Add extra \"projective coordinate\" to the two points\n      (uint256 z1, uint256 z2) = (1, 1);\n\n      // (lx, lz) = (qy-py)/(qx-px), i.e., gradient of secant line.\n      uint256 lx = addmod(qy, FIELD_SIZE - py, FIELD_SIZE);\n      uint256 lz = addmod(qx, FIELD_SIZE - px, FIELD_SIZE);\n\n      uint256 dx; // Accumulates denominator from sx calculation\n      // sx=((qy-py)/(qx-px))^2-px-qx\n      (sx, dx) = projectiveMul(lx, lz, lx, lz); // ((qy-py)/(qx-px))^2\n      (sx, dx) = projectiveSub(sx, dx, px, z1); // ((qy-py)/(qx-px))^2-px\n      (sx, dx) = projectiveSub(sx, dx, qx, z2); // ((qy-py)/(qx-px))^2-px-qx\n\n      uint256 dy; // Accumulates denominator from sy calculation\n      // sy=((qy-py)/(qx-px))(px-sx)-py\n      (sy, dy) = projectiveSub(px, z1, sx, dx); // px-sx\n      (sy, dy) = projectiveMul(sy, dy, lx, lz); // ((qy-py)/(qx-px))(px-sx)\n      (sy, dy) = projectiveSub(sy, dy, py, z1); // ((qy-py)/(qx-px))(px-sx)-py\n\n      if (dx != dy) { // Cross-multiply to put everything over a common denominator\n        sx = mulmod(sx, dy, FIELD_SIZE);\n        sy = mulmod(sy, dx, FIELD_SIZE);\n        sz = mulmod(dx, dy, FIELD_SIZE);\n      } else { // Already over a common denominator, use that for z ordinate\n        sz = dx;\n      }\n    }\n\n  // p1+p2, as affine points on secp256k1.\n  //\n  // invZ must be the inverse of the z returned by projectiveECAdd(p1, p2).\n  // It is computed off-chain to save gas.\n  //\n  // p1 and p2 must be distinct, because projectiveECAdd doesn't handle\n  // point doubling.\n  function affineECAdd(\n    uint256[2] memory p1, uint256[2] memory p2,\n    uint256 invZ) internal pure returns (uint256[2] memory) {\n    uint256 x;\n    uint256 y;\n    uint256 z;\n    (x, y, z) = projectiveECAdd(p1[0], p1[1], p2[0], p2[1]);\n    require(mulmod(z, invZ, FIELD_SIZE) == 1, \"invZ must be inverse of z\");\n    // Clear the z ordinate of the projective representation by dividing through\n    // by it, to obtain the affine representation\n    return [mulmod(x, invZ, FIELD_SIZE), mulmod(y, invZ, FIELD_SIZE)];\n  }\n\n  // True iff address(c*p+s*g) == lcWitness, where g is generator. (With\n  // cryptographically high probability.)\n  function verifyLinearCombinationWithGenerator(\n    uint256 c, uint256[2] memory p, uint256 s, address lcWitness)\n    internal pure returns (bool) {\n      // Rule out ecrecover failure modes which return address 0.\n      require(lcWitness != address(0), \"bad witness\");\n      uint8 v = (p[1] % 2 == 0) ? 27 : 28; // parity of y-ordinate of p\n      bytes32 pseudoHash = bytes32(GROUP_ORDER - mulmod(p[0], s, GROUP_ORDER)); // -s*p[0]\n      bytes32 pseudoSignature = bytes32(mulmod(c, p[0], GROUP_ORDER)); // c*p[0]\n      // https://ethresear.ch/t/you-can-kinda-abuse-ecrecover-to-do-ecmul-in-secp256k1-today/2384/9\n      // The point corresponding to the address returned by\n      // ecrecover(-s*p[0],v,p[0],c*p[0]) is\n      // (p[0]⁻¹ mod GROUP_ORDER)*(c*p[0]-(-s)*p[0]*g)=c*p+s*g.\n      // See https://crypto.stackexchange.com/a/18106\n      // https://bitcoin.stackexchange.com/questions/38351/ecdsa-v-r-s-what-is-v\n      address computed = ecrecover(pseudoHash, v, bytes32(p[0]), pseudoSignature);\n      return computed == lcWitness;\n    }\n\n  // c*p1 + s*p2. Requires cp1Witness=c*p1 and sp2Witness=s*p2. Also\n  // requires cp1Witness != sp2Witness (which is fine for this application,\n  // since it is cryptographically impossible for them to be equal. In the\n  // (cryptographically impossible) case that a prover accidentally derives\n  // a proof with equal c*p1 and s*p2, they should retry with a different\n  // proof nonce.) Assumes that all points are on secp256k1\n  // (which is checked in verifyVRFProof below.)\n  function linearCombination(\n    uint256 c, uint256[2] memory p1, uint256[2] memory cp1Witness,\n    uint256 s, uint256[2] memory p2, uint256[2] memory sp2Witness,\n    uint256 zInv)\n    internal pure returns (uint256[2] memory) {\n      require((cp1Witness[0] - sp2Witness[0]) % FIELD_SIZE != 0,\n              \"points in sum must be distinct\");\n      require(ecmulVerify(p1, c, cp1Witness), \"First multiplication check failed\");\n      require(ecmulVerify(p2, s, sp2Witness), \"Second multiplication check failed\");\n      return affineECAdd(cp1Witness, sp2Witness, zInv);\n    }\n\n  // Domain-separation tag for the hash taken in scalarFromCurvePoints.\n  // Corresponds to scalarFromCurveHashPrefix in vrf.go\n  uint256 constant SCALAR_FROM_CURVE_POINTS_HASH_PREFIX = 2;\n\n  // Pseudo-random number from inputs. Matches vrf.go/scalarFromCurvePoints, and\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3\n  // The draft calls (in step 7, via the definition of string_to_int, in\n  // https://datatracker.ietf.org/doc/html/rfc8017#section-4.2 ) for taking the\n  // first hash without checking that it corresponds to a number less than the\n  // group order, which will lead to a slight bias in the sample.\n  //\n  // TODO(alx): We could save a bit of gas by following the standard here and\n  // using the compressed representation of the points, if we collated the y\n  // parities into a single bytes32.\n  // https://www.pivotaltracker.com/story/show/171120588\n  function scalarFromCurvePoints(\n    uint256[2] memory hash, uint256[2] memory pk, uint256[2] memory gamma,\n    address uWitness, uint256[2] memory v)\n    internal pure returns (uint256 s) {\n      return uint256(\n        keccak256(abi.encodePacked(SCALAR_FROM_CURVE_POINTS_HASH_PREFIX,\n                                   hash, pk, gamma, v, uWitness)));\n    }\n\n  // True if (gamma, c, s) is a correctly constructed randomness proof from pk\n  // and seed. zInv must be the inverse of the third ordinate from\n  // projectiveECAdd applied to cGammaWitness and sHashWitness. Corresponds to\n  // section 5.3 of the IETF draft.\n  //\n  // TODO(alx): Since I'm only using pk in the ecrecover call, I could only pass\n  // the x ordinate, and the parity of the y ordinate in the top bit of uWitness\n  // (which I could make a uint256 without using any extra space.) Would save\n  // about 2000 gas. https://www.pivotaltracker.com/story/show/170828567\n  function verifyVRFProof(\n    uint256[2] memory pk, uint256[2] memory gamma, uint256 c, uint256 s,\n    uint256 seed, address uWitness, uint256[2] memory cGammaWitness,\n    uint256[2] memory sHashWitness, uint256 zInv)\n    internal view {\n      require(isOnCurve(pk), \"public key is not on curve\");\n      require(isOnCurve(gamma), \"gamma is not on curve\");\n      require(isOnCurve(cGammaWitness), \"cGammaWitness is not on curve\");\n      require(isOnCurve(sHashWitness), \"sHashWitness is not on curve\");\n      // Step 5. of IETF draft section 5.3 (pk corresponds to 5.3's Y, and here\n      // we use the address of u instead of u itself. Also, here we add the\n      // terms instead of taking the difference, and in the proof consruction in\n      // vrf.GenerateProof, we correspondingly take the difference instead of\n      // taking the sum as they do in step 7 of section 5.1.)\n      require(\n        verifyLinearCombinationWithGenerator(c, pk, s, uWitness),\n        \"addr(c*pk+s*g)≠_uWitness\"\n      );\n      // Step 4. of IETF draft section 5.3 (pk corresponds to Y, seed to alpha_string)\n      uint256[2] memory hash = hashToCurve(pk, seed);\n      // Step 6. of IETF draft section 5.3, but see note for step 5 about +/- terms\n      uint256[2] memory v = linearCombination(\n        c, gamma, cGammaWitness, s, hash, sHashWitness, zInv);\n      // Steps 7. and 8. of IETF draft section 5.3\n      uint256 derivedC = scalarFromCurvePoints(hash, pk, gamma, uWitness, v);\n      require(c == derivedC, \"invalid proof\");\n    }\n\n  // Domain-separation tag for the hash used as the final VRF output.\n  // Corresponds to vrfRandomOutputHashPrefix in vrf.go\n  uint256 constant VRF_RANDOM_OUTPUT_HASH_PREFIX = 3;\n\n  // Length of proof marshaled to bytes array. Shows layout of proof\n  uint public constant PROOF_LENGTH = 64 + // PublicKey (uncompressed format.)\n    64 + // Gamma\n    32 + // C\n    32 + // S\n    32 + // Seed\n    0 + // Dummy entry: The following elements are included for gas efficiency:\n    32 + // uWitness (gets padded to 256 bits, even though it's only 160)\n    64 + // cGammaWitness\n    64 + // sHashWitness\n    32; // zInv  (Leave Output out, because that can be efficiently calculated)\n\n  /* ***************************************************************************\n   * @notice Returns proof's output, if proof is valid. Otherwise reverts\n\n   * @param proof A binary-encoded proof, as output by vrf.Proof.MarshalForSolidityVerifier\n   *\n   * Throws if proof is invalid, otherwise:\n   * @return output i.e., the random output implied by the proof\n   * ***************************************************************************\n   * @dev See the calculation of PROOF_LENGTH for the binary layout of proof.\n   */\n  function randomValueFromVRFProof(bytes memory proof)\n    internal view returns (uint256 output) {\n      require(proof.length == PROOF_LENGTH, \"wrong proof length\");\n\n      uint256[2] memory pk; // parse proof contents into these variables\n      uint256[2] memory gamma;\n      // c, s and seed combined (prevents \"stack too deep\" compilation error)\n      uint256[3] memory cSSeed;\n      address uWitness;\n      uint256[2] memory cGammaWitness;\n      uint256[2] memory sHashWitness;\n      uint256 zInv;\n      (pk, gamma, cSSeed, uWitness, cGammaWitness, sHashWitness, zInv) = abi.decode(\n        proof, (uint256[2], uint256[2], uint256[3], address, uint256[2],\n                uint256[2], uint256));\n      verifyVRFProof(\n        pk,\n        gamma,\n        cSSeed[0], // c\n        cSSeed[1], // s\n        cSSeed[2], // seed\n        uWitness,\n        cGammaWitness,\n        sHashWitness,\n        zInv\n      );\n      output = uint256(keccak256(abi.encode(VRF_RANDOM_OUTPUT_HASH_PREFIX, gamma)));\n    }\n}"
			},
			"Users/leilei/Downloads/VRFCoordinator/interfaces/BlockHashStoreInterface.sol": {
				"content": "pragma solidity 0.6.6;\n\ninterface BlockHashStoreInterface {\n  function getBlockhash(uint256 number) external view returns (bytes32);\n}"
			},
			"Users/leilei/Downloads/VRFCoordinator/interfaces/LinkTokenInterface.sol": {
				"content": "pragma solidity ^0.6.0;\n\ninterface LinkTokenInterface {\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\n  function approve(address spender, uint256 value) external returns (bool success);\n  function balanceOf(address owner) external view returns (uint256 balance);\n  function decimals() external view returns (uint8 decimalPlaces);\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\n  function increaseApproval(address spender, uint256 subtractedValue) external;\n  function name() external view returns (string memory tokenName);\n  function symbol() external view returns (string memory tokenSymbol);\n  function totalSupply() external view returns (uint256 totalTokensIssued);\n  function transfer(address to, uint256 value) external returns (bool success);\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\n}"
			},
			"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol": {
				"content": "pragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n    * @dev Returns the addition of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `+` operator.\n    *\n    * Requirements:\n    * - Addition cannot overflow.\n    */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the subtraction of two unsigned integers, reverting on\n    * overflow (when the result is negative).\n    *\n    * Counterpart to Solidity's `-` operator.\n    *\n    * Requirements:\n    * - Subtraction cannot overflow.\n    */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b <= a, \"SafeMath: subtraction overflow\");\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the multiplication of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `*` operator.\n    *\n    * Requirements:\n    * - Multiplication cannot overflow.\n    */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the integer division of two unsigned integers. Reverts on\n    * division by zero. The result is rounded towards zero.\n    *\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\n    * uses an invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, \"SafeMath: division by zero\");\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n    * Reverts when dividing by zero.\n    *\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\n    * invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b != 0, \"SafeMath: modulo by zero\");\n    return a % b;\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":589:3363  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":589:3363  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n\n    auxdata: 0xa2646970667358221220c6b253b2d547493b4ff1c5c523b09dab2b134b79e11e5db0dd7dd93fc7fc561b64736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c6b253b2d547493b4ff1c5c523b09dab2b134b79e11e5db0dd7dd93fc7fc561b64736f6c63430006060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 0xB2 MSTORE8 0xB2 0xD5 SELFBALANCE 0x49 EXTCODESIZE 0x4F CALL 0xC5 0xC5 0x23 0xB0 SWAP14 0xAB 0x2B SGT 0x4B PUSH26 0xE11E5DB0DD7DD93FC7FC561B64736F6C63430006060033000000 ",
							"sourceMap": "589:2774:0:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c6b253b2d547493b4ff1c5c523b09dab2b134b79e11e5db0dd7dd93fc7fc561b64736f6c63430006060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 0xB2 MSTORE8 0xB2 0xD5 SELFBALANCE 0x49 EXTCODESIZE 0x4F CALL 0xC5 0xC5 0x23 0xB0 SWAP14 0xAB 0x2B SGT 0x4B PUSH26 0xE11E5DB0DD7DD93FC7FC561B64736F6C63430006060033000000 ",
							"sourceMap": "589:2774:0:-:0;;;;;;12:1:-1;9;2:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 589,
									"end": 3363,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 589,
									"end": 3363,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"source": -1,
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE",
									"source": -1
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS",
									"source": -1
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8",
									"source": -1
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN",
									"source": -1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c6b253b2d547493b4ff1c5c523b09dab2b134b79e11e5db0dd7dd93fc7fc561b64736f6c63430006060033",
									".code": [
										{
											"begin": 589,
											"end": 3363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 589,
											"end": 3363,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 589,
											"end": 3363,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 589,
											"end": 3363,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 589,
											"end": 3363,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 3363,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":{\"keccak256\":\"0x6fa676e33e7598f560867c1dd353babae081c77580cbda47ac6bdffa5fb5fb24\",\"urls\":[\"bzz-raw://2a60cf6f368640c4b3c6457243a8ced9328a3f2bd4c97ed3f7506dc07bc94e27\",\"dweb:/ipfs/Qmd1FK8mjdE8GX4nojZqsgDStV2EeQko7cjDMV2qL1cuBP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"Users/leilei/Downloads/VRFCoordinator/VRF.sol": {
				"VRF": {
					"abi": [
						{
							"inputs": [],
							"name": "PROOF_LENGTH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Bibliographic references:Goldberg, et al., \"Verifiable Random Functions (VRFs)\", Internet Draftdraft-irtf-cfrg-vrf-05, IETF, Aug 11 2019,https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05Papadopoulos, et al., \"Making NSEC5 Practical for DNSSEC\", CryptologyePrint Archive, Report 2017/099, https://eprint.iacr.org/2017/099.pdf ****************************************************************************USAGEThe main entry point is randomValueFromVRFProof. See its docstring. ****************************************************************************PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is computationally indistinguishable to her from a uniformrandom sample from the output space.The purpose of this contract is to perform that verification. ****************************************************************************DESIGN NOTESThe VRF algorithm verified here satisfies the full unqiqueness, fullcollision resistance, and full pseudorandomness security properties.See \"SECURITY PROPERTIES\" below, andhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-3An elliptic curve point is generally represented in the solidity codeas a uint256[2], corresponding to its affine coordinates inGF(FIELD_SIZE).For the sake of efficiency, this implementation deviates from the specin some minor ways:- Keccak hash rather than the SHA256 hash recommended inhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5Keccak costs much less gas on the EVM, and provides similar security.- Secp256k1 curve instead of the P-256 or ED25519 curves recommended inhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5For curve-point multiplication, it's much cheaper to abuse ECRECOVER- hashToCurve recursively hashes until it finds a curve x-ordinate. Onthe EVM, this is slightly more efficient than the recommendation inhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1step 5, to concatenate with a nonce then hash, and rehash with thenonce updated until a valid x-ordinate is found.- hashToCurve does not include a cipher version string or the byte 0x1in the hash message, as recommended in step 5.B of the draftstandard. They are unnecessary here because no variation in thecipher suite is allowed.- Similarly, the hash input in scalarFromCurvePoints does not include acommitment to the cipher suite, either, which differs from step 2 ofhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3. Also, the hash input is the concatenation of the uncompressedpoints, not the compressed points as recommended in step 3.- In the calculation of the challenge value \"c\", the \"u\" value (i.e.the value computed by Reggie as the nonce times the secp256k1generator point, see steps 5 and 7 ofhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3) is replaced by its ethereum address, i.e. the lower 160 bits of thekeccak hash of the original u. This is because we only verify thecalculation of u up to its address, by abusing ECRECOVER. ****************************************************************************SECURITY PROPERTIESHere are the security properties for this VRF:Full uniqueness: For any seed and valid VRF public key, there isexactly one VRF output which can be proved to come from that seed, inthe sense that the proof will pass verifyVRFProof.Full collision resistance: It's cryptographically infeasible to findtwo seeds with same VRF output from a fixed, valid VRF keyFull pseudorandomness: Absent the proofs that the VRF outputs arederived from a given seed, the outputs are computationallyindistinguishable from randomness.https://eprint.iacr.org/2017/099.pdf, Appendix B contains the proofsfor these properties.For secp256k1, the key validation described in sectionhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.6is unnecessary, because secp256k1 has cofactor 1, and therepresentation of the public key used here (affine x- and y-ordinatesof the secp256k1 point on the standard y^2=x^3+7 curve) cannot refer tothe point at infinity. ****************************************************************************OTHER SECURITY CONSIDERATIONSThe seed input to the VRF could in principle force an arbitrary amountof work in hashToCurve, by requiring extra rounds of hashing andchecking whether that's yielded the x ordinate of a secp256k1 point.However, under the Random Oracle Model the probability of choosing apoint which forces n extra rounds in hashToCurve is 2⁻ⁿ. The base costfor calling hashToCurve is about 25,000 gas, and each round of checkingfor a valid x ordinate costs about 15,555 gas, so to find a seed forwhich hashToCurve would cost more than 2,017,000 gas, one would have totry, in expectation, about 2¹²⁸ seeds, which is infeasible for anyforeseeable computational resources. (25,000 + 128 * 15,555 < 2,017,000.)Since the gas block limit for the Ethereum main net is 10,000,000 gas,this means it is infeasible for an adversary to prevent correctoperation of this contract by choosing an adverse seed.(See TestMeasureHashToCurveGasCost for verification of the gas cost forhashToCurve.)It may be possible to make a secure constant-time hashToCurve function.See notes in hashToCurve docstring.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7137:26548  contract VRF {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7137:26548  contract VRF {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7137:26548  contract VRF {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7137:26548  contract VRF {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xe911439c\n      eq\n      tag_3\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24594:24945  uint public constant PROOF_LENGTH = 64 + // PublicKey (uncompressed format.)... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24630:24945  64 + // PublicKey (uncompressed format.)... */\n      0x01a0\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24594:24945  uint public constant PROOF_LENGTH = 64 + // PublicKey (uncompressed format.)... */\n      dup2\n      jump\t// out\n\n    auxdata: 0xa264697066735822122062c568753406fff062c1e3a6fcb943934dc74b1aa812a5e82c9ff3b6a6bbefbf64736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b5060858061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063e911439c14602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6101a08156fea264697066735822122062c568753406fff062c1e3a6fcb943934dc74b1aa812a5e82c9ff3b6a6bbefbf64736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x85 DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE911439C EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A0 DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0xC56875 CALLVALUE MOD SELFDESTRUCT CREATE PUSH3 0xC1E3A6 0xFC 0xB9 NUMBER SWAP4 0x4D 0xC7 0x4B BYTE 0xA8 SLT 0xA5 0xE8 0x2C SWAP16 RETURN 0xB6 0xA6 0xBB 0xEF 0xBF PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "7137:19411:1:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;7137:19411:1;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063e911439c14602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6101a08156fea264697066735822122062c568753406fff062c1e3a6fcb943934dc74b1aa812a5e82c9ff3b6a6bbefbf64736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE911439C EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A0 DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0xC56875 CALLVALUE MOD SELFDESTRUCT CREATE PUSH3 0xC1E3A6 0xFC 0xB9 NUMBER SWAP4 0x4D 0xC7 0x4B BYTE 0xA8 SLT 0xA5 0xE8 0x2C SWAP16 RETURN 0xB6 0xA6 0xBB 0xEF 0xBF PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "7137:19411:1:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;7137:19411:1;;;;;;;;;;;;;;;;12:1:-1;9;2:12;24594:351:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;24630:315;24594:351;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "26600",
								"executionCost": "81",
								"totalCost": "26681"
							},
							"external": {
								"PROOF_LENGTH()": "183"
							},
							"internal": {
								"affineECAdd(uint256[2] memory,uint256[2] memory,uint256)": "infinite",
								"bigModExp(uint256,uint256)": "infinite",
								"ecmulVerify(uint256[2] memory,uint256,uint256[2] memory)": "infinite",
								"fieldHash(bytes memory)": "infinite",
								"hashToCurve(uint256[2] memory,uint256)": "infinite",
								"isOnCurve(uint256[2] memory)": "infinite",
								"linearCombination(uint256,uint256[2] memory,uint256[2] memory,uint256,uint256[2] memory,uint256[2] memory,uint256)": "infinite",
								"newCandidateSecp256k1Point(bytes memory)": "infinite",
								"projectiveECAdd(uint256,uint256,uint256,uint256)": "infinite",
								"projectiveMul(uint256,uint256,uint256,uint256)": "infinite",
								"projectiveSub(uint256,uint256,uint256,uint256)": "infinite",
								"randomValueFromVRFProof(bytes memory)": "infinite",
								"scalarFromCurvePoints(uint256[2] memory,uint256[2] memory,uint256[2] memory,address,uint256[2] memory)": "infinite",
								"squareRoot(uint256)": "infinite",
								"verifyLinearCombinationWithGenerator(uint256,uint256[2] memory,uint256,address)": "infinite",
								"verifyVRFProof(uint256[2] memory,uint256[2] memory,uint256,uint256,uint256,address,uint256[2] memory,uint256[2] memory,uint256)": "infinite",
								"ySquared(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7137,
									"end": 26548,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 7137,
									"end": 26548,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7137,
									"end": 26548,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7137,
									"end": 26548,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 7137,
									"end": 26548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7137,
									"end": 26548,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7137,
									"end": 26548,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7137,
									"end": 26548,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7137,
									"end": 26548,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7137,
									"end": 26548,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 7137,
									"end": 26548,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7137,
									"end": 26548,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122062c568753406fff062c1e3a6fcb943934dc74b1aa812a5e82c9ff3b6a6bbefbf64736f6c63430006060033",
									".code": [
										{
											"begin": 7137,
											"end": 26548,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7137,
											"end": 26548,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7137,
											"end": 26548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 26548,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7137,
											"end": 26548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 26548,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7137,
											"end": 26548,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 26548,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 26548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7137,
											"end": 26548,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 26548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7137,
											"end": 26548,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 26548,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7137,
											"end": 26548,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 26548,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 26548,
											"name": "PUSH",
											"source": 1,
											"value": "E911439C"
										},
										{
											"begin": 7137,
											"end": 26548,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 26548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7137,
											"end": 26548,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 26548,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7137,
											"end": 26548,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24630,
											"end": 24945,
											"name": "PUSH",
											"source": 1,
											"value": "1A0"
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"PROOF_LENGTH()": "e911439c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"PROOF_LENGTH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Bibliographic references:Goldberg, et al., \\\"Verifiable Random Functions (VRFs)\\\", Internet Draftdraft-irtf-cfrg-vrf-05, IETF, Aug 11 2019,https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05Papadopoulos, et al., \\\"Making NSEC5 Practical for DNSSEC\\\", CryptologyePrint Archive, Report 2017/099, https://eprint.iacr.org/2017/099.pdf ****************************************************************************USAGEThe main entry point is randomValueFromVRFProof. See its docstring. ****************************************************************************PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is computationally indistinguishable to her from a uniformrandom sample from the output space.The purpose of this contract is to perform that verification. ****************************************************************************DESIGN NOTESThe VRF algorithm verified here satisfies the full unqiqueness, fullcollision resistance, and full pseudorandomness security properties.See \\\"SECURITY PROPERTIES\\\" below, andhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-3An elliptic curve point is generally represented in the solidity codeas a uint256[2], corresponding to its affine coordinates inGF(FIELD_SIZE).For the sake of efficiency, this implementation deviates from the specin some minor ways:- Keccak hash rather than the SHA256 hash recommended inhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5Keccak costs much less gas on the EVM, and provides similar security.- Secp256k1 curve instead of the P-256 or ED25519 curves recommended inhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5For curve-point multiplication, it's much cheaper to abuse ECRECOVER- hashToCurve recursively hashes until it finds a curve x-ordinate. Onthe EVM, this is slightly more efficient than the recommendation inhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1step 5, to concatenate with a nonce then hash, and rehash with thenonce updated until a valid x-ordinate is found.- hashToCurve does not include a cipher version string or the byte 0x1in the hash message, as recommended in step 5.B of the draftstandard. They are unnecessary here because no variation in thecipher suite is allowed.- Similarly, the hash input in scalarFromCurvePoints does not include acommitment to the cipher suite, either, which differs from step 2 ofhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3. Also, the hash input is the concatenation of the uncompressedpoints, not the compressed points as recommended in step 3.- In the calculation of the challenge value \\\"c\\\", the \\\"u\\\" value (i.e.the value computed by Reggie as the nonce times the secp256k1generator point, see steps 5 and 7 ofhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3) is replaced by its ethereum address, i.e. the lower 160 bits of thekeccak hash of the original u. This is because we only verify thecalculation of u up to its address, by abusing ECRECOVER. ****************************************************************************SECURITY PROPERTIESHere are the security properties for this VRF:Full uniqueness: For any seed and valid VRF public key, there isexactly one VRF output which can be proved to come from that seed, inthe sense that the proof will pass verifyVRFProof.Full collision resistance: It's cryptographically infeasible to findtwo seeds with same VRF output from a fixed, valid VRF keyFull pseudorandomness: Absent the proofs that the VRF outputs arederived from a given seed, the outputs are computationallyindistinguishable from randomness.https://eprint.iacr.org/2017/099.pdf, Appendix B contains the proofsfor these properties.For secp256k1, the key validation described in sectionhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.6is unnecessary, because secp256k1 has cofactor 1, and therepresentation of the public key used here (affine x- and y-ordinatesof the secp256k1 point on the standard y^2=x^3+7 curve) cannot refer tothe point at infinity. ****************************************************************************OTHER SECURITY CONSIDERATIONSThe seed input to the VRF could in principle force an arbitrary amountof work in hashToCurve, by requiring extra rounds of hashing andchecking whether that's yielded the x ordinate of a secp256k1 point.However, under the Random Oracle Model the probability of choosing apoint which forces n extra rounds in hashToCurve is 2\\u207b\\u207f. The base costfor calling hashToCurve is about 25,000 gas, and each round of checkingfor a valid x ordinate costs about 15,555 gas, so to find a seed forwhich hashToCurve would cost more than 2,017,000 gas, one would have totry, in expectation, about 2\\u00b9\\u00b2\\u2078 seeds, which is infeasible for anyforeseeable computational resources. (25,000 + 128 * 15,555 < 2,017,000.)Since the gas block limit for the Ethereum main net is 10,000,000 gas,this means it is infeasible for an adversary to prevent correctoperation of this contract by choosing an adverse seed.(See TestMeasureHashToCurveGasCost for verification of the gas cost forhashToCurve.)It may be possible to make a secure constant-time hashToCurve function.See notes in hashToCurve docstring.\",\"methods\":{}},\"userdoc\":{\"methods\":{},\"notice\":\"****************************************************************************Verification of verifiable-random-function (VRF) proofs, followinghttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3See https://eprint.iacr.org/2017/099.pdf for security proofs.\"}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":\"VRF\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":{\"keccak256\":\"0x82ef9afa58b83af09901c42ae3c8e23ca77064fd256f2bf8b08e9dd04e77864f\",\"urls\":[\"bzz-raw://7041a16497009a5efec9eebad666bae1a83c9333f69875a0fb358b863db0c9e8\",\"dweb:/ipfs/QmThshxL8Fkk2F5L2V2o2aSgXsdC5AUj8gSMn7jUizgrAC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {},
						"notice": "****************************************************************************Verification of verifiable-random-function (VRF) proofs, followinghttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3See https://eprint.iacr.org/2017/099.pdf for security proofs."
					}
				}
			},
			"Users/leilei/Downloads/VRFCoordinator/VRFConsumerBase.sol": {
				"VRFConsumerBase": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_vrfCoordinator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_link",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "requestId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "randomness",
									"type": "uint256"
								}
							],
							"name": "rawFulfillRandomness",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_keyHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_seed",
									"type": "uint256"
								}
							],
							"name": "requestRandomness",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "requestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerInterface, and caninitialize VRFConsumerInterface's attributes in their constructor asshown:contract VRFConsumer {constuctor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator, _link) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash), and have told you the minimum LINKprice for VRF service. Make sure your contract has sufficient LINK, andcall requestRandomness(keyHash, fee, seed), where seed is the input youwant to generate randomness from.Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomness method.The randomness argument to fulfillRandomness is the actual random valuegenerated from your seed.The requestId argument is generated from the keyHash and the seed bymakeRequestId(keyHash, seed). If your contract could have concurrentrequests open, you can use the requestId to track which seed isassociated with which randomness. See VRFRequestIDBase.sol for moredetails.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. (Which is critical to making unpredictable randomness! See thenext section.) * *****************************************************************************SECURITY CONSIDERATIONSSince the ultimate input to the VRF is mixed with the block hash of theblock in which the request is made, user-provided seeds have no impacton its economic security properties. They are only included for APIcompatability with previous versions of this contract.Since the block hash of the block which contains the requestRandomness()call is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls fulfillRandomness().",
						"methods": {
							"requestRandomness(bytes32,uint256,uint256)": {
								"details": "See \"SECURITY CONSIDERATIONS\" above for more information on _seed.The fulfillRandomness method receives the output, once it's providedby the Oracle, and verified by the vrfCoordinator.The _keyHash must already be registered with the VRFCoordinator, andthe _fee must exceed the fee specified during registration of the_keyHash.The returned requestId can be used to distinguish responses to *concurrent requests. It is passed as the first argument tofulfillRandomness.",
								"params": {
									"_fee": "The amount of LINK to send with the request",
									"_keyHash": "ID of public key against which randomness is generated",
									"_seed": "seed mixed into the input of the VRF"
								},
								"returns": {
									"requestId": "unique ID for this request"
								}
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"nonces(bytes32)": "9e317f12",
							"rawFulfillRandomness(bytes32,uint256)": "94985ddd",
							"requestRandomness(bytes32,uint256,uint256)": "dc6cfe10"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_link\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"randomness\",\"type\":\"uint256\"}],\"name\":\"rawFulfillRandomness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_seed\",\"type\":\"uint256\"}],\"name\":\"requestRandomness\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerInterface, and caninitialize VRFConsumerInterface's attributes in their constructor asshown:contract VRFConsumer {constuctor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator, _link) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash), and have told you the minimum LINKprice for VRF service. Make sure your contract has sufficient LINK, andcall requestRandomness(keyHash, fee, seed), where seed is the input youwant to generate randomness from.Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomness method.The randomness argument to fulfillRandomness is the actual random valuegenerated from your seed.The requestId argument is generated from the keyHash and the seed bymakeRequestId(keyHash, seed). If your contract could have concurrentrequests open, you can use the requestId to track which seed isassociated with which randomness. See VRFRequestIDBase.sol for moredetails.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. (Which is critical to making unpredictable randomness! See thenext section.) * *****************************************************************************SECURITY CONSIDERATIONSSince the ultimate input to the VRF is mixed with the block hash of theblock in which the request is made, user-provided seeds have no impacton its economic security properties. They are only included for APIcompatability with previous versions of this contract.Since the block hash of the block which contains the requestRandomness()call is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls fulfillRandomness().\",\"methods\":{\"requestRandomness(bytes32,uint256,uint256)\":{\"details\":\"See \\\"SECURITY CONSIDERATIONS\\\" above for more information on _seed.The fulfillRandomness method receives the output, once it's providedby the Oracle, and verified by the vrfCoordinator.The _keyHash must already be registered with the VRFCoordinator, andthe _fee must exceed the fee specified during registration of the_keyHash.The returned requestId can be used to distinguish responses to *concurrent requests. It is passed as the first argument tofulfillRandomness.\",\"params\":{\"_fee\":\"The amount of LINK to send with the request\",\"_keyHash\":\"ID of public key against which randomness is generated\",\"_seed\":\"seed mixed into the input of the VRF\"},\"returns\":{\"requestId\":\"unique ID for this request\"}}}},\"userdoc\":{\"methods\":{\"requestRandomness(bytes32,uint256,uint256)\":{\"notice\":\"requestRandomness initiates a request for VRF output given _seed\"}},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\"}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/VRFCoordinator/VRFConsumerBase.sol\":\"VRFConsumerBase\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":{\"keccak256\":\"0x6fa676e33e7598f560867c1dd353babae081c77580cbda47ac6bdffa5fb5fb24\",\"urls\":[\"bzz-raw://2a60cf6f368640c4b3c6457243a8ced9328a3f2bd4c97ed3f7506dc07bc94e27\",\"dweb:/ipfs/Qmd1FK8mjdE8GX4nojZqsgDStV2EeQko7cjDMV2qL1cuBP\"]},\"Users/leilei/Downloads/VRFCoordinator/VRFConsumerBase.sol\":{\"keccak256\":\"0x43a14fe073e276a7e029b08e484c209a91a3f247666e839905cde4e494970157\",\"urls\":[\"bzz-raw://8bbcfa5979d35aa628e85c679ad8a6af68f90543e7c604ba76bdc32e743537a2\",\"dweb:/ipfs/QmUaJLdCjaWVCJpnFnngjr9mA1QkCKs1SqjJPmdDw3ntoJ\"]},\"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":{\"keccak256\":\"0xdf34b43d3073edfbf56c9b8d99edd00c09b10eda82dfee45d14d199bf42ee631\",\"urls\":[\"bzz-raw://9f4fe1079f975fe7193964cad81a93776c3ef1be353744b0fbef3a757b750e8d\",\"dweb:/ipfs/QmceqfHiF4SxMPoMJYPEiqPh65UYnBhHKBizFhzG1Q8Bim\"]},\"Users/leilei/Downloads/VRFCoordinator/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xbf1b1b0f6fc72a45cae680506dd7effc625973443cde0b9c24a9ad6a0c08f4a7\",\"urls\":[\"bzz-raw://9d81480b9e88c40870fbf1ac4ef1fa336b83f780ca60f4e699e300da7346f07c\",\"dweb:/ipfs/Qmeezc5gCP5RvRRC27wqDkyZH7do98nqBmNAxie3yajQJz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1366,
								"contract": "Users/leilei/Downloads/VRFCoordinator/VRFConsumerBase.sol:VRFConsumerBase",
								"label": "nonces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_uint256)"
							}
						],
						"types": {
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {
							"requestRandomness(bytes32,uint256,uint256)": {
								"notice": "requestRandomness initiates a request for VRF output given _seed"
							}
						},
						"notice": "****************************************************************************Interface for contracts using VRF randomness *****************************************************************************"
					}
				}
			},
			"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol": {
				"VRFCoordinator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_link",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_blockHashStore",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "keyHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "NewServiceAgreement",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "keyHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "seed",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "jobID",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "requestID",
									"type": "bytes32"
								}
							],
							"name": "RandomnessRequest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "requestId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "output",
									"type": "uint256"
								}
							],
							"name": "RandomnessRequestFulfilled",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "PRESEED_OFFSET",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PROOF_LENGTH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PUBLIC_KEY_OFFSET",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "callbacks",
							"outputs": [
								{
									"internalType": "address",
									"name": "callbackContract",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "randomnessFee",
									"type": "uint96"
								},
								{
									"internalType": "bytes32",
									"name": "seedAndBlockNum",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_proof",
									"type": "bytes"
								}
							],
							"name": "fulfillRandomnessRequest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[2]",
									"name": "_publicKey",
									"type": "uint256[2]"
								}
							],
							"name": "hashOfKey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "onTokenTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_oracle",
									"type": "address"
								},
								{
									"internalType": "uint256[2]",
									"name": "_publicProvingKey",
									"type": "uint256[2]"
								},
								{
									"internalType": "bytes32",
									"name": "_jobID",
									"type": "bytes32"
								}
							],
							"name": "registerProvingKey",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "serviceAgreements",
							"outputs": [
								{
									"internalType": "address",
									"name": "vRFOracle",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "fee",
									"type": "uint96"
								},
								{
									"internalType": "bytes32",
									"name": "jobID",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "withdrawableTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"fulfillRandomnessRequest(bytes)": {
								"details": "The structure of _proof corresponds to vrf.MarshaledOnChainResponse,in the node source code. I.e., it is a vrf.MarshaledProof with theseed replaced by the preSeed, followed by the hash of the requestingblock.",
								"params": {
									"_proof": "the proof of randomness. Actual random output built from this"
								}
							},
							"hashOfKey(uint256[2])": {
								"params": {
									"_publicKey": "the key to return the address for"
								}
							},
							"onTokenTransfer(address,uint256,bytes)": {
								"details": "To invoke this, use the requestRandomness method in VRFConsumerBase.The VRFCoordinator will call back to the calling contract when theoracle responds, on the method fulfillRandomness. SeeVRFConsumerBase.fulfilRandomness for its signature. Your consumingcontract should inherit from VRFConsumerBase, and implementfulfilRandomness.",
								"params": {
									"_data": "abi-encoded call to randomnessRequest",
									"_fee": "amount of LINK sent",
									"_sender": "address: who sent the LINK (must be a contract)"
								}
							},
							"registerProvingKey(uint256,address,uint256[2],bytes32)": {
								"params": {
									"_fee": "minimum LINK payment required to serve randomness",
									"_jobID": "ID of the corresponding chainlink job in the oracle's db",
									"_oracle": "the address of the Chainlink node with the proving key and job",
									"_publicProvingKey": "public key used to prove randomness"
								}
							},
							"withdraw(address,uint256)": {
								"details": "Allows the oracle operator to withdraw their LINK",
								"params": {
									"_amount": "is the amount of LINK transferred from the Coordinator contract",
									"_recipient": "is the address the funds will be sent to"
								}
							}
						},
						"title": "VRFCoordinator coordinates on-chain verifiable-randomness requestswith off-chain responses"
					},
					"evm": {
						"assembly": "    /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":354:12405  contract VRFCoordinator is VRF, VRFRequestIDBase {... */\n  mstore(0x40, 0x80)\n    /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":527:692  constructor(address _link, address _blockHashStore) public {... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":527:692  constructor(address _link, address _blockHashStore) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":15:17   */\n  0x40\n    /* \"--CODEGEN--\":10:13   */\n  dup2\n    /* \"--CODEGEN--\":7:18   */\n  lt\n    /* \"--CODEGEN--\":4:6   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":31:32   */\n  0x00\n    /* \"--CODEGEN--\":28:29   */\n  dup1\n    /* \"--CODEGEN--\":21:33   */\n  revert\n    /* \"--CODEGEN--\":4:6   */\ntag_2:\n    /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":527:692  constructor(address _link, address _blockHashStore) public {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":618:623  _link */\n  dup2\n    /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":592:596  LINK */\n  0x00\n  dup1\n    /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":592:624  LINK = LinkTokenInterface(_link) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":671:686  _blockHashStore */\n  dup1\n    /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":630:644  blockHashStore */\n  0x01\n  0x00\n    /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":630:687  blockHashStore = BlockHashStoreInterface(_blockHashStore) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":527:692  constructor(address _link, address _blockHashStore) public {... */\n  pop\n  pop\n    /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":354:12405  contract VRFCoordinator is VRF, VRFRequestIDBase {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":354:12405  contract VRFCoordinator is VRF, VRFRequestIDBase {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":354:12405  contract VRFCoordinator is VRF, VRFRequestIDBase {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa4c0ed36\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xa4c0ed36\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb415f4f5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xcaf70c4a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd8340209\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe911439c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x6f6ad0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x21f36509\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5e1c1059\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x75d35070\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8aa7927b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":1814:1903  mapping(address /* oracle */ => uint256 /* LINK balance */)... */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_16:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":1814:1903  mapping(address /* oracle */ => uint256 /* LINK balance */)... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_17\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":1654:1724  mapping(bytes32 /* (provingKey, seed) */ => Callback) public callbacks */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_19:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":1654:1724  mapping(bytes32 /* (provingKey, seed) */ => Callback) public callbacks */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_20\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6928:7543  function fulfillRandomnessRequest(bytes memory _proof) public {... */\n    tag_5:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_22:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6928:7543  function fulfillRandomnessRequest(bytes memory _proof) public {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":27:38   */\n      0x0100000000\n        /* \"--CODEGEN--\":14:25   */\n      dup2\n        /* \"--CODEGEN--\":11:39   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":52:53   */\n      0x00\n        /* \"--CODEGEN--\":49:50   */\n      dup1\n        /* \"--CODEGEN--\":42:54   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_23:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6928:7543  function fulfillRandomnessRequest(bytes memory _proof) public {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":41:50   */\n      dup4\n        /* \"--CODEGEN--\":34:38   */\n      0x20\n        /* \"--CODEGEN--\":18:32   */\n      dup3\n        /* \"--CODEGEN--\":14:39   */\n      add\n        /* \"--CODEGEN--\":11:51   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":64:65   */\n      0x00\n        /* \"--CODEGEN--\":61:62   */\n      dup1\n        /* \"--CODEGEN--\":54:66   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_24:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6928:7543  function fulfillRandomnessRequest(bytes memory _proof) public {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_25:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6928:7543  function fulfillRandomnessRequest(bytes memory _proof) public {... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6928:7543  function fulfillRandomnessRequest(bytes memory _proof) public {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_26\n      jump\t// in\n    tag_21:\n      stop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":1728:1810  mapping(bytes32 /* provingKey */ => ServiceAgreement)... */\n    tag_6:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_28:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":1728:1810  mapping(bytes32 /* provingKey */ => ServiceAgreement)... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_29\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6339:6387  uint256 public constant PUBLIC_KEY_OFFSET = 0x20 */\n    tag_7:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":4258:4495  function onTokenTransfer(address _sender, uint256 _fee, bytes memory _data)... */\n    tag_8:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x60\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_33:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":4258:4495  function onTokenTransfer(address _sender, uint256 _fee, bytes memory _data)... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":27:38   */\n      0x0100000000\n        /* \"--CODEGEN--\":14:25   */\n      dup2\n        /* \"--CODEGEN--\":11:39   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":52:53   */\n      0x00\n        /* \"--CODEGEN--\":49:50   */\n      dup1\n        /* \"--CODEGEN--\":42:54   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_34:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":4258:4495  function onTokenTransfer(address _sender, uint256 _fee, bytes memory _data)... */\n      dup3\n      add\n        /* \"--CODEGEN--\":41:50   */\n      dup4\n        /* \"--CODEGEN--\":34:38   */\n      0x20\n        /* \"--CODEGEN--\":18:32   */\n      dup3\n        /* \"--CODEGEN--\":14:39   */\n      add\n        /* \"--CODEGEN--\":11:51   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":64:65   */\n      0x00\n        /* \"--CODEGEN--\":61:62   */\n      dup1\n        /* \"--CODEGEN--\":54:66   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_35:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":4258:4495  function onTokenTransfer(address _sender, uint256 _fee, bytes memory _data)... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_36:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":4258:4495  function onTokenTransfer(address _sender, uint256 _fee, bytes memory _data)... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":4258:4495  function onTokenTransfer(address _sender, uint256 _fee, bytes memory _data)... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_37\n      jump\t// in\n    tag_32:\n      stop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6461:6506  uint256 public constant PRESEED_OFFSET = 0xe0 */\n    tag_9:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11431:11567  function hashOfKey(uint256[2] memory _publicKey) public pure returns (bytes32) {... */\n    tag_10:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_41:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11431:11567  function hashOfKey(uint256[2] memory _publicKey) public pure returns (bytes32) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      0x40\n      add\n      swap1\n      0x02\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x02)\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11431:11567  function hashOfKey(uint256[2] memory _publicKey) public pure returns (bytes32) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":2855:3598  function registerProvingKey(... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:18   */\n      0xa0\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:19   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":32:33   */\n      0x00\n        /* \"--CODEGEN--\":29:30   */\n      dup1\n        /* \"--CODEGEN--\":22:34   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_44:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":2855:3598  function registerProvingKey(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      0x40\n      add\n      swap1\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24594:24945  uint public constant PROOF_LENGTH = 64 + // PublicKey (uncompressed format.)... */\n    tag_12:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11043:11279  function withdraw(address _recipient, uint256 _amount)... */\n    tag_13:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_49:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11043:11279  function withdraw(address _recipient, uint256 _amount)... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":1814:1903  mapping(address /* oracle */ => uint256 /* LINK balance */)... */\n    tag_17:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":1654:1724  mapping(bytes32 /* (provingKey, seed) */ => Callback) public callbacks */\n    tag_20:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6928:7543  function fulfillRandomnessRequest(bytes memory _proof) public {... */\n    tag_26:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6997:7019  bytes32 currentKeyHash */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7021:7045  Callback memory callback */\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7047:7064  bytes32 requestId */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7071:7089  uint256 randomness */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7093:7123  getRandomnessFromProof(_proof) */\n      tag_54\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7116:7122  _proof */\n      dup6\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7093:7115  getRandomnessFromProof */\n      tag_55\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7093:7123  getRandomnessFromProof(_proof) */\n      jump\t// in\n    tag_54:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6996:7123  (bytes32 currentKeyHash, Callback memory callback, bytes32 requestId,... */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7148:7160  address oadd */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7163:7180  serviceAgreements */\n      0x03\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7163:7196  serviceAgreements[currentKeyHash] */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7181:7195  currentKeyHash */\n      dup7\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7163:7196  serviceAgreements[currentKeyHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7163:7206  serviceAgreements[currentKeyHash].vRFOracle */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7148:7206  address oadd = serviceAgreements[currentKeyHash].vRFOracle */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7239:7298  withdrawableTokens[oadd].add(... */\n      tag_56\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7275:7283  callback */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7275:7297  callback.randomnessFee */\n      0x20\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7239:7298  withdrawableTokens[oadd].add(... */\n      0xffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7239:7257  withdrawableTokens */\n      0x04\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7239:7263  withdrawableTokens[oadd] */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7258:7262  oadd */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7239:7263  withdrawableTokens[oadd] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7239:7267  withdrawableTokens[oadd].add */\n      tag_57\n      swap1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7239:7298  withdrawableTokens[oadd].add(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_56:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7212:7230  withdrawableTokens */\n      0x04\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7212:7236  withdrawableTokens[oadd] */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7231:7235  oadd */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7212:7236  withdrawableTokens[oadd] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7212:7298  withdrawableTokens[oadd] = withdrawableTokens[oadd].add(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7379:7388  callbacks */\n      0x02\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7379:7399  callbacks[requestId] */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7389:7398  requestId */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7379:7399  callbacks[requestId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7372:7399  delete callbacks[requestId] */\n      dup1\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x00\n      dup3\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7405:7477  callBackWithRandomness(requestId, randomness, callback.callbackContract) */\n      tag_58\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7428:7437  requestId */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7439:7449  randomness */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7451:7459  callback */\n      dup7\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7451:7476  callback.callbackContract */\n      0x00\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7405:7427  callBackWithRandomness */\n      tag_59\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7405:7477  callBackWithRandomness(requestId, randomness, callback.callbackContract) */\n      jump\t// in\n    tag_58:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7489:7538  RandomnessRequestFulfilled(requestId, randomness) */\n      0xa2e7a402243ebda4a69ceeb3dfb682943b7a9b3ac66d6eefa8db65894009611c\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7516:7525  requestId */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7527:7537  randomness */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7489:7538  RandomnessRequestFulfilled(requestId, randomness) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6928:7543  function fulfillRandomnessRequest(bytes memory _proof) public {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":1728:1810  mapping(bytes32 /* provingKey */ => ServiceAgreement)... */\n    tag_29:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6339:6387  uint256 public constant PUBLIC_KEY_OFFSET = 0x20 */\n    tag_31:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6383:6387  0x20 */\n      0x20\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6339:6387  uint256 public constant PUBLIC_KEY_OFFSET = 0x20 */\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":4258:4495  function onTokenTransfer(address _sender, uint256 _fee, bytes memory _data)... */\n    tag_37:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":12050:12054  LINK */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":12028:12055  msg.sender == address(LINK) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":12028:12038  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":12028:12055  msg.sender == address(LINK) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":12020:12079  require(msg.sender == address(LINK), \"Must use LINK token\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x13\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4d75737420757365204c494e4b20746f6b656e00000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":4367:4382  bytes32 keyHash */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":4384:4396  uint256 seed */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":4411:4416  _data */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":4400:4437  abi.decode(_data, (bytes32, uint256)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_63:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":4400:4437  abi.decode(_data, (bytes32, uint256)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":4366:4437  (bytes32 keyHash, uint256 seed) = abi.decode(_data, (bytes32, uint256)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":4443:4490  randomnessRequest(keyHash, seed, _fee, _sender) */\n      tag_64\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":4461:4468  keyHash */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":4470:4474  seed */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":4476:4480  _fee */\n      dup7\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":4482:4489  _sender */\n      dup9\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":4443:4460  randomnessRequest */\n      tag_65\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":4443:4490  randomnessRequest(keyHash, seed, _fee, _sender) */\n      jump\t// in\n    tag_64:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":12085:12086  _ */\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":4258:4495  function onTokenTransfer(address _sender, uint256 _fee, bytes memory _data)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6461:6506  uint256 public constant PRESEED_OFFSET = 0xe0 */\n    tag_39:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6502:6506  0xe0 */\n      0xe0\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6461:6506  uint256 public constant PRESEED_OFFSET = 0xe0 */\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11431:11567  function hashOfKey(uint256[2] memory _publicKey) public pure returns (bytes32) {... */\n    tag_42:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11501:11508  bytes32 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11550:11560  _publicKey */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11533:11561  abi.encodePacked(_publicKey) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      mul(0x20, 0x02)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_67:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_67)\n    tag_69:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11533:11561  abi.encodePacked(_publicKey) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11533:11561  abi.encodePacked(_publicKey) */\n      swap1\n      0x40\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11523:11562  keccak256(abi.encodePacked(_publicKey)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11516:11562  return keccak256(abi.encodePacked(_publicKey)) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11431:11567  function hashOfKey(uint256[2] memory _publicKey) public pure returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":2855:3598  function registerProvingKey(... */\n    tag_45:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":2998:3013  bytes32 keyHash */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3016:3044  hashOfKey(_publicProvingKey) */\n      tag_71\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3026:3043  _publicProvingKey */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3016:3044  hashOfKey(_publicProvingKey) */\n      0x02\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x02)\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3016:3044  hashOfKey(_publicProvingKey) */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3016:3025  hashOfKey */\n      tag_42\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3016:3044  hashOfKey(_publicProvingKey) */\n      jump\t// in\n    tag_71:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":2998:3044  bytes32 keyHash = hashOfKey(_publicProvingKey) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3050:3070  address oldVRFOracle */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3073:3090  serviceAgreements */\n      0x03\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3073:3099  serviceAgreements[keyHash] */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3091:3098  keyHash */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3073:3099  serviceAgreements[keyHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3073:3109  serviceAgreements[keyHash].vRFOracle */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3050:3109  address oldVRFOracle = serviceAgreements[keyHash].vRFOracle */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3147:3148  0 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3123:3149  oldVRFOracle == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3123:3135  oldVRFOracle */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3123:3149  oldVRFOracle == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3115:3179  require(oldVRFOracle == address(0), \"please register a new key\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x706c656173652072656769737465722061206e6577206b657900000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3212:3213  0 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3193:3214  _oracle != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3193:3200  _oracle */\n      dup6\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3193:3214  _oracle != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3185:3242  require(_oracle != address(0), \"_oracle must not be 0x0\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x17\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5f6f7261636c65206d757374206e6f7420626520307830000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3287:3294  _oracle */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3248:3265  serviceAgreements */\n      0x03\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3248:3274  serviceAgreements[keyHash] */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3266:3273  keyHash */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3248:3274  serviceAgreements[keyHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3248:3284  serviceAgreements[keyHash].vRFOracle */\n      0x00\n      add\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3248:3294  serviceAgreements[keyHash].vRFOracle = _oracle */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3335:3341  _jobID */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3300:3317  serviceAgreements */\n      0x03\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3300:3326  serviceAgreements[keyHash] */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3318:3325  keyHash */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3300:3326  serviceAgreements[keyHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3300:3332  serviceAgreements[keyHash].jobID */\n      0x01\n      add\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3300:3341  serviceAgreements[keyHash].jobID = _jobID */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3417:3426  1e9 ether */\n      0x033b2e3c9fd0803ce8000000\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3409:3413  _fee */\n      dup7\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3409:3426  _fee <= 1e9 ether */\n      gt\n      iszero\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3401:3497  require(_fee <= 1e9 ether,... */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_3a4898a14f86303f4f0f062cf67700e5107caf8a2238d9bba8aa8f9b688110e9\n      0x3c\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3543:3547  _fee */\n      dup6\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3503:3520  serviceAgreements */\n      0x03\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3503:3529  serviceAgreements[keyHash] */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3521:3528  keyHash */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3503:3529  serviceAgreements[keyHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3503:3533  serviceAgreements[keyHash].fee */\n      0x00\n      add\n      0x14\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3503:3548  serviceAgreements[keyHash].fee = uint96(_fee) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3559:3593  NewServiceAgreement(keyHash, _fee) */\n      0xae189157e0628c1e62315e9179156e1ea10e90e9c15060002f7021e907dc2cfe\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3579:3586  keyHash */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3588:3592  _fee */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":3559:3593  NewServiceAgreement(keyHash, _fee) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":2855:3598  function registerProvingKey(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24594:24945  uint public constant PROOF_LENGTH = 64 + // PublicKey (uncompressed format.)... */\n    tag_47:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24630:24945  64 + // PublicKey (uncompressed format.)... */\n      0x01a0\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24594:24945  uint public constant PROOF_LENGTH = 64 + // PublicKey (uncompressed format.)... */\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11043:11279  function withdraw(address _recipient, uint256 _amount)... */\n    tag_50:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11133:11140  _amount */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":12346:12353  _amount */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":12312:12330  withdrawableTokens */\n      0x04\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":12312:12342  withdrawableTokens[msg.sender] */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":12331:12341  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":12312:12342  withdrawableTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":12312:12353  withdrawableTokens[msg.sender] >= _amount */\n      lt\n      iszero\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":12304:12390  require(withdrawableTokens[msg.sender] >= _amount, \"can't withdraw more than balance\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x63616e2774207769746864726177206d6f7265207468616e2062616c616e6365\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11183:11226  withdrawableTokens[msg.sender].sub(_amount) */\n      tag_78\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11218:11225  _amount */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11183:11201  withdrawableTokens */\n      0x04\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11183:11213  withdrawableTokens[msg.sender] */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11202:11212  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11183:11213  withdrawableTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11183:11217  withdrawableTokens[msg.sender].sub */\n      tag_79\n      swap1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11183:11226  withdrawableTokens[msg.sender].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_78:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11150:11168  withdrawableTokens */\n      0x04\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11150:11180  withdrawableTokens[msg.sender] */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11169:11179  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11150:11180  withdrawableTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11150:11226  withdrawableTokens[msg.sender] = withdrawableTokens[msg.sender].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11239:11243  LINK */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11239:11252  LINK.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11253:11263  _recipient */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11265:11272  _amount */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11239:11273  LINK.transfer(_recipient, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_80\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_80:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11239:11273  LINK.transfer(_recipient, _amount) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_82\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_82:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11239:11273  LINK.transfer(_recipient, _amount) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_83\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_83:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11239:11273  LINK.transfer(_recipient, _amount) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11232:11274  assert(LINK.transfer(_recipient, _amount)) */\n      tag_84\n      jumpi\n      invalid\n    tag_84:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11043:11279  function withdraw(address _recipient, uint256 _amount)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":8940:10819  function getRandomnessFromProof(bytes memory _proof)... */\n    tag_55:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9020:9042  bytes32 currentKeyHash */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9044:9068  Callback memory callback */\n      tag_85\n      tag_53\n      jump\t// in\n    tag_85:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9076:9093  bytes32 requestId */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9095:9113  uint256 randomness */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9273:9296  uint256 BLOCKNUM_OFFSET */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24630:24945  64 + // PublicKey (uncompressed format.)... */\n      0x01a0\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9299:9303  0x20 */\n      0x20\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9299:9318  0x20 + PROOF_LENGTH */\n      add\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9273:9318  uint256 BLOCKNUM_OFFSET = 0x20 + PROOF_LENGTH */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9473:9488  BLOCKNUM_OFFSET */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9456:9462  _proof */\n      dup7\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9456:9469  _proof.length */\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9456:9488  _proof.length == BLOCKNUM_OFFSET */\n      eq\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9448:9511  require(_proof.length == BLOCKNUM_OFFSET, \"wrong proof length\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x77726f6e672070726f6f66206c656e6774680000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9517:9544  uint256[2] memory publicKey */\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9550:9565  uint256 preSeed */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9571:9587  uint256 blockNum */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9678:9695  PUBLIC_KEY_OFFSET */\n      0x20\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9670:9676  _proof */\n      dup10\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9666:9696  add(_proof, PUBLIC_KEY_OFFSET) */\n      add\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9653:9696  publicKey := add(_proof, PUBLIC_KEY_OFFSET) */\n      swap3\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9732:9746  PRESEED_OFFSET */\n      0xe0\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9724:9730  _proof */\n      dup10\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9720:9747  add(_proof, PRESEED_OFFSET) */\n      add\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9714:9748  mload(add(_proof, PRESEED_OFFSET)) */\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9703:9748  preSeed := mload(add(_proof, PRESEED_OFFSET)) */\n      swap2\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9785:9800  BLOCKNUM_OFFSET */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9777:9783  _proof */\n      dup10\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9773:9801  add(_proof, BLOCKNUM_OFFSET) */\n      add\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9767:9802  mload(add(_proof, BLOCKNUM_OFFSET)) */\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9755:9802  blockNum := mload(add(_proof, BLOCKNUM_OFFSET)) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9830:9850  hashOfKey(publicKey) */\n      tag_90\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9840:9849  publicKey */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9830:9839  hashOfKey */\n      tag_42\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9830:9850  hashOfKey(publicKey) */\n      jump\t// in\n    tag_90:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9813:9850  currentKeyHash = hashOfKey(publicKey) */\n      swap8\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9868:9906  makeRequestId(currentKeyHash, preSeed) */\n      tag_91\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9882:9896  currentKeyHash */\n      dup9\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9898:9905  preSeed */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9868:9881  makeRequestId */\n      tag_92\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9868:9906  makeRequestId(currentKeyHash, preSeed) */\n      jump\t// in\n    tag_91:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9856:9906  requestId = makeRequestId(currentKeyHash, preSeed) */\n      swap6\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9923:9932  callbacks */\n      0x02\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9923:9943  callbacks[requestId] */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9933:9942  requestId */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9923:9943  callbacks[requestId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9912:9943  callback = callbacks[requestId] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap7\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9994:9995  0 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9957:9996  callback.callbackContract != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9957:9965  callback */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9957:9982  callback.callbackContract */\n      0x00\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9957:9996  callback.callbackContract != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":9949:10025  require(callback.callbackContract != address(0), \"no corresponding request\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6e6f20636f72726573706f6e64696e6720726571756573740000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10094:10101  preSeed */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10109:10117  blockNum */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10077:10118  abi.encodePacked(preSeed,... */\n      add(0x20, mload(0x40))\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10077:10118  abi.encodePacked(preSeed,... */\n      swap1\n      0x40\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10067:10119  keccak256(abi.encodePacked(preSeed,... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10039:10047  callback */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10039:10063  callback.seedAndBlockNum */\n      0x40\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10039:10119  callback.seedAndBlockNum == keccak256(abi.encodePacked(preSeed,... */\n      eq\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10031:10150  require(callback.seedAndBlockNum == keccak256(abi.encodePacked(preSeed,... */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x77726f6e672070726553656564206f7220626c6f636b206e756d000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10157:10174  bytes32 blockHash */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10187:10195  blockNum */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10177:10196  blockhash(blockNum) */\n      blockhash\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10157:10196  bytes32 blockHash = blockhash(blockNum) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10227:10228  0 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10219:10229  bytes32(0) */\n      dup1\n      shl\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10206:10215  blockHash */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10206:10229  blockHash == bytes32(0) */\n      eq\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10202:10361  if (blockHash == bytes32(0)) {... */\n      iszero\n      tag_95\n      jumpi\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10251:10265  blockHashStore */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10251:10278  blockHashStore.getBlockhash */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe9413d38\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10279:10287  blockNum */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10251:10288  blockHashStore.getBlockhash(blockNum) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_96\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_96:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10251:10288  blockHashStore.getBlockhash(blockNum) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_98\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_98:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10251:10288  blockHashStore.getBlockhash(blockNum) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_99\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_99:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10251:10288  blockHashStore.getBlockhash(blockNum) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10239:10288  blockHash = blockHashStore.getBlockhash(blockNum) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10325:10326  0 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10317:10327  bytes32(0) */\n      dup1\n      shl\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10304:10313  blockHash */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10304:10327  blockHash != bytes32(0) */\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10296:10354  require(blockHash != bytes32(0), \"please prove blockhash\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x16\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x706c656173652070726f766520626c6f636b6861736800000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10202:10361  if (blockHash == bytes32(0)) {... */\n    tag_95:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10442:10460  uint256 actualSeed */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10498:10505  preSeed */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10507:10516  blockHash */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10481:10517  abi.encodePacked(preSeed, blockHash) */\n      add(0x20, mload(0x40))\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10481:10517  abi.encodePacked(preSeed, blockHash) */\n      swap1\n      0x40\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10471:10518  keccak256(abi.encodePacked(preSeed, blockHash)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10463:10519  uint256(keccak256(abi.encodePacked(preSeed, blockHash))) */\n      0x00\n      shr\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10442:10519  uint256 actualSeed = uint256(keccak256(abi.encodePacked(preSeed, blockHash))) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10687:10697  actualSeed */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10670:10684  PRESEED_OFFSET */\n      0xe0\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10662:10668  _proof */\n      dup13\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10658:10685  add(_proof, PRESEED_OFFSET) */\n      add\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10651:10698  mstore(add(_proof, PRESEED_OFFSET), actualSeed) */\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10720:10732  PROOF_LENGTH */\n      0x01a0\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10712:10718  _proof */\n      dup12\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10705:10733  mstore(_proof, PROOF_LENGTH) */\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10757:10792  VRF.randomValueFromVRFProof(_proof) */\n      tag_101\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10785:10791  _proof */\n      dup12\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10757:10784  VRF.randomValueFromVRFProof */\n      tag_102\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10757:10792  VRF.randomValueFromVRFProof(_proof) */\n      jump\t// in\n    tag_101:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":10744:10792  randomness = VRF.randomValueFromVRFProof(_proof) */\n      swap7\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":8940:10819  function getRandomnessFromProof(bytes memory _proof)... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap4\n      pop\n      swap2\n      swap4\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":822:984  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_57:\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":880:887  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":895:904  uint256 c */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":911:912  b */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":907:908  a */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":907:912  a + b */\n      add\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":895:912  uint256 c = a + b */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":931:932  a */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":926:927  c */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":926:932  c >= a */\n      lt\n      iszero\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":918:964  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":978:979  c */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":971:979  return c */\n      swap2\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":822:984  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7547:8936  function callBackWithRandomness(bytes32 requestId, uint256 randomness,... */\n    tag_59:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7816:7833  VRFConsumerBase v */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7839:7856  bytes memory resp */\n      0x60\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7889:7920  v.rawFulfillRandomness.selector */\n      shl(0xe0, 0x94985ddd)\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7922:7931  requestId */\n      dup6\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7933:7943  randomness */\n      dup6\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7859:7944  abi.encodeWithSelector(... */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7859:7944  abi.encodeWithSelector(... */\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7859:7944  abi.encodeWithSelector(... */\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7839:7944  bytes memory resp = abi.encodeWithSelector(... */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":8213:8222  uint256 b */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":8225:8231  206000 */\n      0x0324b0\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":8213:8231  uint256 b = 206000 */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":8258:8259  b */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":8245:8254  gasleft() */\n      gas\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":8245:8259  gasleft() >= b */\n      lt\n      iszero\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":8237:8291  require(gasleft() >= b, \"not enough gas for consumer\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6e6f7420656e6f7567682067617320666f7220636f6e73756d65720000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":8716:8728  bool success */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":8733:8749  consumerContract */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":8733:8754  consumerContract.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":8755:8759  resp */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":8733:8760  consumerContract.call(resp) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_107:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_109\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_107)\n    tag_109:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":8733:8760  consumerContract.call(resp) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":12:13   */\n      dup1\n        /* \"--CODEGEN--\":19:20   */\n      0x00\n        /* \"--CODEGEN--\":14:41   */\n      dup2\n      eq\n      tag_112\n      jumpi\n        /* \"--CODEGEN--\":67:71   */\n      0x40\n        /* \"--CODEGEN--\":61:72   */\n      mload\n        /* \"--CODEGEN--\":56:72   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":134:138   */\n      0x1f\n        /* \"--CODEGEN--\":130:139   */\n      not\n        /* \"--CODEGEN--\":123:127   */\n      0x3f\n        /* \"--CODEGEN--\":105:121   */\n      returndatasize\n        /* \"--CODEGEN--\":101:128   */\n      add\n        /* \"--CODEGEN--\":97:140   */\n      and\n        /* \"--CODEGEN--\":94:95   */\n      dup3\n        /* \"--CODEGEN--\":90:141   */\n      add\n        /* \"--CODEGEN--\":84:88   */\n      0x40\n        /* \"--CODEGEN--\":77:142   */\n      mstore\n        /* \"--CODEGEN--\":157:173   */\n      returndatasize\n        /* \"--CODEGEN--\":154:155   */\n      dup3\n        /* \"--CODEGEN--\":147:174   */\n      mstore\n        /* \"--CODEGEN--\":211:227   */\n      returndatasize\n        /* \"--CODEGEN--\":208:209   */\n      0x00\n        /* \"--CODEGEN--\":201:205   */\n      0x20\n        /* \"--CODEGEN--\":198:199   */\n      dup5\n        /* \"--CODEGEN--\":194:206   */\n      add\n        /* \"--CODEGEN--\":179:228   */\n      returndatacopy\n        /* \"--CODEGEN--\":5:233   */\n      jump(tag_111)\n        /* \"--CODEGEN--\":14:41   */\n    tag_112:\n        /* \"--CODEGEN--\":32:36   */\n      0x60\n        /* \"--CODEGEN--\":27:36   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":5:233   */\n    tag_111:\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":8715:8760  (bool success,) = consumerContract.call(resp) */\n      pop\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":7547:8936  function callBackWithRandomness(bytes32 requestId, uint256 randomness,... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5243:6209  function randomnessRequest(... */\n    tag_65:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5398:5406  _feePaid */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5408:5416  _keyHash */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11862:11879  serviceAgreements */\n      0x03\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11862:11889  serviceAgreements[_keyHash] */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11880:11888  _keyHash */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11862:11889  serviceAgreements[_keyHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11862:11893  serviceAgreements[_keyHash].fee */\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11850:11893  _feePaid >= serviceAgreements[_keyHash].fee */\n      0xffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11850:11858  _feePaid */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11850:11893  _feePaid >= serviceAgreements[_keyHash].fee */\n      lt\n      iszero\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11842:11918  require(_feePaid >= serviceAgreements[_keyHash].fee, \"Below agreed payment\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x42656c6f7720616772656564207061796d656e74000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5426:5439  uint256 nonce */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5442:5448  nonces */\n      0x05\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5442:5458  nonces[_keyHash] */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5449:5457  _keyHash */\n      dup9\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5442:5458  nonces[_keyHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5442:5467  nonces[_keyHash][_sender] */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5459:5466  _sender */\n      dup6\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5442:5467  nonces[_keyHash][_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5426:5467  uint256 nonce = nonces[_keyHash][_sender] */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5473:5488  uint256 preSeed */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5491:5548  makeVRFInputSeed(_keyHash, _consumerSeed, _sender, nonce) */\n      tag_116\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5508:5516  _keyHash */\n      dup9\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5518:5531  _consumerSeed */\n      dup9\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5533:5540  _sender */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5542:5547  nonce */\n      dup6\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5491:5507  makeVRFInputSeed */\n      tag_117\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5491:5548  makeVRFInputSeed(_keyHash, _consumerSeed, _sender, nonce) */\n      jump\t// in\n    tag_116:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5473:5548  uint256 preSeed = makeVRFInputSeed(_keyHash, _consumerSeed, _sender, nonce) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5554:5571  bytes32 requestId */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5574:5606  makeRequestId(_keyHash, preSeed) */\n      tag_118\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5588:5596  _keyHash */\n      dup10\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5598:5605  preSeed */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5574:5587  makeRequestId */\n      tag_92\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5574:5606  makeRequestId(_keyHash, preSeed) */\n      jump\t// in\n    tag_118:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5554:5606  bytes32 requestId = makeRequestId(_keyHash, preSeed) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5745:5746  0 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5696:5747  callbacks[requestId].callbackContract == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5696:5705  callbacks */\n      0x02\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5696:5716  callbacks[requestId] */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5706:5715  requestId */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5696:5716  callbacks[requestId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5696:5733  callbacks[requestId].callbackContract */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5696:5747  callbacks[requestId].callbackContract == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5689:5748  assert(callbacks[requestId].callbackContract == address(0)) */\n      tag_119\n      jumpi\n      invalid\n    tag_119:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5794:5801  _sender */\n      dup6\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5754:5763  callbacks */\n      0x02\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5754:5774  callbacks[requestId] */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5764:5773  requestId */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5754:5774  callbacks[requestId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5754:5791  callbacks[requestId].callbackContract */\n      0x00\n      add\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5754:5801  callbacks[requestId].callbackContract = _sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5825:5829  1e27 */\n      0x033b2e3c9fd0803ce8000000\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5814:5822  _feePaid */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5814:5829  _feePaid < 1e27 */\n      lt\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5807:5830  assert(_feePaid < 1e27) */\n      tag_120\n      jumpi\n      invalid\n    tag_120:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5909:5917  _feePaid */\n      dup7\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5865:5874  callbacks */\n      0x02\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5865:5885  callbacks[requestId] */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5875:5884  requestId */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5865:5885  callbacks[requestId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5865:5899  callbacks[requestId].randomnessFee */\n      0x00\n      add\n      0x14\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5865:5918  callbacks[requestId].randomnessFee = uint96(_feePaid) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5997:6004  preSeed */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6006:6018  block.number */\n      number\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5973:6019  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5973:6019  abi.encodePacked(... */\n      swap1\n      0x40\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5963:6020  keccak256(abi.encodePacked(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5924:5933  callbacks */\n      0x02\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5924:5944  callbacks[requestId] */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5934:5943  requestId */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5924:5944  callbacks[requestId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5924:5960  callbacks[requestId].seedAndBlockNum */\n      0x01\n      add\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5924:6020  callbacks[requestId].seedAndBlockNum = keccak256(abi.encodePacked(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6068:6085  serviceAgreements */\n      0x03\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6068:6095  serviceAgreements[_keyHash] */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6086:6094  _keyHash */\n      dup11\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6068:6095  serviceAgreements[_keyHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6068:6101  serviceAgreements[_keyHash].jobID */\n      0x01\n      add\n      sload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6031:6138  RandomnessRequest(_keyHash, preSeed, serviceAgreements[_keyHash].jobID,... */\n      0x56bd374744a66d531874338def36c906e3a6cf31176eb1e9afd9f1de69725d51\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6049:6057  _keyHash */\n      dup11\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6059:6066  preSeed */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6109:6116  _sender */\n      dup10\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6118:6126  _feePaid */\n      dup12\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6128:6137  requestId */\n      dup7\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6031:6138  RandomnessRequest(_keyHash, preSeed, serviceAgreements[_keyHash].jobID,... */\n      mload(0x40)\n      dup1\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6172:6204  nonces[_keyHash][_sender].add(1) */\n      tag_121\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6202:6203  1 */\n      0x01\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6172:6178  nonces */\n      0x05\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6172:6188  nonces[_keyHash] */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6179:6187  _keyHash */\n      dup13\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6172:6188  nonces[_keyHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6172:6197  nonces[_keyHash][_sender] */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6189:6196  _sender */\n      dup10\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6172:6197  nonces[_keyHash][_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6172:6201  nonces[_keyHash][_sender].add */\n      tag_57\n      swap1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6172:6204  nonces[_keyHash][_sender].add(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_121:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6144:6150  nonces */\n      0x05\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6144:6160  nonces[_keyHash] */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6151:6159  _keyHash */\n      dup12\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6144:6160  nonces[_keyHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6144:6169  nonces[_keyHash][_sender] */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6161:6168  _sender */\n      dup9\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6144:6169  nonces[_keyHash][_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":6144:6204  nonces[_keyHash][_sender] = nonces[_keyHash][_sender].add(1) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":11924:11925  _ */\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":5243:6209  function randomnessRequest(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":1236:1401  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_79:\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":1294:1301  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":1322:1323  a */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":1317:1318  b */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":1317:1323  b <= a */\n      gt\n      iszero\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":1309:1358  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":1364:1373  uint256 c */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":1380:1381  b */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":1376:1377  a */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":1376:1381  a - b */\n      sub\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":1364:1381  uint256 c = a - b */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":1395:1396  c */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":1388:1396  return c */\n      swap2\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":1236:1401  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":1376:1547  function makeRequestId(... */\n    tag_92:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":1468:1475  bytes32 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":1517:1525  _keyHash */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":1527:1540  _vRFInputSeed */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":1500:1541  abi.encodePacked(_keyHash, _vRFInputSeed) */\n      add(0x20, mload(0x40))\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":1500:1541  abi.encodePacked(_keyHash, _vRFInputSeed) */\n      swap1\n      0x40\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":1490:1542  keccak256(abi.encodePacked(_keyHash, _vRFInputSeed)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":1483:1542  return keccak256(abi.encodePacked(_keyHash, _vRFInputSeed)) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":1376:1547  function makeRequestId(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":25549:26546  function randomValueFromVRFProof(bytes memory proof)... */\n    tag_102:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":25629:25643  uint256 output */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24630:24945  64 + // PublicKey (uncompressed format.)... */\n      0x01a0\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":25661:25666  proof */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":25661:25673  proof.length */\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":25661:25689  proof.length == PROOF_LENGTH */\n      eq\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":25653:25712  require(proof.length == PROOF_LENGTH, \"wrong proof length\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x77726f6e672070726f6f66206c656e6774680000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":25721:25741  uint256[2] memory pk */\n      tag_127\n      tag_89\n      jump\t// in\n    tag_127:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":25794:25817  uint256[2] memory gamma */\n      tag_128\n      tag_89\n      jump\t// in\n    tag_128:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":25903:25927  uint256[3] memory cSSeed */\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":25935:25951  address uWitness */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":25959:25990  uint256[2] memory cGammaWitness */\n      tag_131\n      tag_89\n      jump\t// in\n    tag_131:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":25998:26028  uint256[2] memory sHashWitness */\n      tag_132\n      tag_89\n      jump\t// in\n    tag_132:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26036:26048  uint256 zInv */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26143:26148  proof */\n      dup9\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26123:26245  abi.decode(... */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n        /* \"--CODEGEN--\":15:18   */\n      0x01a0\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:19   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_133\n      jumpi\n        /* \"--CODEGEN--\":32:33   */\n      0x00\n        /* \"--CODEGEN--\":29:30   */\n      dup1\n        /* \"--CODEGEN--\":22:34   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_133:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26123:26245  abi.decode(... */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      dup3\n      0x40\n      add\n      swap2\n      swap1\n      dup3\n      0x40\n      add\n      swap2\n      swap1\n      dup3\n      0x60\n      add\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      swap2\n      swap1\n      dup3\n      0x40\n      add\n      swap2\n      swap1\n      dup3\n      0x40\n      add\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26056:26245  (pk, gamma, cSSeed, uWitness, cGammaWitness, sHashWitness, zInv) = abi.decode(... */\n      dup4\n      swap4\n      pop\n      dup1\n      swap8\n      pop\n      dup2\n      swap9\n      pop\n      dup3\n      swap10\n      pop\n      dup4\n      swap11\n      pop\n      dup5\n      swap12\n      pop\n      dup6\n      swap13\n      pop\n      dup7\n      swap14\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26253:26454  verifyVRFProof(... */\n      tag_134\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26277:26279  pk */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26289:26294  gamma */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26304:26310  cSSeed */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26311:26312  0 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26304:26313  cSSeed[0] */\n      0x03\n      dup2\n      lt\n      tag_135\n      jumpi\n      invalid\n    tag_135:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26328:26334  cSSeed */\n      dup9\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26335:26336  1 */\n      0x01\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26328:26337  cSSeed[1] */\n      0x03\n      dup2\n      lt\n      tag_136\n      jumpi\n      invalid\n    tag_136:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26352:26358  cSSeed */\n      dup10\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26359:26360  2 */\n      0x02\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26352:26361  cSSeed[2] */\n      0x03\n      dup2\n      lt\n      tag_137\n      jumpi\n      invalid\n    tag_137:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26379:26387  uWitness */\n      dup10\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26397:26410  cGammaWitness */\n      dup10\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26420:26432  sHashWitness */\n      dup10\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26442:26446  zInv */\n      dup10\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26253:26267  verifyVRFProof */\n      tag_138\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26253:26454  verifyVRFProof(... */\n      jump\t// in\n    tag_134:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24519:24520  3 */\n      0x03\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26531:26536  gamma */\n      dup7\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26489:26537  abi.encode(VRF_RANDOM_OUTPUT_HASH_PREFIX, gamma) */\n      add(0x20, mload(0x40))\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      mul(0x20, 0x02)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_139:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_141\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_139)\n    tag_141:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26489:26537  abi.encode(VRF_RANDOM_OUTPUT_HASH_PREFIX, gamma) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26489:26537  abi.encode(VRF_RANDOM_OUTPUT_HASH_PREFIX, gamma) */\n      swap1\n      0x40\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26479:26538  keccak256(abi.encode(VRF_RANDOM_OUTPUT_HASH_PREFIX, gamma)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26471:26539  uint256(keccak256(abi.encode(VRF_RANDOM_OUTPUT_HASH_PREFIX, gamma))) */\n      0x00\n      shr\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":26462:26539  output = uint256(keccak256(abi.encode(VRF_RANDOM_OUTPUT_HASH_PREFIX, gamma))) */\n      swap8\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":25549:26546  function randomValueFromVRFProof(bytes memory proof)... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":765:996  function makeVRFInputSeed(bytes32 _keyHash, uint256 _userSeed,... */\n    tag_117:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":895:902  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":949:957  _keyHash */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":959:968  _userSeed */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":970:980  _requester */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":982:988  _nonce */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":938:989  abi.encode(_keyHash, _userSeed, _requester, _nonce) */\n      add(0x20, mload(0x40))\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":938:989  abi.encode(_keyHash, _userSeed, _requester, _nonce) */\n      swap1\n      0x40\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":928:990  keccak256(abi.encode(_keyHash, _userSeed, _requester, _nonce)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":920:991  uint256(keccak256(abi.encode(_keyHash, _userSeed, _requester, _nonce))) */\n      0x00\n      shr\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":912:991  return  uint256(keccak256(abi.encode(_keyHash, _userSeed, _requester, _nonce))) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":765:996  function makeVRFInputSeed(bytes32 _keyHash, uint256 _userSeed,... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":22819:24340  function verifyVRFProof(... */\n    tag_138:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23070:23083  isOnCurve(pk) */\n      tag_144\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23080:23082  pk */\n      dup10\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23070:23079  isOnCurve */\n      tag_145\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23070:23083  isOnCurve(pk) */\n      jump\t// in\n    tag_144:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23062:23114  require(isOnCurve(pk), \"public key is not on curve\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7075626c6963206b6579206973206e6f74206f6e206375727665000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23130:23146  isOnCurve(gamma) */\n      tag_147\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23140:23145  gamma */\n      dup9\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23130:23139  isOnCurve */\n      tag_145\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23130:23146  isOnCurve(gamma) */\n      jump\t// in\n    tag_147:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23122:23172  require(isOnCurve(gamma), \"gamma is not on curve\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x67616d6d61206973206e6f74206f6e2063757276650000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23188:23212  isOnCurve(cGammaWitness) */\n      tag_149\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23198:23211  cGammaWitness */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23188:23197  isOnCurve */\n      tag_145\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23188:23212  isOnCurve(cGammaWitness) */\n      jump\t// in\n    tag_149:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23180:23246  require(isOnCurve(cGammaWitness), \"cGammaWitness is not on curve\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6347616d6d615769746e657373206973206e6f74206f6e206375727665000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23262:23285  isOnCurve(sHashWitness) */\n      tag_151\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23272:23284  sHashWitness */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23262:23271  isOnCurve */\n      tag_145\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23262:23285  isOnCurve(sHashWitness) */\n      jump\t// in\n    tag_151:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23254:23318  require(isOnCurve(sHashWitness), \"sHashWitness is not on curve\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x73486173685769746e657373206973206e6f74206f6e20637572766500000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23720:23776  verifyLinearCombinationWithGenerator(c, pk, s, uWitness) */\n      tag_153\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23757:23758  c */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23760:23762  pk */\n      dup11\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23764:23765  s */\n      dup9\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23767:23775  uWitness */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23720:23756  verifyLinearCombinationWithGenerator */\n      tag_154\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23720:23776  verifyLinearCombinationWithGenerator(c, pk, s, uWitness) */\n      jump\t// in\n    tag_153:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23703:23822  require(... */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6164647228632a706b2b732a6729e289a05f755769746e657373000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23917:23939  uint256[2] memory hash */\n      tag_156\n      tag_89\n      jump\t// in\n    tag_156:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23942:23963  hashToCurve(pk, seed) */\n      tag_157\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23954:23956  pk */\n      dup11\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23958:23962  seed */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23942:23953  hashToCurve */\n      tag_158\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23942:23963  hashToCurve(pk, seed) */\n      jump\t// in\n    tag_157:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":23917:23963  uint256[2] memory hash = hashToCurve(pk, seed) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24055:24074  uint256[2] memory v */\n      tag_159\n      tag_89\n      jump\t// in\n    tag_159:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24077:24157  linearCombination(... */\n      tag_160\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24104:24105  c */\n      dup10\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24107:24112  gamma */\n      dup12\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24114:24127  cGammaWitness */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24129:24130  s */\n      dup12\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24132:24136  hash */\n      dup7\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24138:24150  sHashWitness */\n      dup10\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24152:24156  zInv */\n      dup10\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24077:24094  linearCombination */\n      tag_161\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24077:24157  linearCombination(... */\n      jump\t// in\n    tag_160:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24055:24157  uint256[2] memory v = linearCombination(... */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24216:24232  uint256 derivedC */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24235:24286  scalarFromCurvePoints(hash, pk, gamma, uWitness, v) */\n      tag_162\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24257:24261  hash */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24263:24265  pk */\n      dup14\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24267:24272  gamma */\n      dup14\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24274:24282  uWitness */\n      dup11\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24284:24285  v */\n      dup7\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24235:24256  scalarFromCurvePoints */\n      tag_163\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24235:24286  scalarFromCurvePoints(hash, pk, gamma, uWitness, v) */\n      jump\t// in\n    tag_162:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24216:24286  uint256 derivedC = scalarFromCurvePoints(hash, pk, gamma, uWitness, v) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24307:24315  derivedC */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24302:24303  c */\n      dup11\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24302:24315  c == derivedC */\n      eq\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":24294:24333  require(c == derivedC, \"invalid proof\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x696e76616c69642070726f6f6600000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":22819:24340  function verifyVRFProof(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9658:9793  function isOnCurve(uint256[2] memory p) internal pure returns (bool) {... */\n    tag_145:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9721:9725  bool */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9758:9788  mulmod(p[1], p[1], FIELD_SIZE) */\n      dup1\n      tag_166\n      jumpi\n      invalid\n    tag_166:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9771:9772  p */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9773:9774  1 */\n      0x01\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9771:9775  p[1] */\n      0x02\n      dup2\n      lt\n      tag_167\n      jumpi\n      invalid\n    tag_167:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9765:9766  p */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9767:9768  1 */\n      0x01\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9765:9769  p[1] */\n      0x02\n      dup2\n      lt\n      tag_168\n      jumpi\n      invalid\n    tag_168:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9758:9788  mulmod(p[1], p[1], FIELD_SIZE) */\n      mulmod\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9740:9754  ySquared(p[0]) */\n      tag_169\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9749:9750  p */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9751:9752  0 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9749:9753  p[0] */\n      0x02\n      dup2\n      lt\n      tag_170\n      jumpi\n      invalid\n    tag_170:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9740:9748  ySquared */\n      tag_171\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9740:9754  ySquared(p[0]) */\n      jump\t// in\n    tag_169:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9740:9788  ySquared(p[0]) == mulmod(p[1], p[1], FIELD_SIZE) */\n      eq\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9733:9788  return ySquared(p[0]) == mulmod(p[1], p[1], FIELD_SIZE) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9658:9793  function isOnCurve(uint256[2] memory p) internal pure returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18872:19916  function verifyLinearCombinationWithGenerator(... */\n    tag_154:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19012:19016  bool */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19121:19122  0 */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19100:19123  lcWitness != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19100:19109  lcWitness */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19100:19123  lcWitness != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19092:19139  require(lcWitness != address(0), \"bad witness\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x626164207769746e657373000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19147:19154  uint8 v */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19170:19171  0 */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19165:19166  2 */\n      0x02\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19158:19159  p */\n      dup7\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19160:19161  1 */\n      0x01\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19158:19162  p[1] */\n      0x02\n      dup2\n      lt\n      tag_174\n      jumpi\n      invalid\n    tag_174:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19158:19166  p[1] % 2 */\n      dup2\n      tag_175\n      jumpi\n      invalid\n    tag_175:\n      mod\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19158:19171  p[1] % 2 == 0 */\n      eq\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19157:19182  (p[1] % 2 == 0) ? 27 : 28 */\n      tag_176\n      jumpi\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19180:19182  28 */\n      0x1c\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19157:19182  (p[1] % 2 == 0) ? 27 : 28 */\n      jump(tag_177)\n    tag_176:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19175:19177  27 */\n      0x1b\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19157:19182  (p[1] % 2 == 0) ? 27 : 28 */\n    tag_177:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19147:19182  uint8 v = (p[1] % 2 == 0) ? 27 : 28 */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19219:19237  bytes32 pseudoHash */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7354:7420  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 */\n      0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19262:19290  mulmod(p[0], s, GROUP_ORDER) */\n      dup1\n      tag_178\n      jumpi\n      invalid\n    tag_178:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19275:19276  s */\n      dup6\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19269:19270  p */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19271:19272  0 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19269:19273  p[0] */\n      0x02\n      dup2\n      lt\n      tag_179\n      jumpi\n      invalid\n    tag_179:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19262:19290  mulmod(p[0], s, GROUP_ORDER) */\n      mulmod\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7354:7420  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 */\n      0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19248:19290  GROUP_ORDER - mulmod(p[0], s, GROUP_ORDER) */\n      sub\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19240:19291  bytes32(GROUP_ORDER - mulmod(p[0], s, GROUP_ORDER)) */\n      0x00\n      shl\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19219:19291  bytes32 pseudoHash = bytes32(GROUP_ORDER - mulmod(p[0], s, GROUP_ORDER)) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19310:19333  bytes32 pseudoSignature */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7354:7420  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 */\n      0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19344:19372  mulmod(c, p[0], GROUP_ORDER) */\n      dup1\n      tag_180\n      jumpi\n      invalid\n    tag_180:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19354:19355  p */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19356:19357  0 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19354:19358  p[0] */\n      0x02\n      dup2\n      lt\n      tag_181\n      jumpi\n      invalid\n    tag_181:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19351:19352  c */\n      dup10\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19344:19372  mulmod(c, p[0], GROUP_ORDER) */\n      mulmod\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19336:19373  bytes32(mulmod(c, p[0], GROUP_ORDER)) */\n      0x00\n      shl\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19310:19373  bytes32 pseudoSignature = bytes32(mulmod(c, p[0], GROUP_ORDER)) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19798:19814  address computed */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19817:19873  ecrecover(pseudoHash, v, bytes32(p[0]), pseudoSignature) */\n      0x01\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19827:19837  pseudoHash */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19839:19840  v */\n      dup6\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19850:19851  p */\n      dup11\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19852:19853  0 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19850:19854  p[0] */\n      0x02\n      dup2\n      lt\n      tag_182\n      jumpi\n      invalid\n    tag_182:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19842:19855  bytes32(p[0]) */\n      0x00\n      shl\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19857:19872  pseudoSignature */\n      dup6\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19817:19873  ecrecover(pseudoHash, v, bytes32(p[0]), pseudoSignature) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_184\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_184:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19817:19873  ecrecover(pseudoHash, v, bytes32(p[0]), pseudoSignature) */\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19798:19873  address computed = ecrecover(pseudoHash, v, bytes32(p[0]), pseudoSignature) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19900:19909  lcWitness */\n      dup6\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19888:19909  computed == lcWitness */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19888:19896  computed */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19888:19909  computed == lcWitness */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":19881:19909  return computed == lcWitness */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18872:19916  function verifyLinearCombinationWithGenerator(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":11832:12201  function hashToCurve(uint256[2] memory pk, uint256 input)... */\n    tag_158:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":11917:11937  uint256[2] memory rv */\n      tag_185\n      tag_89\n      jump\t// in\n    tag_185:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":11952:12089  newCandidateSecp256k1Point(abi.encodePacked(HASH_TO_CURVE_HASH_PREFIX,... */\n      tag_187\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":11058:11059  1 */\n      0x01\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12078:12080  pk */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12082:12087  input */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":11979:12088  abi.encodePacked(HASH_TO_CURVE_HASH_PREFIX,... */\n      add(0x20, mload(0x40))\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      mul(0x20, 0x02)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_188:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_190\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_188)\n    tag_190:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":11979:12088  abi.encodePacked(HASH_TO_CURVE_HASH_PREFIX,... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":11979:12088  abi.encodePacked(HASH_TO_CURVE_HASH_PREFIX,... */\n      swap1\n      0x40\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":11952:11978  newCandidateSecp256k1Point */\n      tag_191\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":11952:12089  newCandidateSecp256k1Point(abi.encodePacked(HASH_TO_CURVE_HASH_PREFIX,... */\n      jump\t// in\n    tag_187:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":11947:12089  rv = newCandidateSecp256k1Point(abi.encodePacked(HASH_TO_CURVE_HASH_PREFIX,... */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12097:12195  while (!isOnCurve(rv)) {... */\n    tag_192:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12105:12118  isOnCurve(rv) */\n      tag_194\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12115:12117  rv */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12105:12114  isOnCurve */\n      tag_145\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12105:12118  isOnCurve(rv) */\n      jump\t// in\n    tag_194:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12097:12195  while (!isOnCurve(rv)) {... */\n      tag_193\n      jumpi\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12135:12186  newCandidateSecp256k1Point(abi.encodePacked(rv[0])) */\n      tag_195\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12179:12181  rv */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12182:12183  0 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12179:12184  rv[0] */\n      0x02\n      dup2\n      lt\n      tag_196\n      jumpi\n      invalid\n    tag_196:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12162:12185  abi.encodePacked(rv[0]) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12162:12185  abi.encodePacked(rv[0]) */\n      swap1\n      0x40\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12135:12161  newCandidateSecp256k1Point */\n      tag_191\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12135:12186  newCandidateSecp256k1Point(abi.encodePacked(rv[0])) */\n      jump\t// in\n    tag_195:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12130:12186  rv = newCandidateSecp256k1Point(abi.encodePacked(rv[0])) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12097:12195  while (!isOnCurve(rv)) {... */\n      jump(tag_192)\n    tag_193:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":11832:12201  function hashToCurve(uint256[2] memory pk, uint256 input)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20399:20971  function linearCombination(... */\n    tag_161:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20606:20623  uint256[2] memory */\n      tag_197\n      tag_89\n      jump\t// in\n    tag_197:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20689:20690  0 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20658:20668  sp2Witness */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20669:20670  0 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20658:20671  sp2Witness[0] */\n      0x02\n      dup2\n      lt\n      tag_199\n      jumpi\n      invalid\n    tag_199:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20642:20652  cp1Witness */\n      dup9\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20653:20654  0 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20642:20655  cp1Witness[0] */\n      0x02\n      dup2\n      lt\n      tag_200\n      jumpi\n      invalid\n    tag_200:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20642:20671  cp1Witness[0] - sp2Witness[0] */\n      sub\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20641:20685  (cp1Witness[0] - sp2Witness[0]) % FIELD_SIZE */\n      dup2\n      tag_201\n      jumpi\n      invalid\n    tag_201:\n      mod\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20641:20690  (cp1Witness[0] - sp2Witness[0]) % FIELD_SIZE != 0 */\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20633:20739  require((cp1Witness[0] - sp2Witness[0]) % FIELD_SIZE != 0,... */\n      tag_202\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x706f696e747320696e2073756d206d7573742062652064697374696e63740000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_202:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20755:20785  ecmulVerify(p1, c, cp1Witness) */\n      tag_203\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20767:20769  p1 */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20771:20772  c */\n      dup10\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20774:20784  cp1Witness */\n      dup9\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20755:20766  ecmulVerify */\n      tag_204\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20755:20785  ecmulVerify(p1, c, cp1Witness) */\n      jump\t// in\n    tag_203:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20747:20823  require(ecmulVerify(p1, c, cp1Witness), \"First multiplication check failed\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_40e788544e29554c975084a69228c0b0b4a1c9c1f6404406ec2b6d9b86d179a9\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_205:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20839:20869  ecmulVerify(p2, s, sp2Witness) */\n      tag_206\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20851:20853  p2 */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20855:20856  s */\n      dup7\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20858:20868  sp2Witness */\n      dup6\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20839:20850  ecmulVerify */\n      tag_204\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20839:20869  ecmulVerify(p2, s, sp2Witness) */\n      jump\t// in\n    tag_206:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20831:20908  require(ecmulVerify(p2, s, sp2Witness), \"Second multiplication check failed\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_4bae64ba22ed7fbb776e6032297d511b182dfd08020c93d70fec3cfcc33a5267\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20923:20964  affineECAdd(cp1Witness, sp2Witness, zInv) */\n      tag_208\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20935:20945  cp1Witness */\n      dup7\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20947:20957  sp2Witness */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20959:20963  zInv */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20923:20934  affineECAdd */\n      tag_209\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20923:20964  affineECAdd(cp1Witness, sp2Witness, zInv) */\n      jump\t// in\n    tag_208:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20916:20964  return affineECAdd(cp1Witness, sp2Witness, zInv) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":20399:20971  function linearCombination(... */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":21878:22236  function scalarFromCurvePoints(... */\n    tag_163:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":22055:22064  uint256 s */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":21159:21160  2 */\n      0x02\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":22198:22202  hash */\n      dup7\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":22204:22206  pk */\n      dup7\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":22208:22213  gamma */\n      dup7\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":22215:22216  v */\n      dup6\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":22218:22226  uWitness */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":22108:22227  abi.encodePacked(SCALAR_FROM_CURVE_POINTS_HASH_PREFIX,... */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      mul(0x20, 0x02)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_211:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_213\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_211)\n    tag_213:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":22108:22227  abi.encodePacked(SCALAR_FROM_CURVE_POINTS_HASH_PREFIX,... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup6\n      mul(0x20, 0x02)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_214:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_216\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_214)\n    tag_216:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":22108:22227  abi.encodePacked(SCALAR_FROM_CURVE_POINTS_HASH_PREFIX,... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup5\n      mul(0x20, 0x02)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_217:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_219\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_217)\n    tag_219:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":22108:22227  abi.encodePacked(SCALAR_FROM_CURVE_POINTS_HASH_PREFIX,... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup4\n      mul(0x20, 0x02)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_220:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_222\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_220)\n    tag_222:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":22108:22227  abi.encodePacked(SCALAR_FROM_CURVE_POINTS_HASH_PREFIX,... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x60\n      shl\n      dup2\n      mstore\n      0x14\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":22108:22227  abi.encodePacked(SCALAR_FROM_CURVE_POINTS_HASH_PREFIX,... */\n      swap1\n      0x40\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":22098:22228  keccak256(abi.encodePacked(SCALAR_FROM_CURVE_POINTS_HASH_PREFIX,... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":22081:22229  uint256(... */\n      0x00\n      shr\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":22074:22229  return uint256(... */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":21878:22236  function scalarFromCurvePoints(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9363:9622  function ySquared(uint256 x) internal pure returns (uint256) {... */\n    tag_171:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9415:9422  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9511:9525  uint256 xCubed */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9528:9575  mulmod(x, mulmod(x, x, FIELD_SIZE), FIELD_SIZE) */\n      dup1\n      tag_224\n      jumpi\n      invalid\n    tag_224:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9538:9562  mulmod(x, x, FIELD_SIZE) */\n      dup1\n      tag_225\n      jumpi\n      invalid\n    tag_225:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9548:9549  x */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9545:9546  x */\n      dup6\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9538:9562  mulmod(x, x, FIELD_SIZE) */\n      mulmod\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9535:9536  x */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9528:9575  mulmod(x, mulmod(x, x, FIELD_SIZE), FIELD_SIZE) */\n      mulmod\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9511:9575  uint256 xCubed = mulmod(x, mulmod(x, x, FIELD_SIZE), FIELD_SIZE) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9588:9617  addmod(xCubed, 7, FIELD_SIZE) */\n      dup1\n      tag_226\n      jumpi\n      invalid\n    tag_226:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9603:9604  7 */\n      0x07\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9595:9601  xCubed */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9588:9617  addmod(xCubed, 7, FIELD_SIZE) */\n      addmod\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9581:9617  return addmod(xCubed, 7, FIELD_SIZE) */\n      swap2\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9363:9622  function ySquared(uint256 x) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10656:10900  function newCandidateSecp256k1Point(bytes memory b)... */\n    tag_191:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10735:10754  uint256[2] memory p */\n      tag_227\n      tag_89\n      jump\t// in\n    tag_227:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10771:10783  fieldHash(b) */\n      tag_229\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10781:10782  b */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10771:10780  fieldHash */\n      tag_230\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10771:10783  fieldHash(b) */\n      jump\t// in\n    tag_229:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10764:10765  p */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10766:10767  0 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10764:10768  p[0] */\n      0x02\n      dup2\n      lt\n      tag_231\n      jumpi\n      invalid\n    tag_231:\n      0x20\n      mul\n      add\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10764:10783  p[0] = fieldHash(b) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10798:10824  squareRoot(ySquared(p[0])) */\n      tag_232\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10809:10823  ySquared(p[0]) */\n      tag_233\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10818:10819  p */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10820:10821  0 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10818:10822  p[0] */\n      0x02\n      dup2\n      lt\n      tag_234\n      jumpi\n      invalid\n    tag_234:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10809:10817  ySquared */\n      tag_171\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10809:10823  ySquared(p[0]) */\n      jump\t// in\n    tag_233:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10798:10808  squareRoot */\n      tag_235\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10798:10824  squareRoot(ySquared(p[0])) */\n      jump\t// in\n    tag_232:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10791:10792  p */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10793:10794  1 */\n      0x01\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10791:10795  p[1] */\n      0x02\n      dup2\n      lt\n      tag_236\n      jumpi\n      invalid\n    tag_236:\n      0x20\n      mul\n      add\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10791:10824  p[1] = squareRoot(ySquared(p[0])) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10848:10849  1 */\n      0x01\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10843:10844  2 */\n      0x02\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10836:10837  p */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10838:10839  1 */\n      0x01\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10836:10840  p[1] */\n      0x02\n      dup2\n      lt\n      tag_237\n      jumpi\n      invalid\n    tag_237:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10836:10844  p[1] % 2 */\n      dup2\n      tag_238\n      jumpi\n      invalid\n    tag_238:\n      mod\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10836:10849  p[1] % 2 == 1 */\n      eq\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10832:10894  if (p[1] % 2 == 1) {... */\n      iszero\n      tag_239\n      jumpi\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10881:10882  p */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10883:10884  1 */\n      0x01\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10881:10885  p[1] */\n      0x02\n      dup2\n      lt\n      tag_240\n      jumpi\n      invalid\n    tag_240:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10868:10885  FIELD_SIZE - p[1] */\n      sub\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10861:10862  p */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10863:10864  1 */\n      0x01\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10861:10865  p[1] */\n      0x02\n      dup2\n      lt\n      tag_241\n      jumpi\n      invalid\n    tag_241:\n      0x20\n      mul\n      add\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10861:10885  p[1] = FIELD_SIZE - p[1] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10832:10894  if (p[1] % 2 == 1) {... */\n    tag_239:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10656:10900  function newCandidateSecp256k1Point(bytes memory b)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12693:13671  function ecmulVerify(uint256[2] memory multiplicand, uint256 scalar,... */\n    tag_204:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12815:12828  bool verifies */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12856:12857  0 */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12846:12852  scalar */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12846:12857  scalar != 0 */\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12838:12858  require(scalar != 0) */\n      tag_243\n      jumpi\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12838:12858  require(scalar != 0) */\n    tag_243:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12903:12912  uint256 x */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12915:12927  multiplicand */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12928:12929  0 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12915:12930  multiplicand[0] */\n      0x02\n      dup2\n      lt\n      tag_244\n      jumpi\n      invalid\n    tag_244:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12903:12930  uint256 x = multiplicand[0] */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12966:12973  uint8 v */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12999:13000  0 */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12994:12995  2 */\n      0x02\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12976:12988  multiplicand */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12989:12990  1 */\n      0x01\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12976:12991  multiplicand[1] */\n      0x02\n      dup2\n      lt\n      tag_245\n      jumpi\n      invalid\n    tag_245:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12976:12995  multiplicand[1] % 2 */\n      dup2\n      tag_246\n      jumpi\n      invalid\n    tag_246:\n      mod\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12976:13000  multiplicand[1] % 2 == 0 */\n      eq\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12976:13010  multiplicand[1] % 2 == 0 ? 27 : 28 */\n      tag_247\n      jumpi\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13008:13010  28 */\n      0x1c\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12976:13010  multiplicand[1] % 2 == 0 ? 27 : 28 */\n      jump(tag_248)\n    tag_247:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13003:13005  27 */\n      0x1b\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12976:13010  multiplicand[1] % 2 == 0 ? 27 : 28 */\n    tag_248:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12966:13010  uint8 v = multiplicand[1] % 2 == 0 ? 27 : 28 */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13359:13379  bytes32 scalarTimesX */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7354:7420  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 */\n      0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13390:13420  mulmod(scalar, x, GROUP_ORDER) */\n      dup1\n      tag_249\n      jumpi\n      invalid\n    tag_249:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13405:13406  x */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13397:13403  scalar */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13390:13420  mulmod(scalar, x, GROUP_ORDER) */\n      mulmod\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13382:13421  bytes32(mulmod(scalar, x, GROUP_ORDER)) */\n      0x00\n      shl\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13359:13421  bytes32 scalarTimesX = bytes32(mulmod(scalar, x, GROUP_ORDER)) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13427:13441  address actual */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13444:13494  ecrecover(bytes32(0), v, bytes32(x), scalarTimesX) */\n      0x01\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13462:13463  0 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13454:13464  bytes32(0) */\n      dup1\n      shl\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13466:13467  v */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13477:13478  x */\n      dup7\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13469:13479  bytes32(x) */\n      0x00\n      shl\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13481:13493  scalarTimesX */\n      dup6\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13444:13494  ecrecover(bytes32(0), v, bytes32(x), scalarTimesX) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_251\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_251:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13444:13494  ecrecover(bytes32(0), v, bytes32(x), scalarTimesX) */\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13427:13494  address actual = ecrecover(bytes32(0), v, bytes32(x), scalarTimesX) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13560:13576  address expected */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13622:13629  product */\n      dup7\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13605:13630  abi.encodePacked(product) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      mul(0x20, 0x02)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_252:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_254\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_252)\n    tag_254:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13605:13630  abi.encodePacked(product) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13605:13630  abi.encodePacked(product) */\n      swap1\n      0x40\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13595:13631  keccak256(abi.encodePacked(product)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13587:13632  uint256(keccak256(abi.encodePacked(product))) */\n      0x00\n      shr\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13560:13633  address expected = address(uint256(keccak256(abi.encodePacked(product)))) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13657:13665  expected */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13647:13665  actual == expected */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13647:13653  actual */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13647:13665  actual == expected */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13639:13666  return (actual == expected) */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":12693:13671  function ecmulVerify(uint256[2] memory multiplicand, uint256 scalar,... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18234:18753  function affineECAdd(... */\n    tag_209:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18345:18362  uint256[2] memory */\n      tag_255\n      tag_89\n      jump\t// in\n    tag_255:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18370:18379  uint256 x */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18385:18394  uint256 y */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18400:18409  uint256 z */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18427:18470  projectiveECAdd(p1[0], p1[1], p2[0], p2[1]) */\n      tag_257\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18443:18445  p1 */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18446:18447  0 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18443:18448  p1[0] */\n      0x02\n      dup2\n      lt\n      tag_258\n      jumpi\n      invalid\n    tag_258:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18450:18452  p1 */\n      dup9\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18453:18454  1 */\n      0x01\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18450:18455  p1[1] */\n      0x02\n      dup2\n      lt\n      tag_259\n      jumpi\n      invalid\n    tag_259:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18457:18459  p2 */\n      dup9\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18460:18461  0 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18457:18462  p2[0] */\n      0x02\n      dup2\n      lt\n      tag_260\n      jumpi\n      invalid\n    tag_260:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18464:18466  p2 */\n      dup10\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18467:18468  1 */\n      0x01\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18464:18469  p2[1] */\n      0x02\n      dup2\n      lt\n      tag_261\n      jumpi\n      invalid\n    tag_261:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18427:18442  projectiveECAdd */\n      tag_262\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18427:18470  projectiveECAdd(p1[0], p1[1], p2[0], p2[1]) */\n      jump\t// in\n    tag_257:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18415:18470  (x, y, z) = projectiveECAdd(p1[0], p1[1], p2[0], p2[1]) */\n      dup1\n      swap4\n      pop\n      dup2\n      swap5\n      pop\n      dup3\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18515:18516  1 */\n      0x01\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18484:18511  mulmod(z, invZ, FIELD_SIZE) */\n      dup1\n      tag_263\n      jumpi\n      invalid\n    tag_263:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18494:18498  invZ */\n      dup7\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18491:18492  z */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18484:18511  mulmod(z, invZ, FIELD_SIZE) */\n      mulmod\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18484:18516  mulmod(z, invZ, FIELD_SIZE) == 1 */\n      eq\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18476:18546  require(mulmod(z, invZ, FIELD_SIZE) == 1, \"invZ must be inverse of z\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x696e765a206d75737420626520696e7665727365206f66207a00000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_264:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18683:18748  return [mulmod(x, invZ, FIELD_SIZE), mulmod(y, invZ, FIELD_SIZE)] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18691:18718  mulmod(x, invZ, FIELD_SIZE) */\n      dup1\n      tag_265\n      jumpi\n      invalid\n    tag_265:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18701:18705  invZ */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18698:18699  x */\n      dup7\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18691:18718  mulmod(x, invZ, FIELD_SIZE) */\n      mulmod\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18683:18748  return [mulmod(x, invZ, FIELD_SIZE), mulmod(y, invZ, FIELD_SIZE)] */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18720:18747  mulmod(y, invZ, FIELD_SIZE) */\n      dup1\n      tag_266\n      jumpi\n      invalid\n    tag_266:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18730:18734  invZ */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18727:18728  y */\n      dup6\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18720:18747  mulmod(y, invZ, FIELD_SIZE) */\n      mulmod\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18683:18748  return [mulmod(x, invZ, FIELD_SIZE), mulmod(y, invZ, FIELD_SIZE)] */\n      dup2\n      mstore\n      pop\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":18234:18753  function affineECAdd(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9848:10242  function fieldHash(bytes memory b) internal pure returns (uint256 x_) {... */\n    tag_230:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9906:9916  uint256 x_ */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9947:9948  b */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9937:9949  keccak256(b) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9929:9950  uint256(keccak256(b)) */\n      0x00\n      shr\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9924:9950  x_ = uint256(keccak256(b)) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10153:10238  while (x_ >= FIELD_SIZE) {... */\n    tag_268:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10160:10162  x_ */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10160:10176  x_ >= FIELD_SIZE */\n      lt\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10153:10238  while (x_ >= FIELD_SIZE) {... */\n      tag_269\n      jumpi\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10226:10228  x_ */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10209:10229  abi.encodePacked(x_) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10209:10229  abi.encodePacked(x_) */\n      swap1\n      0x40\n      mstore\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10199:10230  keccak256(abi.encodePacked(x_)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10191:10231  uint256(keccak256(abi.encodePacked(x_))) */\n      0x00\n      shr\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10186:10231  x_ = uint256(keccak256(abi.encodePacked(x_))) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":10153:10238  while (x_ >= FIELD_SIZE) {... */\n      jump(tag_268)\n    tag_269:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9848:10242  function fieldHash(bytes memory b) internal pure returns (uint256 x_) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9198:9303  function squareRoot(uint256 x) internal view returns (uint256) {... */\n    tag_235:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9252:9259  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9274:9298  bigModExp(x, SQRT_POWER) */\n      tag_271\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9284:9285  x */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9132:9133  2 */\n      0x02\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9126:9127  1 */\n      0x01\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9113:9127  FIELD_SIZE + 1 */\n      add\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9112:9133  (FIELD_SIZE + 1) >> 2 */\n      swap1\n      shr\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9274:9283  bigModExp */\n      tag_272\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9274:9298  bigModExp(x, SQRT_POWER) */\n      jump\t// in\n    tag_271:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9267:9298  return bigModExp(x, SQRT_POWER) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":9198:9303  function squareRoot(uint256 x) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":15969:17965  function projectiveECAdd(uint256 px, uint256 py, uint256 qx, uint256 qy)... */\n    tag_262:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":16068:16078  uint256 sx */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":16080:16090  uint256 sy */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":16092:16102  uint256 sz */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":16783:16793  uint256 z1 */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":16795:16805  uint256 z2 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":16810:16811  1 */\n      0x01\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":16813:16814  1 */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":16782:16815  (uint256 z1, uint256 z2) = (1, 1) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":16892:16902  uint256 lx */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":16905:16944  addmod(qy, FIELD_SIZE - py, FIELD_SIZE) */\n      dup1\n      tag_274\n      jumpi\n      invalid\n    tag_274:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":16929:16931  py */\n      dup10\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":16916:16931  FIELD_SIZE - py */\n      sub\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":16912:16914  qy */\n      dup9\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":16905:16944  addmod(qy, FIELD_SIZE - py, FIELD_SIZE) */\n      addmod\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":16892:16944  uint256 lx = addmod(qy, FIELD_SIZE - py, FIELD_SIZE) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":16952:16962  uint256 lz */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":16965:17004  addmod(qx, FIELD_SIZE - px, FIELD_SIZE) */\n      dup1\n      tag_275\n      jumpi\n      invalid\n    tag_275:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":16989:16991  px */\n      dup12\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":16976:16991  FIELD_SIZE - px */\n      sub\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":16972:16974  qx */\n      dup11\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":16965:17004  addmod(qx, FIELD_SIZE - px, FIELD_SIZE) */\n      addmod\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":16952:17004  uint256 lz = addmod(qx, FIELD_SIZE - px, FIELD_SIZE) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17013:17023  uint256 dx */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17127:17156  projectiveMul(lx, lz, lx, lz) */\n      tag_276\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17141:17143  lx */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17145:17147  lz */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17149:17151  lx */\n      dup6\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17153:17155  lz */\n      dup6\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17127:17140  projectiveMul */\n      tag_277\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17127:17156  projectiveMul(lx, lz, lx, lz) */\n      jump\t// in\n    tag_276:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17116:17156  (sx, dx) = projectiveMul(lx, lz, lx, lz) */\n      dup1\n      swap3\n      pop\n      dup2\n      swap10\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17198:17227  projectiveSub(sx, dx, px, z1) */\n      tag_278\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17212:17214  sx */\n      dup9\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17216:17218  dx */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17220:17222  px */\n      dup15\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17224:17226  z1 */\n      dup9\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17198:17211  projectiveSub */\n      tag_279\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17198:17227  projectiveSub(sx, dx, px, z1) */\n      jump\t// in\n    tag_278:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17187:17227  (sx, dx) = projectiveSub(sx, dx, px, z1) */\n      dup1\n      swap3\n      pop\n      dup2\n      swap10\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17272:17301  projectiveSub(sx, dx, qx, z2) */\n      tag_280\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17286:17288  sx */\n      dup9\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17290:17292  dx */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17294:17296  qx */\n      dup13\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17298:17300  z2 */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17272:17285  projectiveSub */\n      tag_279\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17272:17301  projectiveSub(sx, dx, qx, z2) */\n      jump\t// in\n    tag_280:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17261:17301  (sx, dx) = projectiveSub(sx, dx, qx, z2) */\n      dup1\n      swap3\n      pop\n      dup2\n      swap10\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17339:17349  uint256 dy */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17455:17484  projectiveSub(px, z1, sx, dx) */\n      tag_281\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17469:17471  px */\n      dup14\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17473:17475  z1 */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17477:17479  sx */\n      dup12\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17481:17483  dx */\n      dup6\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17455:17468  projectiveSub */\n      tag_279\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17455:17484  projectiveSub(px, z1, sx, dx) */\n      jump\t// in\n    tag_281:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17444:17484  (sy, dy) = projectiveSub(px, z1, sx, dx) */\n      dup1\n      swap3\n      pop\n      dup2\n      swap10\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17512:17541  projectiveMul(sy, dy, lx, lz) */\n      tag_282\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17526:17528  sy */\n      dup9\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17530:17532  dy */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17534:17536  lx */\n      dup7\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17538:17540  lz */\n      dup7\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17512:17525  projectiveMul */\n      tag_277\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17512:17541  projectiveMul(sy, dy, lx, lz) */\n      jump\t// in\n    tag_282:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17501:17541  (sy, dy) = projectiveMul(sy, dy, lx, lz) */\n      dup1\n      swap3\n      pop\n      dup2\n      swap10\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17588:17617  projectiveSub(sy, dy, py, z1) */\n      tag_283\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17602:17604  sy */\n      dup9\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17606:17608  dy */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17610:17612  py */\n      dup15\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17614:17616  z1 */\n      dup10\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17588:17601  projectiveSub */\n      tag_279\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17588:17617  projectiveSub(sy, dy, py, z1) */\n      jump\t// in\n    tag_283:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17577:17617  (sy, dy) = projectiveSub(sy, dy, py, z1) */\n      dup1\n      swap3\n      pop\n      dup2\n      swap10\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17667:17669  dy */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17661:17663  dx */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17661:17669  dx != dy */\n      eq\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17657:17959  if (dx != dy) { // Cross-multiply to put everything over a common denominator... */\n      tag_284\n      jumpi\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17748:17774  mulmod(sx, dy, FIELD_SIZE) */\n      dup1\n      tag_285\n      jumpi\n      invalid\n    tag_285:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17759:17761  dy */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17755:17757  sx */\n      dup11\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17748:17774  mulmod(sx, dy, FIELD_SIZE) */\n      mulmod\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17743:17774  sx = mulmod(sx, dy, FIELD_SIZE) */\n      swap9\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17789:17815  mulmod(sy, dx, FIELD_SIZE) */\n      dup1\n      tag_286\n      jumpi\n      invalid\n    tag_286:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17800:17802  dx */\n      dup3\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17796:17798  sy */\n      dup10\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17789:17815  mulmod(sy, dx, FIELD_SIZE) */\n      mulmod\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17784:17815  sy = mulmod(sy, dx, FIELD_SIZE) */\n      swap8\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17830:17856  mulmod(dx, dy, FIELD_SIZE) */\n      dup1\n      tag_287\n      jumpi\n      invalid\n    tag_287:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17841:17843  dy */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17837:17839  dx */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17830:17856  mulmod(dx, dy, FIELD_SIZE) */\n      mulmod\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17825:17856  sz = mulmod(dx, dy, FIELD_SIZE) */\n      swap7\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17657:17959  if (dx != dy) { // Cross-multiply to put everything over a common denominator... */\n      jump(tag_288)\n    tag_284:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17948:17950  dx */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17943:17950  sz = dx */\n      swap7\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":17657:17959  if (dx != dy) { // Cross-multiply to put everything over a common denominator... */\n    tag_288:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":15969:17965  function projectiveECAdd(uint256 px, uint256 py, uint256 qx, uint256 qy)... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7827:8899  function bigModExp(uint256 base, uint256 exponent)... */\n    tag_272:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7905:7927  uint256 exponentiation */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7937:7955  uint256 callResult */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7963:8004  uint256[6] memory bigModExpContractInputs */\n      tag_290\n      tag_291\n      jump\t// in\n    tag_290:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7703:7707  0x20 */\n      0x20\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8012:8035  bigModExpContractInputs */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8036:8037  0 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8012:8038  bigModExpContractInputs[0] */\n      0x06\n      dup2\n      lt\n      tag_292\n      jumpi\n      invalid\n    tag_292:\n      0x20\n      mul\n      add\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8012:8058  bigModExpContractInputs[0] = WORD_LENGTH_BYTES */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7703:7707  0x20 */\n      0x20\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8085:8108  bigModExpContractInputs */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8109:8110  1 */\n      0x01\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8085:8111  bigModExpContractInputs[1] */\n      0x06\n      dup2\n      lt\n      tag_293\n      jumpi\n      invalid\n    tag_293:\n      0x20\n      mul\n      add\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8085:8131  bigModExpContractInputs[1] = WORD_LENGTH_BYTES */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7703:7707  0x20 */\n      0x20\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8162:8185  bigModExpContractInputs */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8186:8187  2 */\n      0x02\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8162:8188  bigModExpContractInputs[2] */\n      0x06\n      dup2\n      lt\n      tag_294\n      jumpi\n      invalid\n    tag_294:\n      0x20\n      mul\n      add\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8162:8208  bigModExpContractInputs[2] = WORD_LENGTH_BYTES */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8267:8271  base */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8238:8261  bigModExpContractInputs */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8262:8263  3 */\n      0x03\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8238:8264  bigModExpContractInputs[3] */\n      0x06\n      dup2\n      lt\n      tag_295\n      jumpi\n      invalid\n    tag_295:\n      0x20\n      mul\n      add\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8238:8271  bigModExpContractInputs[3] = base */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8308:8316  exponent */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8279:8302  bigModExpContractInputs */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8303:8304  4 */\n      0x04\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8279:8305  bigModExpContractInputs[4] */\n      0x06\n      dup2\n      lt\n      tag_296\n      jumpi\n      invalid\n    tag_296:\n      0x20\n      mul\n      add\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8279:8316  bigModExpContractInputs[4] = exponent */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8324:8347  bigModExpContractInputs */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8348:8349  5 */\n      0x05\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8324:8350  bigModExpContractInputs[5] */\n      0x06\n      dup2\n      lt\n      tag_297\n      jumpi\n      invalid\n    tag_297:\n      0x20\n      mul\n      add\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8324:8363  bigModExpContractInputs[5] = FIELD_SIZE */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8371:8395  uint256[1] memory output */\n      tag_298\n      tag_299\n      jump\t// in\n    tag_298:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8741:8745  0x20 */\n      0x20\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8725:8731  output */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8650:8654  0xc0 */\n      0xc0\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8617:8640  bigModExpContractInputs */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8553:8557  0x05 */\n      0x05\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8501:8502  0 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8497:8503  not(0) */\n      not\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8477:8802  staticcall(... */\n      staticcall\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8463:8802  callResult := staticcall(... */\n      swap3\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8835:8836  0 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8821:8831  callResult */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8821:8836  callResult == 0 */\n      eq\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8817:8869  if (callResult == 0) {revert(\"bigModExp failure!\");} */\n      iszero\n      tag_300\n      jumpi\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8839:8867  revert(\"bigModExp failure!\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6269674d6f64457870206661696c757265210000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8817:8869  if (callResult == 0) {revert(\"bigModExp failure!\");} */\n    tag_300:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8883:8889  output */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8890:8891  0 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8883:8892  output[0] */\n      0x01\n      dup2\n      lt\n      tag_301\n      jumpi\n      invalid\n    tag_301:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":8876:8892  return output[0] */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7827:8899  function bigModExp(uint256 base, uint256 exponent)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":14165:14368  function projectiveMul(uint256 x1, uint256 z1, uint256 x2, uint256 z2)... */\n    tag_277:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":14262:14272  uint256 x3 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":14274:14284  uint256 z3 */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":14306:14332  mulmod(x1, x2, FIELD_SIZE) */\n      dup1\n      tag_303\n      jumpi\n      invalid\n    tag_303:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":14317:14319  x2 */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":14313:14315  x1 */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":14306:14332  mulmod(x1, x2, FIELD_SIZE) */\n      mulmod\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":14334:14360  mulmod(z1, z2, FIELD_SIZE) */\n      dup1\n      tag_304\n      jumpi\n      invalid\n    tag_304:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":14345:14347  z2 */\n      dup5\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":14341:14343  z1 */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":14334:14360  mulmod(z1, z2, FIELD_SIZE) */\n      mulmod\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":14294:14361  (x3, z3) = (mulmod(x1, x2, FIELD_SIZE), mulmod(z1, z2, FIELD_SIZE)) */\n      dup1\n      swap3\n      pop\n      dup2\n      swap4\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":14165:14368  function projectiveMul(uint256 x1, uint256 z1, uint256 x2, uint256 z2)... */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13761:14079  function projectiveSub(uint256 x1, uint256 z1, uint256 x2, uint256 z2)... */\n    tag_279:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13858:13868  uint256 x3 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13870:13880  uint256 z3 */\n      dup1\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13890:13902  uint256 num1 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13905:13931  mulmod(z2, x1, FIELD_SIZE) */\n      dup1\n      tag_306\n      jumpi\n      invalid\n    tag_306:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13916:13918  x1 */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13912:13914  z2 */\n      dup6\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13905:13931  mulmod(z2, x1, FIELD_SIZE) */\n      mulmod\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13890:13931  uint256 num1 = mulmod(z2, x1, FIELD_SIZE) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13939:13951  uint256 num2 */\n      0x00\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13954:13993  mulmod(FIELD_SIZE - x2, z1, FIELD_SIZE) */\n      dup1\n      tag_307\n      jumpi\n      invalid\n    tag_307:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13978:13980  z1 */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13974:13976  x2 */\n      dup8\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13961:13976  FIELD_SIZE - x2 */\n      sub\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13954:13993  mulmod(FIELD_SIZE - x2, z1, FIELD_SIZE) */\n      mulmod\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13939:13993  uint256 num2 = mulmod(FIELD_SIZE - x2, z1, FIELD_SIZE) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":14013:14043  addmod(num1, num2, FIELD_SIZE) */\n      dup1\n      tag_308\n      jumpi\n      invalid\n    tag_308:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":14026:14030  num2 */\n      dup2\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":14020:14024  num1 */\n      dup4\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":14013:14043  addmod(num1, num2, FIELD_SIZE) */\n      addmod\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":7588:7654  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":14045:14071  mulmod(z1, z2, FIELD_SIZE) */\n      dup1\n      tag_309\n      jumpi\n      invalid\n    tag_309:\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":14056:14058  z2 */\n      dup7\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":14052:14054  z1 */\n      dup10\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":14045:14071  mulmod(z1, z2, FIELD_SIZE) */\n      mulmod\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":14001:14072  (x3, z3) = (addmod(num1, num2, FIELD_SIZE), mulmod(z1, z2, FIELD_SIZE)) */\n      dup1\n      swap5\n      pop\n      dup2\n      swap6\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":13761:14079  function projectiveSub(uint256 x1, uint256 z1, uint256 x2, uint256 z2)... */\n      pop\n      pop\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":354:12405  contract VRFCoordinator is VRF, VRFRequestIDBase {... */\n    tag_53:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup1\n      not\n      and\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_89:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      swap1\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":125:129   */\n      dup1\n        /* \"--CODEGEN--\":109:123   */\n      calldatasize\n        /* \"--CODEGEN--\":101:107   */\n      dup4\n        /* \"--CODEGEN--\":88:130   */\n      calldatacopy\n        /* \"--CODEGEN--\":156:160   */\n      dup1\n        /* \"--CODEGEN--\":148:154   */\n      dup3\n        /* \"--CODEGEN--\":144:161   */\n      add\n        /* \"--CODEGEN--\":134:161   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:165   */\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":354:12405  contract VRFCoordinator is VRF, VRFRequestIDBase {... */\n      swap1\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_130:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      swap1\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":125:129   */\n      dup1\n        /* \"--CODEGEN--\":109:123   */\n      calldatasize\n        /* \"--CODEGEN--\":101:107   */\n      dup4\n        /* \"--CODEGEN--\":88:130   */\n      calldatacopy\n        /* \"--CODEGEN--\":156:160   */\n      dup1\n        /* \"--CODEGEN--\":148:154   */\n      dup3\n        /* \"--CODEGEN--\":144:161   */\n      add\n        /* \"--CODEGEN--\":134:161   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:165   */\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":354:12405  contract VRFCoordinator is VRF, VRFRequestIDBase {... */\n      swap1\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_291:\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      swap1\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":125:129   */\n      dup1\n        /* \"--CODEGEN--\":109:123   */\n      calldatasize\n        /* \"--CODEGEN--\":101:107   */\n      dup4\n        /* \"--CODEGEN--\":88:130   */\n      calldatacopy\n        /* \"--CODEGEN--\":156:160   */\n      dup1\n        /* \"--CODEGEN--\":148:154   */\n      dup3\n        /* \"--CODEGEN--\":144:161   */\n      add\n        /* \"--CODEGEN--\":134:161   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:165   */\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":354:12405  contract VRFCoordinator is VRF, VRFRequestIDBase {... */\n      swap1\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_299:\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      swap1\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":125:129   */\n      dup1\n        /* \"--CODEGEN--\":109:123   */\n      calldatasize\n        /* \"--CODEGEN--\":101:107   */\n      dup4\n        /* \"--CODEGEN--\":88:130   */\n      calldatacopy\n        /* \"--CODEGEN--\":156:160   */\n      dup1\n        /* \"--CODEGEN--\":148:154   */\n      dup3\n        /* \"--CODEGEN--\":144:161   */\n      add\n        /* \"--CODEGEN--\":134:161   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:165   */\n      pop\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":354:12405  contract VRFCoordinator is VRF, VRFRequestIDBase {... */\n      swap1\n      pop\n      pop\n      swap1\n      jump\t// out\n    stop\n    data_3a4898a14f86303f4f0f062cf67700e5107caf8a2238d9bba8aa8f9b688110e9 796f752063616e277420636861726765206d6f7265207468616e20616c6c20746865204c494e4b20696e2074686520776f726c642c20677265656479\n    data_40e788544e29554c975084a69228c0b0b4a1c9c1f6404406ec2b6d9b86d179a9 4669727374206d756c7469706c69636174696f6e20636865636b206661696c6564\n    data_4bae64ba22ed7fbb776e6032297d511b182dfd08020c93d70fec3cfcc33a5267 5365636f6e64206d756c7469706c69636174696f6e20636865636b206661696c6564\n\n    auxdata: 0xa26469706673582212202cbb5936f85bb28390ed5658cf81ead0fb229e68d4b7c071b7662b4caa3142d064736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516131ba3803806131ba8339818101604052604081101561003357600080fd5b810190808051906020019092919080519060200190929190505050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506130da806100e06000396000f3fe608060405234801561001057600080fd5b50600436106100a85760003560e01c8063a4c0ed3611610071578063a4c0ed361461030e578063b415f4f5146103f3578063caf70c4a14610411578063d83402091461048a578063e911439c146104ec578063f3fef3a31461050a576100a8565b80626f6ad0146100ad57806321f36509146101055780635e1c10591461019d57806375d35070146102585780638aa7927b146102f0575b600080fd5b6100ef600480360360208110156100c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610558565b6040518082815260200191505060405180910390f35b6101316004803603602081101561011b57600080fd5b8101908080359060200190929190505050610570565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001836bffffffffffffffffffffffff166bffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b610256600480360360208110156101b357600080fd5b81019080803590602001906401000000008111156101d057600080fd5b8201836020820111156101e257600080fd5b8035906020019184600183028401116401000000008311171561020457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506105d2565b005b6102846004803603602081101561026e57600080fd5b810190808035906020019092919050505061078c565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001836bffffffffffffffffffffffff166bffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b6102f86107ee565b6040518082815260200191505060405180910390f35b6103f16004803603606081101561032457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561036b57600080fd5b82018360208201111561037d57600080fd5b8035906020019184600183028401116401000000008311171561039f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506107f3565b005b6103fb6108ff565b6040518082815260200191505060405180910390f35b6104746004803603604081101561042757600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050610904565b6040518082815260200191505060405180910390f35b6104ea600480360360a08110156104a057600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190806040019091929192908035906020019092919050505061095c565b005b6104f4610c81565b6040518082815260200191505060405180910390f35b6105566004803603604081101561052057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c87565b005b60046020528060005260406000206000915090505481565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a90046bffffffffffffffffffffffff16908060010154905083565b60006105dc612f55565b6000806105e885610ec0565b935093509350935060006003600086815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061068f84602001516bffffffffffffffffffffffff16600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461132290919063ffffffff16565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060026000848152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a8154906bffffffffffffffffffffffff021916905560018201600090555050610745838386600001516113aa565b7fa2e7a402243ebda4a69ceeb3dfb682943b7a9b3ac66d6eefa8db65894009611c8383604051808381526020018281526020019250505060405180910390a1505050505050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a90046bffffffffffffffffffffffff16908060010154905083565b602081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4d75737420757365204c494e4b20746f6b656e0000000000000000000000000081525060200191505060405180910390fd5b6000808280602001905160408110156108cd57600080fd5b810190808051906020019092919080519060200190929190505050915091506108f88282868861156d565b5050505050565b60e081565b6000816040516020018082600260200280838360005b8381101561093557808201518184015260208101905061091a565b50505050905001915050604051602081830303815290604052805190602001209050919050565b600061099e836002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050610904565b905060006003600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a7d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f706c656173652072656769737465722061206e6577206b65790000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610b20576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5f6f7261636c65206d757374206e6f742062652030783000000000000000000081525060200191505060405180910390fd5b846003600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260036000848152602001908152602001600020600101819055506b033b2e3c9fd0803ce8000000861115610bf5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c815260200180613026603c913960400191505060405180910390fd5b856003600084815260200190815260200160002060000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055507fae189157e0628c1e62315e9179156e1ea10e90e9c15060002f7021e907dc2cfe8287604051808381526020018281526020019250505060405180910390a1505050505050565b6101a081565b8080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610d3d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e2774207769746864726177206d6f7265207468616e2062616c616e636581525060200191505060405180910390fd5b610d8f82600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461195590919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610e7a57600080fd5b505af1158015610e8e573d6000803e3d6000fd5b505050506040513d6020811015610ea457600080fd5b8101908080519060200190929190505050610ebb57fe5b505050565b6000610eca612f55565b60008060006101a0602001905080865114610f4d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f77726f6e672070726f6f66206c656e677468000000000000000000000000000081525060200191505060405180910390fd5b610f55612f9d565b60008060208901925060e08901519150838901519050610f7483610904565b9750610f8088836119de565b9550600260008781526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020016001820154815250509650600073ffffffffffffffffffffffffffffffffffffffff16876000015173ffffffffffffffffffffffffffffffffffffffff1614156110e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6e6f20636f72726573706f6e64696e672072657175657374000000000000000081525060200191505060405180910390fd5b818160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012087604001511461118e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f77726f6e672070726553656564206f7220626c6f636b206e756d00000000000081525060200191505060405180910390fd5b6000814090506000801b8114156112c957600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e9413d38836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561121257600080fd5b505afa158015611226573d6000803e3d6000fd5b505050506040513d602081101561123c57600080fd5b810190808051906020019092919050505090506000801b8114156112c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f706c656173652070726f766520626c6f636b686173680000000000000000000081525060200191505060405180910390fd5b5b6000838260405160200180838152602001828152602001925050506040516020818303038152906040528051906020012060001c90508060e08c01526101a08b526113138b611a17565b96505050505050509193509193565b6000808284019050838110156113a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600060606394985ddd60e01b85856040516024018083815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000620324b09050805a10156114ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f6e6f7420656e6f7567682067617320666f7220636f6e73756d6572000000000081525060200191505060405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106114f957805182526020820191506020810190506020830392506114d6565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461155b576040519150601f19603f3d011682016040523d82523d6000602084013e611560565b606091505b5050905050505050505050565b81846003600082815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16821015611621576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f42656c6f7720616772656564207061796d656e7400000000000000000000000081525060200191505060405180910390fd5b60006005600088815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600061168488888785611bd8565b9050600061169289836119de565b9050600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461170057fe5b856002600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506b033b2e3c9fd0803ce8000000871061176a57fe5b866002600083815260200190815260200160002060000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555081436040516020018083815260200182815260200192505050604051602081830303815290604052805190602001206002600083815260200190815260200160002060010181905550600360008a8152602001908152602001600020600101547f56bd374744a66d531874338def36c906e3a6cf31176eb1e9afd9f1de69725d518a84898b86604051808681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019550505050505060405180910390a26118f66001600560008c815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461132290919063ffffffff16565b600560008b815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050505050505050565b6000828211156119cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b60008282604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120905092915050565b60006101a0825114611a91576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f77726f6e672070726f6f66206c656e677468000000000000000000000000000081525060200191505060405180910390fd5b611a99612f9d565b611aa1612f9d565b611aa9612fbf565b6000611ab3612f9d565b611abb612f9d565b6000888060200190516101a0811015611ad357600080fd5b810190809190826040019190826040019190826060018051906020019092919091908260400191908260400180519060200190929190505050839350809750819850829950839a50849b50859c50869d5050505050505050611b6f878787600060038110611b3d57fe5b602002015188600160038110611b4f57fe5b602002015189600260038110611b6157fe5b602002015189898989611c52565b6003866040516020018083815260200182600260200280838360005b83811015611ba6578082015181840152602081019050611b8b565b50505050905001925050506040516020818303038152906040528051906020012060001c975050505050505050919050565b600084848484604051602001808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019450505050506040516020818303038152906040528051906020012060001c9050949350505050565b611c5b89611f7d565b611ccd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f7075626c6963206b6579206973206e6f74206f6e20637572766500000000000081525060200191505060405180910390fd5b611cd688611f7d565b611d48576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f67616d6d61206973206e6f74206f6e206375727665000000000000000000000081525060200191505060405180910390fd5b611d5183611f7d565b611dc3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6347616d6d615769746e657373206973206e6f74206f6e20637572766500000081525060200191505060405180910390fd5b611dcc82611f7d565b611e3e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f73486173685769746e657373206973206e6f74206f6e2063757276650000000081525060200191505060405180910390fd5b611e4a878a8887611fee565b611ebc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f6164647228632a706b2b732a6729e289a05f755769746e65737300000000000081525060200191505060405180910390fd5b611ec4612f9d565b611ece8a87612226565b9050611ed8612f9d565b611ee7898b878b8689896122e5565b90506000611ef8838d8d8a86612489565b9050808a14611f6f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f696e76616c69642070726f6f660000000000000000000000000000000000000081525060200191505060405180910390fd5b505050505050505050505050565b60007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80611fa757fe5b82600160028110611fb457fe5b602002015183600160028110611fc657fe5b602002015109611fe683600060028110611fdc57fe5b60200201516125b8565b149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612092576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f626164207769746e65737300000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000806002866001600281106120a457fe5b6020020151816120b057fe5b06146120bd57601c6120c0565b601b5b905060007ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141806120ec57fe5b85876000600281106120fa57fe5b6020020151097ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641410360001b905060007ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641418061215157fe5b8760006002811061215e57fe5b6020020151890960001b90506000600183858a60006002811061217d57fe5b602002015160001b8560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156121dd573d6000803e3d6000fd5b5050506020604051035190508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614945050505050949350505050565b61222e612f9d565b61228f600184846040516020018084815260200183600260200280838360005b8381101561226957808201518184015260208101905061224e565b505050509050018281526020019350505050604051602081830303815290604052612646565b90505b61229b81611f7d565b6122df576122d8816000600281106122af57fe5b602002015160405160200180828152602001915050604051602081830303815290604052612646565b9050612292565b92915050565b6122ed612f9d565b60007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8460006002811061231d57fe5b60200201518860006002811061232f57fe5b6020020151038161233c57fe5b0614156123b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f706f696e747320696e2073756d206d7573742062652064697374696e6374000081525060200191505060405180910390fd5b6123bc878988612719565b612411576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806130626021913960400191505060405180910390fd5b61241c848685612719565b612471576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806130836022913960400191505060405180910390fd5b61247c8684846128a4565b9050979650505050505050565b6000600286868685876040516020018087815260200186600260200280838360005b838110156124c65780820151818401526020810190506124ab565b5050505090500185600260200280838360005b838110156124f45780820151818401526020810190506124d9565b5050505090500184600260200280838360005b83811015612522578082015181840152602081019050612507565b5050505090500183600260200280838360005b83811015612550578082015181840152602081019050612535565b505050509050018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140196505050505050506040516020818303038152906040528051906020012060001c905095945050505050565b6000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f806125e357fe5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061260b57fe5b848509840990507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061263a57fe5b60078208915050919050565b61264e612f9d565b61265782612a22565b8160006002811061266457fe5b60200201818152505061268f61268a8260006002811061268057fe5b60200201516125b8565b612a8f565b8160016002811061269c57fe5b60200201818152505060016002826001600281106126b657fe5b6020020151816126c257fe5b06141561271457806001600281106126d657fe5b60200201517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f038160016002811061270a57fe5b6020020181815250505b919050565b60008083141561272857600080fd5b60008460006002811061273757fe5b6020020151905060008060028760016002811061275057fe5b60200201518161275c57fe5b061461276957601c61276c565b601b5b905060007ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641418061279857fe5b83870960001b9050600060016000801b848660001b8560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015612805573d6000803e3d6000fd5b5050506020604051035190506000866040516020018082600260200280838360005b83811015612842578082015181840152602081019050612827565b505050509050019150506040516020818303038152906040528051906020012060001c90508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614955050505050509392505050565b6128ac612f9d565b6000806000612901876000600281106128c157fe5b6020020151886001600281106128d357fe5b6020020151886000600281106128e557fe5b6020020151896001600281106128f757fe5b6020020151612ac9565b80935081945082955050505060017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061293757fe5b868309146129ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f696e765a206d75737420626520696e7665727365206f66207a0000000000000081525060200191505060405180910390fd5b60405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f806129e057fe5b87860981526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80612a1057fe5b87850981525093505050509392505050565b6000818051906020012060001c90505b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8110612a8a5780604051602001808281526020019150506040516020818303038152906040528051906020012060001c9050612a32565b919050565b6000612ac282600260017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f01901c612c9d565b9050919050565b60008060008060006001809150915060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80612b0257fe5b897ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f038808905060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80612b5357fe5b8b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f038a0890506000612b8883838585612dff565b8092508199505050612b9c88828e88612e69565b8092508199505050612bb088828c87612e69565b80925081995050506000612bc68d878b85612e69565b8092508199505050612bda88828686612dff565b8092508199505050612bee88828e89612e69565b8092508199505050808214612c89577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80612c2557fe5b818a0998507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80612c5257fe5b82890997507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80612c7f57fe5b8183099650612c8d565b8196505b5050505050509450945094915050565b600080612ca8612fe1565b602081600060068110612cb757fe5b602002018181525050602081600160068110612ccf57fe5b602002018181525050602081600260068110612ce757fe5b6020020181815250508481600360068110612cfe57fe5b6020020181815250508381600460068110612d1557fe5b6020020181815250507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f81600560068110612d4c57fe5b602002018181525050612d5d613003565b60208160c0846005600019fa92506000831415612de2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6269674d6f64457870206661696c75726521000000000000000000000000000081525060200191505060405180910390fd5b80600060018110612def57fe5b6020020151935050505092915050565b6000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80612e2a57fe5b8487097ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80612e5557fe5b848709809250819350505094509492505050565b60008060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80612e9657fe5b878509905060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80612ec557fe5b87877ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f030990507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80612f1457fe5b8183087ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80612f3f57fe5b8689098094508195505050505094509492505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160006bffffffffffffffffffffffff168152602001600080191681525090565b6040518060400160405280600290602082028036833780820191505090505090565b6040518060600160405280600390602082028036833780820191505090505090565b6040518060c00160405280600690602082028036833780820191505090505090565b604051806020016040528060019060208202803683378082019150509050509056fe796f752063616e277420636861726765206d6f7265207468616e20616c6c20746865204c494e4b20696e2074686520776f726c642c206772656564794669727374206d756c7469706c69636174696f6e20636865636b206661696c65645365636f6e64206d756c7469706c69636174696f6e20636865636b206661696c6564a26469706673582212202cbb5936f85bb28390ed5658cf81ead0fb229e68d4b7c071b7662b4caa3142d064736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x31BA CODESIZE SUB DUP1 PUSH2 0x31BA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x30DA DUP1 PUSH2 0xE0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA4C0ED36 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xB415F4F5 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xCAF70C4A EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xD8340209 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0xE911439C EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x50A JUMPI PUSH2 0xA8 JUMP JUMPDEST DUP1 PUSH3 0x6F6AD0 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x21F36509 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x5E1C1059 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x75D35070 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x8AA7927B EQ PUSH2 0x2F0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x5D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x7F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3FB PUSH2 0x8FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x474 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x904 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x95C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F4 PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x556 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC87 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DC PUSH2 0x2F55 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5E8 DUP6 PUSH2 0xEC0 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x68F DUP5 PUSH1 0x20 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1322 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP PUSH2 0x745 DUP4 DUP4 DUP7 PUSH1 0x0 ADD MLOAD PUSH2 0x13AA JUMP JUMPDEST PUSH32 0xA2E7A402243EBDA4A69CEEB3DFB682943B7A9B3AC66D6EEFA8DB65894009611C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x20 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4D75737420757365204C494E4B20746F6B656E00000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP SWAP2 POP PUSH2 0x8F8 DUP3 DUP3 DUP7 DUP9 PUSH2 0x156D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0xE0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x935 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x91A JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x99E DUP4 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP PUSH2 0x904 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x706C656173652072656769737465722061206E6577206B657900000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5F6F7261636C65206D757374206E6F7420626520307830000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH12 0x33B2E3C9FD0803CE8000000 DUP7 GT ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3026 PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xAE189157E0628C1E62315E9179156E1EA10E90E9C15060002F7021E907DC2CFE DUP3 DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1A0 DUP2 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xD3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x63616E2774207769746864726177206D6F7265207468616E2062616C616E6365 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD8F DUP3 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1955 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE8E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEBB JUMPI INVALID JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECA PUSH2 0x2F55 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1A0 PUSH1 0x20 ADD SWAP1 POP DUP1 DUP7 MLOAD EQ PUSH2 0xF4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77726F6E672070726F6F66206C656E6774680000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF55 PUSH2 0x2F9D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP10 ADD SWAP3 POP PUSH1 0xE0 DUP10 ADD MLOAD SWAP2 POP DUP4 DUP10 ADD MLOAD SWAP1 POP PUSH2 0xF74 DUP4 PUSH2 0x904 JUMP JUMPDEST SWAP8 POP PUSH2 0xF80 DUP9 DUP4 PUSH2 0x19DE JUMP JUMPDEST SWAP6 POP PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP7 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x10E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F20636F72726573706F6E64696E6720726571756573740000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 PUSH1 0x40 ADD MLOAD EQ PUSH2 0x118E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77726F6E672070726553656564206F7220626C6F636B206E756D000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 BLOCKHASH SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ ISZERO PUSH2 0x12C9 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE9413D38 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1226 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x123C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ ISZERO PUSH2 0x12C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x706C656173652070726F766520626C6F636B6861736800000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP4 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0xE0 DUP13 ADD MSTORE PUSH2 0x1A0 DUP12 MSTORE PUSH2 0x1313 DUP12 PUSH2 0x1A17 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x13A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH4 0x94985DDD PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH3 0x324B0 SWAP1 POP DUP1 GAS LT ISZERO PUSH2 0x14AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F7420656E6F7567682067617320666F7220636F6E73756D65720000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x14F9 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x155B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1560 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP5 PUSH1 0x3 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 LT ISZERO PUSH2 0x1621 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42656C6F7720616772656564207061796D656E74000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1684 DUP9 DUP9 DUP8 DUP6 PUSH2 0x1BD8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1692 DUP10 DUP4 PUSH2 0x19DE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1700 JUMPI INVALID JUMPDEST DUP6 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH12 0x33B2E3C9FD0803CE8000000 DUP8 LT PUSH2 0x176A JUMPI INVALID JUMPDEST DUP7 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 NUMBER PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH32 0x56BD374744A66D531874338DEF36C906E3A6CF31176EB1E9AFD9F1DE69725D51 DUP11 DUP5 DUP10 DUP12 DUP7 PUSH1 0x40 MLOAD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x18F6 PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1322 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x19CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0 DUP3 MLOAD EQ PUSH2 0x1A91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77726F6E672070726F6F66206C656E6774680000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A99 PUSH2 0x2F9D JUMP JUMPDEST PUSH2 0x1AA1 PUSH2 0x2F9D JUMP JUMPDEST PUSH2 0x1AA9 PUSH2 0x2FBF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB3 PUSH2 0x2F9D JUMP JUMPDEST PUSH2 0x1ABB PUSH2 0x2F9D JUMP JUMPDEST PUSH1 0x0 DUP9 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH2 0x1A0 DUP2 LT ISZERO PUSH2 0x1AD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 DUP3 PUSH1 0x40 ADD SWAP2 SWAP1 DUP3 PUSH1 0x40 ADD SWAP2 SWAP1 DUP3 PUSH1 0x60 ADD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 SWAP2 SWAP1 DUP3 PUSH1 0x40 ADD SWAP2 SWAP1 DUP3 PUSH1 0x40 ADD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP4 SWAP4 POP DUP1 SWAP8 POP DUP2 SWAP9 POP DUP3 SWAP10 POP DUP4 SWAP11 POP DUP5 SWAP12 POP DUP6 SWAP13 POP DUP7 SWAP14 POP POP POP POP POP POP POP POP PUSH2 0x1B6F DUP8 DUP8 DUP8 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x1B3D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x1 PUSH1 0x3 DUP2 LT PUSH2 0x1B4F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH2 0x1B61 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 DUP10 DUP10 DUP10 PUSH2 0x1C52 JUMP JUMPDEST PUSH1 0x3 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BA6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B8B JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP8 POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1C5B DUP10 PUSH2 0x1F7D JUMP JUMPDEST PUSH2 0x1CCD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7075626C6963206B6579206973206E6F74206F6E206375727665000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CD6 DUP9 PUSH2 0x1F7D JUMP JUMPDEST PUSH2 0x1D48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x67616D6D61206973206E6F74206F6E2063757276650000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D51 DUP4 PUSH2 0x1F7D JUMP JUMPDEST PUSH2 0x1DC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6347616D6D615769746E657373206973206E6F74206F6E206375727665000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DCC DUP3 PUSH2 0x1F7D JUMP JUMPDEST PUSH2 0x1E3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x73486173685769746E657373206973206E6F74206F6E20637572766500000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E4A DUP8 DUP11 DUP9 DUP8 PUSH2 0x1FEE JUMP JUMPDEST PUSH2 0x1EBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6164647228632A706B2B732A6729E289A05F755769746E657373000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EC4 PUSH2 0x2F9D JUMP JUMPDEST PUSH2 0x1ECE DUP11 DUP8 PUSH2 0x2226 JUMP JUMPDEST SWAP1 POP PUSH2 0x1ED8 PUSH2 0x2F9D JUMP JUMPDEST PUSH2 0x1EE7 DUP10 DUP12 DUP8 DUP12 DUP7 DUP10 DUP10 PUSH2 0x22E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1EF8 DUP4 DUP14 DUP14 DUP11 DUP7 PUSH2 0x2489 JUMP JUMPDEST SWAP1 POP DUP1 DUP11 EQ PUSH2 0x1F6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E76616C69642070726F6F6600000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x1FA7 JUMPI INVALID JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1FB4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1FC6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD MULMOD PUSH2 0x1FE6 DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x1FDC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x25B8 JUMP JUMPDEST EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2092 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x626164207769746E657373000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP7 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x20A4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x20B0 JUMPI INVALID JUMPDEST MOD EQ PUSH2 0x20BD JUMPI PUSH1 0x1C PUSH2 0x20C0 JUMP JUMPDEST PUSH1 0x1B JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 PUSH2 0x20EC JUMPI INVALID JUMPDEST DUP6 DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x20FA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD MULMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 SUB PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 PUSH2 0x2151 JUMPI INVALID JUMPDEST DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x215E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 MULMOD PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 DUP6 DUP11 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x217D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x0 SHL DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP5 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x222E PUSH2 0x2F9D JUMP JUMPDEST PUSH2 0x228F PUSH1 0x1 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2269 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x224E JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x2646 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x229B DUP2 PUSH2 0x1F7D JUMP JUMPDEST PUSH2 0x22DF JUMPI PUSH2 0x22D8 DUP2 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x22AF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x2646 JUMP JUMPDEST SWAP1 POP PUSH2 0x2292 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22ED PUSH2 0x2F9D JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP5 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x231D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x232F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD SUB DUP2 PUSH2 0x233C JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x23B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x706F696E747320696E2073756D206D7573742062652064697374696E63740000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23BC DUP8 DUP10 DUP9 PUSH2 0x2719 JUMP JUMPDEST PUSH2 0x2411 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3062 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x241C DUP5 DUP7 DUP6 PUSH2 0x2719 JUMP JUMPDEST PUSH2 0x2471 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3083 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x247C DUP7 DUP5 DUP5 PUSH2 0x28A4 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP7 DUP7 DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24C6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x24AB JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP6 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24F4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x24D9 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2522 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2507 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2550 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2535 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x25E3 JUMPI INVALID JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x260B JUMPI INVALID JUMPDEST DUP5 DUP6 MULMOD DUP5 MULMOD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x263A JUMPI INVALID JUMPDEST PUSH1 0x7 DUP3 ADDMOD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x264E PUSH2 0x2F9D JUMP JUMPDEST PUSH2 0x2657 DUP3 PUSH2 0x2A22 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x2664 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x268F PUSH2 0x268A DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x2680 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x25B8 JUMP JUMPDEST PUSH2 0x2A8F JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x269C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x2 DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x26B6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x26C2 JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x2714 JUMPI DUP1 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x26D6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP2 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x270A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2728 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x2737 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 DUP8 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x2750 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x275C JUMPI INVALID JUMPDEST MOD EQ PUSH2 0x2769 JUMPI PUSH1 0x1C PUSH2 0x276C JUMP JUMPDEST PUSH1 0x1B JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 PUSH2 0x2798 JUMPI INVALID JUMPDEST DUP4 DUP8 MULMOD PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL DUP5 DUP7 PUSH1 0x0 SHL DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2805 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2842 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2827 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP6 POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x28AC PUSH2 0x2F9D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2901 DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x28C1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x28D3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x28E5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x28F7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x2AC9 JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP DUP3 SWAP6 POP POP POP POP PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2937 JUMPI INVALID JUMPDEST DUP7 DUP4 MULMOD EQ PUSH2 0x29AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E765A206D75737420626520696E7665727365206F66207A00000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x29E0 JUMPI INVALID JUMPDEST DUP8 DUP7 MULMOD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2A10 JUMPI INVALID JUMPDEST DUP8 DUP6 MULMOD DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP2 LT PUSH2 0x2A8A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH2 0x2A32 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AC2 DUP3 PUSH1 0x2 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F ADD SWAP1 SHR PUSH2 0x2C9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 DUP1 SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2B02 JUMPI INVALID JUMPDEST DUP10 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP9 ADDMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2B53 JUMPI INVALID JUMPDEST DUP12 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP11 ADDMOD SWAP1 POP PUSH1 0x0 PUSH2 0x2B88 DUP4 DUP4 DUP6 DUP6 PUSH2 0x2DFF JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x2B9C DUP9 DUP3 DUP15 DUP9 PUSH2 0x2E69 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x2BB0 DUP9 DUP3 DUP13 DUP8 PUSH2 0x2E69 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH1 0x0 PUSH2 0x2BC6 DUP14 DUP8 DUP12 DUP6 PUSH2 0x2E69 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x2BDA DUP9 DUP3 DUP7 DUP7 PUSH2 0x2DFF JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x2BEE DUP9 DUP3 DUP15 DUP10 PUSH2 0x2E69 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP DUP1 DUP3 EQ PUSH2 0x2C89 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2C25 JUMPI INVALID JUMPDEST DUP2 DUP11 MULMOD SWAP9 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2C52 JUMPI INVALID JUMPDEST DUP3 DUP10 MULMOD SWAP8 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2C7F JUMPI INVALID JUMPDEST DUP2 DUP4 MULMOD SWAP7 POP PUSH2 0x2C8D JUMP JUMPDEST DUP2 SWAP7 POP JUMPDEST POP POP POP POP POP POP SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CA8 PUSH2 0x2FE1 JUMP JUMPDEST PUSH1 0x20 DUP2 PUSH1 0x0 PUSH1 0x6 DUP2 LT PUSH2 0x2CB7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x20 DUP2 PUSH1 0x1 PUSH1 0x6 DUP2 LT PUSH2 0x2CCF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x20 DUP2 PUSH1 0x2 PUSH1 0x6 DUP2 LT PUSH2 0x2CE7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x3 PUSH1 0x6 DUP2 LT PUSH2 0x2CFE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x4 PUSH1 0x6 DUP2 LT PUSH2 0x2D15 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP2 PUSH1 0x5 PUSH1 0x6 DUP2 LT PUSH2 0x2D4C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2D5D PUSH2 0x3003 JUMP JUMPDEST PUSH1 0x20 DUP2 PUSH1 0xC0 DUP5 PUSH1 0x5 PUSH1 0x0 NOT STATICCALL SWAP3 POP PUSH1 0x0 DUP4 EQ ISZERO PUSH2 0x2DE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6269674D6F64457870206661696C757265210000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 DUP2 LT PUSH2 0x2DEF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2E2A JUMPI INVALID JUMPDEST DUP5 DUP8 MULMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2E55 JUMPI INVALID JUMPDEST DUP5 DUP8 MULMOD DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2E96 JUMPI INVALID JUMPDEST DUP8 DUP6 MULMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2EC5 JUMPI INVALID JUMPDEST DUP8 DUP8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB MULMOD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2F14 JUMPI INVALID JUMPDEST DUP2 DUP4 ADDMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2F3F JUMPI INVALID JUMPDEST DUP7 DUP10 MULMOD DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP INVALID PUSH26 0x6F752063616E277420636861726765206D6F7265207468616E20 PUSH2 0x6C6C KECCAK256 PUSH21 0x6865204C494E4B20696E2074686520776F726C642C KECCAK256 PUSH8 0x7265656479466972 PUSH20 0x74206D756C7469706C69636174696F6E20636865 PUSH4 0x6B206661 PUSH10 0x6C65645365636F6E6420 PUSH14 0x756C7469706C69636174696F6E20 PUSH4 0x6865636B KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x706673582212202CBB59 CALLDATASIZE 0xF8 JUMPDEST 0xB2 DUP4 SWAP1 0xED JUMP PC 0xCF DUP2 0xEA 0xD0 0xFB 0x22 SWAP15 PUSH9 0xD4B7C071B7662B4CAA BALANCE TIMESTAMP 0xD0 PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "354:12051:3:-:0;;;527:165;5:9:-1;2:2;;;27:1;24;17:12;2:2;527:165:3;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;527:165:3;;;;;;;;;;;;;;;;;;;;;;;;;618:5;592:4;;:32;;;;;;;;;;;;;;;;;;671:15;630:14;;:57;;;;;;;;;;;;;;;;;;527:165;;354:12051;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a85760003560e01c8063a4c0ed3611610071578063a4c0ed361461030e578063b415f4f5146103f3578063caf70c4a14610411578063d83402091461048a578063e911439c146104ec578063f3fef3a31461050a576100a8565b80626f6ad0146100ad57806321f36509146101055780635e1c10591461019d57806375d35070146102585780638aa7927b146102f0575b600080fd5b6100ef600480360360208110156100c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610558565b6040518082815260200191505060405180910390f35b6101316004803603602081101561011b57600080fd5b8101908080359060200190929190505050610570565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001836bffffffffffffffffffffffff166bffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b610256600480360360208110156101b357600080fd5b81019080803590602001906401000000008111156101d057600080fd5b8201836020820111156101e257600080fd5b8035906020019184600183028401116401000000008311171561020457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506105d2565b005b6102846004803603602081101561026e57600080fd5b810190808035906020019092919050505061078c565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001836bffffffffffffffffffffffff166bffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b6102f86107ee565b6040518082815260200191505060405180910390f35b6103f16004803603606081101561032457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561036b57600080fd5b82018360208201111561037d57600080fd5b8035906020019184600183028401116401000000008311171561039f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506107f3565b005b6103fb6108ff565b6040518082815260200191505060405180910390f35b6104746004803603604081101561042757600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050610904565b6040518082815260200191505060405180910390f35b6104ea600480360360a08110156104a057600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190806040019091929192908035906020019092919050505061095c565b005b6104f4610c81565b6040518082815260200191505060405180910390f35b6105566004803603604081101561052057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c87565b005b60046020528060005260406000206000915090505481565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a90046bffffffffffffffffffffffff16908060010154905083565b60006105dc612f55565b6000806105e885610ec0565b935093509350935060006003600086815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061068f84602001516bffffffffffffffffffffffff16600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461132290919063ffffffff16565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060026000848152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a8154906bffffffffffffffffffffffff021916905560018201600090555050610745838386600001516113aa565b7fa2e7a402243ebda4a69ceeb3dfb682943b7a9b3ac66d6eefa8db65894009611c8383604051808381526020018281526020019250505060405180910390a1505050505050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a90046bffffffffffffffffffffffff16908060010154905083565b602081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4d75737420757365204c494e4b20746f6b656e0000000000000000000000000081525060200191505060405180910390fd5b6000808280602001905160408110156108cd57600080fd5b810190808051906020019092919080519060200190929190505050915091506108f88282868861156d565b5050505050565b60e081565b6000816040516020018082600260200280838360005b8381101561093557808201518184015260208101905061091a565b50505050905001915050604051602081830303815290604052805190602001209050919050565b600061099e836002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050610904565b905060006003600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a7d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f706c656173652072656769737465722061206e6577206b65790000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610b20576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5f6f7261636c65206d757374206e6f742062652030783000000000000000000081525060200191505060405180910390fd5b846003600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260036000848152602001908152602001600020600101819055506b033b2e3c9fd0803ce8000000861115610bf5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c815260200180613026603c913960400191505060405180910390fd5b856003600084815260200190815260200160002060000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055507fae189157e0628c1e62315e9179156e1ea10e90e9c15060002f7021e907dc2cfe8287604051808381526020018281526020019250505060405180910390a1505050505050565b6101a081565b8080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610d3d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e2774207769746864726177206d6f7265207468616e2062616c616e636581525060200191505060405180910390fd5b610d8f82600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461195590919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610e7a57600080fd5b505af1158015610e8e573d6000803e3d6000fd5b505050506040513d6020811015610ea457600080fd5b8101908080519060200190929190505050610ebb57fe5b505050565b6000610eca612f55565b60008060006101a0602001905080865114610f4d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f77726f6e672070726f6f66206c656e677468000000000000000000000000000081525060200191505060405180910390fd5b610f55612f9d565b60008060208901925060e08901519150838901519050610f7483610904565b9750610f8088836119de565b9550600260008781526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020016001820154815250509650600073ffffffffffffffffffffffffffffffffffffffff16876000015173ffffffffffffffffffffffffffffffffffffffff1614156110e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6e6f20636f72726573706f6e64696e672072657175657374000000000000000081525060200191505060405180910390fd5b818160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012087604001511461118e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f77726f6e672070726553656564206f7220626c6f636b206e756d00000000000081525060200191505060405180910390fd5b6000814090506000801b8114156112c957600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e9413d38836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561121257600080fd5b505afa158015611226573d6000803e3d6000fd5b505050506040513d602081101561123c57600080fd5b810190808051906020019092919050505090506000801b8114156112c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f706c656173652070726f766520626c6f636b686173680000000000000000000081525060200191505060405180910390fd5b5b6000838260405160200180838152602001828152602001925050506040516020818303038152906040528051906020012060001c90508060e08c01526101a08b526113138b611a17565b96505050505050509193509193565b6000808284019050838110156113a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600060606394985ddd60e01b85856040516024018083815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000620324b09050805a10156114ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f6e6f7420656e6f7567682067617320666f7220636f6e73756d6572000000000081525060200191505060405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106114f957805182526020820191506020810190506020830392506114d6565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461155b576040519150601f19603f3d011682016040523d82523d6000602084013e611560565b606091505b5050905050505050505050565b81846003600082815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16821015611621576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f42656c6f7720616772656564207061796d656e7400000000000000000000000081525060200191505060405180910390fd5b60006005600088815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600061168488888785611bd8565b9050600061169289836119de565b9050600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461170057fe5b856002600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506b033b2e3c9fd0803ce8000000871061176a57fe5b866002600083815260200190815260200160002060000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555081436040516020018083815260200182815260200192505050604051602081830303815290604052805190602001206002600083815260200190815260200160002060010181905550600360008a8152602001908152602001600020600101547f56bd374744a66d531874338def36c906e3a6cf31176eb1e9afd9f1de69725d518a84898b86604051808681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019550505050505060405180910390a26118f66001600560008c815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461132290919063ffffffff16565b600560008b815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050505050505050565b6000828211156119cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b60008282604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120905092915050565b60006101a0825114611a91576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f77726f6e672070726f6f66206c656e677468000000000000000000000000000081525060200191505060405180910390fd5b611a99612f9d565b611aa1612f9d565b611aa9612fbf565b6000611ab3612f9d565b611abb612f9d565b6000888060200190516101a0811015611ad357600080fd5b810190809190826040019190826040019190826060018051906020019092919091908260400191908260400180519060200190929190505050839350809750819850829950839a50849b50859c50869d5050505050505050611b6f878787600060038110611b3d57fe5b602002015188600160038110611b4f57fe5b602002015189600260038110611b6157fe5b602002015189898989611c52565b6003866040516020018083815260200182600260200280838360005b83811015611ba6578082015181840152602081019050611b8b565b50505050905001925050506040516020818303038152906040528051906020012060001c975050505050505050919050565b600084848484604051602001808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019450505050506040516020818303038152906040528051906020012060001c9050949350505050565b611c5b89611f7d565b611ccd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f7075626c6963206b6579206973206e6f74206f6e20637572766500000000000081525060200191505060405180910390fd5b611cd688611f7d565b611d48576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f67616d6d61206973206e6f74206f6e206375727665000000000000000000000081525060200191505060405180910390fd5b611d5183611f7d565b611dc3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6347616d6d615769746e657373206973206e6f74206f6e20637572766500000081525060200191505060405180910390fd5b611dcc82611f7d565b611e3e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f73486173685769746e657373206973206e6f74206f6e2063757276650000000081525060200191505060405180910390fd5b611e4a878a8887611fee565b611ebc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f6164647228632a706b2b732a6729e289a05f755769746e65737300000000000081525060200191505060405180910390fd5b611ec4612f9d565b611ece8a87612226565b9050611ed8612f9d565b611ee7898b878b8689896122e5565b90506000611ef8838d8d8a86612489565b9050808a14611f6f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f696e76616c69642070726f6f660000000000000000000000000000000000000081525060200191505060405180910390fd5b505050505050505050505050565b60007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80611fa757fe5b82600160028110611fb457fe5b602002015183600160028110611fc657fe5b602002015109611fe683600060028110611fdc57fe5b60200201516125b8565b149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612092576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f626164207769746e65737300000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000806002866001600281106120a457fe5b6020020151816120b057fe5b06146120bd57601c6120c0565b601b5b905060007ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141806120ec57fe5b85876000600281106120fa57fe5b6020020151097ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641410360001b905060007ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641418061215157fe5b8760006002811061215e57fe5b6020020151890960001b90506000600183858a60006002811061217d57fe5b602002015160001b8560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156121dd573d6000803e3d6000fd5b5050506020604051035190508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614945050505050949350505050565b61222e612f9d565b61228f600184846040516020018084815260200183600260200280838360005b8381101561226957808201518184015260208101905061224e565b505050509050018281526020019350505050604051602081830303815290604052612646565b90505b61229b81611f7d565b6122df576122d8816000600281106122af57fe5b602002015160405160200180828152602001915050604051602081830303815290604052612646565b9050612292565b92915050565b6122ed612f9d565b60007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8460006002811061231d57fe5b60200201518860006002811061232f57fe5b6020020151038161233c57fe5b0614156123b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f706f696e747320696e2073756d206d7573742062652064697374696e6374000081525060200191505060405180910390fd5b6123bc878988612719565b612411576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806130626021913960400191505060405180910390fd5b61241c848685612719565b612471576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806130836022913960400191505060405180910390fd5b61247c8684846128a4565b9050979650505050505050565b6000600286868685876040516020018087815260200186600260200280838360005b838110156124c65780820151818401526020810190506124ab565b5050505090500185600260200280838360005b838110156124f45780820151818401526020810190506124d9565b5050505090500184600260200280838360005b83811015612522578082015181840152602081019050612507565b5050505090500183600260200280838360005b83811015612550578082015181840152602081019050612535565b505050509050018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140196505050505050506040516020818303038152906040528051906020012060001c905095945050505050565b6000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f806125e357fe5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061260b57fe5b848509840990507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061263a57fe5b60078208915050919050565b61264e612f9d565b61265782612a22565b8160006002811061266457fe5b60200201818152505061268f61268a8260006002811061268057fe5b60200201516125b8565b612a8f565b8160016002811061269c57fe5b60200201818152505060016002826001600281106126b657fe5b6020020151816126c257fe5b06141561271457806001600281106126d657fe5b60200201517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f038160016002811061270a57fe5b6020020181815250505b919050565b60008083141561272857600080fd5b60008460006002811061273757fe5b6020020151905060008060028760016002811061275057fe5b60200201518161275c57fe5b061461276957601c61276c565b601b5b905060007ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641418061279857fe5b83870960001b9050600060016000801b848660001b8560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015612805573d6000803e3d6000fd5b5050506020604051035190506000866040516020018082600260200280838360005b83811015612842578082015181840152602081019050612827565b505050509050019150506040516020818303038152906040528051906020012060001c90508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614955050505050509392505050565b6128ac612f9d565b6000806000612901876000600281106128c157fe5b6020020151886001600281106128d357fe5b6020020151886000600281106128e557fe5b6020020151896001600281106128f757fe5b6020020151612ac9565b80935081945082955050505060017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061293757fe5b868309146129ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f696e765a206d75737420626520696e7665727365206f66207a0000000000000081525060200191505060405180910390fd5b60405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f806129e057fe5b87860981526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80612a1057fe5b87850981525093505050509392505050565b6000818051906020012060001c90505b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8110612a8a5780604051602001808281526020019150506040516020818303038152906040528051906020012060001c9050612a32565b919050565b6000612ac282600260017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f01901c612c9d565b9050919050565b60008060008060006001809150915060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80612b0257fe5b897ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f038808905060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80612b5357fe5b8b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f038a0890506000612b8883838585612dff565b8092508199505050612b9c88828e88612e69565b8092508199505050612bb088828c87612e69565b80925081995050506000612bc68d878b85612e69565b8092508199505050612bda88828686612dff565b8092508199505050612bee88828e89612e69565b8092508199505050808214612c89577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80612c2557fe5b818a0998507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80612c5257fe5b82890997507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80612c7f57fe5b8183099650612c8d565b8196505b5050505050509450945094915050565b600080612ca8612fe1565b602081600060068110612cb757fe5b602002018181525050602081600160068110612ccf57fe5b602002018181525050602081600260068110612ce757fe5b6020020181815250508481600360068110612cfe57fe5b6020020181815250508381600460068110612d1557fe5b6020020181815250507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f81600560068110612d4c57fe5b602002018181525050612d5d613003565b60208160c0846005600019fa92506000831415612de2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6269674d6f64457870206661696c75726521000000000000000000000000000081525060200191505060405180910390fd5b80600060018110612def57fe5b6020020151935050505092915050565b6000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80612e2a57fe5b8487097ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80612e5557fe5b848709809250819350505094509492505050565b60008060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80612e9657fe5b878509905060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80612ec557fe5b87877ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f030990507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80612f1457fe5b8183087ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80612f3f57fe5b8689098094508195505050505094509492505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160006bffffffffffffffffffffffff168152602001600080191681525090565b6040518060400160405280600290602082028036833780820191505090505090565b6040518060600160405280600390602082028036833780820191505090505090565b6040518060c00160405280600690602082028036833780820191505090505090565b604051806020016040528060019060208202803683378082019150509050509056fe796f752063616e277420636861726765206d6f7265207468616e20616c6c20746865204c494e4b20696e2074686520776f726c642c206772656564794669727374206d756c7469706c69636174696f6e20636865636b206661696c65645365636f6e64206d756c7469706c69636174696f6e20636865636b206661696c6564a26469706673582212202cbb5936f85bb28390ed5658cf81ead0fb229e68d4b7c071b7662b4caa3142d064736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA4C0ED36 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xB415F4F5 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xCAF70C4A EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xD8340209 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0xE911439C EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x50A JUMPI PUSH2 0xA8 JUMP JUMPDEST DUP1 PUSH3 0x6F6AD0 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x21F36509 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x5E1C1059 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x75D35070 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x8AA7927B EQ PUSH2 0x2F0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x5D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x7F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3FB PUSH2 0x8FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x474 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x40 ADD SWAP1 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x904 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 PUSH1 0x40 ADD SWAP1 SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x95C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F4 PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x556 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC87 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DC PUSH2 0x2F55 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5E8 DUP6 PUSH2 0xEC0 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x68F DUP5 PUSH1 0x20 ADD MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1322 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP PUSH2 0x745 DUP4 DUP4 DUP7 PUSH1 0x0 ADD MLOAD PUSH2 0x13AA JUMP JUMPDEST PUSH32 0xA2E7A402243EBDA4A69CEEB3DFB682943B7A9B3AC66D6EEFA8DB65894009611C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x20 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4D75737420757365204C494E4B20746F6B656E00000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP SWAP2 POP PUSH2 0x8F8 DUP3 DUP3 DUP7 DUP9 PUSH2 0x156D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0xE0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x935 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x91A JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x99E DUP4 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP PUSH2 0x904 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x706C656173652072656769737465722061206E6577206B657900000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5F6F7261636C65206D757374206E6F7420626520307830000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH12 0x33B2E3C9FD0803CE8000000 DUP7 GT ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3026 PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xAE189157E0628C1E62315E9179156E1EA10E90E9C15060002F7021E907DC2CFE DUP3 DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1A0 DUP2 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xD3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x63616E2774207769746864726177206D6F7265207468616E2062616C616E6365 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD8F DUP3 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1955 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE8E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEBB JUMPI INVALID JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECA PUSH2 0x2F55 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1A0 PUSH1 0x20 ADD SWAP1 POP DUP1 DUP7 MLOAD EQ PUSH2 0xF4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77726F6E672070726F6F66206C656E6774680000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF55 PUSH2 0x2F9D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP10 ADD SWAP3 POP PUSH1 0xE0 DUP10 ADD MLOAD SWAP2 POP DUP4 DUP10 ADD MLOAD SWAP1 POP PUSH2 0xF74 DUP4 PUSH2 0x904 JUMP JUMPDEST SWAP8 POP PUSH2 0xF80 DUP9 DUP4 PUSH2 0x19DE JUMP JUMPDEST SWAP6 POP PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP7 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x10E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F20636F72726573706F6E64696E6720726571756573740000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 PUSH1 0x40 ADD MLOAD EQ PUSH2 0x118E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77726F6E672070726553656564206F7220626C6F636B206E756D000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 BLOCKHASH SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ ISZERO PUSH2 0x12C9 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE9413D38 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1226 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x123C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ ISZERO PUSH2 0x12C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x706C656173652070726F766520626C6F636B6861736800000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP4 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0xE0 DUP13 ADD MSTORE PUSH2 0x1A0 DUP12 MSTORE PUSH2 0x1313 DUP12 PUSH2 0x1A17 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x13A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH4 0x94985DDD PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH3 0x324B0 SWAP1 POP DUP1 GAS LT ISZERO PUSH2 0x14AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F7420656E6F7567682067617320666F7220636F6E73756D65720000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x14F9 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x155B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1560 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP5 PUSH1 0x3 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 LT ISZERO PUSH2 0x1621 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42656C6F7720616772656564207061796D656E74000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1684 DUP9 DUP9 DUP8 DUP6 PUSH2 0x1BD8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1692 DUP10 DUP4 PUSH2 0x19DE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1700 JUMPI INVALID JUMPDEST DUP6 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH12 0x33B2E3C9FD0803CE8000000 DUP8 LT PUSH2 0x176A JUMPI INVALID JUMPDEST DUP7 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 NUMBER PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH32 0x56BD374744A66D531874338DEF36C906E3A6CF31176EB1E9AFD9F1DE69725D51 DUP11 DUP5 DUP10 DUP12 DUP7 PUSH1 0x40 MLOAD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x18F6 PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1322 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x19CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0 DUP3 MLOAD EQ PUSH2 0x1A91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77726F6E672070726F6F66206C656E6774680000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A99 PUSH2 0x2F9D JUMP JUMPDEST PUSH2 0x1AA1 PUSH2 0x2F9D JUMP JUMPDEST PUSH2 0x1AA9 PUSH2 0x2FBF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB3 PUSH2 0x2F9D JUMP JUMPDEST PUSH2 0x1ABB PUSH2 0x2F9D JUMP JUMPDEST PUSH1 0x0 DUP9 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH2 0x1A0 DUP2 LT ISZERO PUSH2 0x1AD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 DUP3 PUSH1 0x40 ADD SWAP2 SWAP1 DUP3 PUSH1 0x40 ADD SWAP2 SWAP1 DUP3 PUSH1 0x60 ADD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 SWAP2 SWAP1 DUP3 PUSH1 0x40 ADD SWAP2 SWAP1 DUP3 PUSH1 0x40 ADD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP4 SWAP4 POP DUP1 SWAP8 POP DUP2 SWAP9 POP DUP3 SWAP10 POP DUP4 SWAP11 POP DUP5 SWAP12 POP DUP6 SWAP13 POP DUP7 SWAP14 POP POP POP POP POP POP POP POP PUSH2 0x1B6F DUP8 DUP8 DUP8 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x1B3D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x1 PUSH1 0x3 DUP2 LT PUSH2 0x1B4F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH2 0x1B61 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 DUP10 DUP10 DUP10 PUSH2 0x1C52 JUMP JUMPDEST PUSH1 0x3 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BA6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B8B JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP8 POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1C5B DUP10 PUSH2 0x1F7D JUMP JUMPDEST PUSH2 0x1CCD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7075626C6963206B6579206973206E6F74206F6E206375727665000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CD6 DUP9 PUSH2 0x1F7D JUMP JUMPDEST PUSH2 0x1D48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x67616D6D61206973206E6F74206F6E2063757276650000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D51 DUP4 PUSH2 0x1F7D JUMP JUMPDEST PUSH2 0x1DC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6347616D6D615769746E657373206973206E6F74206F6E206375727665000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DCC DUP3 PUSH2 0x1F7D JUMP JUMPDEST PUSH2 0x1E3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x73486173685769746E657373206973206E6F74206F6E20637572766500000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E4A DUP8 DUP11 DUP9 DUP8 PUSH2 0x1FEE JUMP JUMPDEST PUSH2 0x1EBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6164647228632A706B2B732A6729E289A05F755769746E657373000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EC4 PUSH2 0x2F9D JUMP JUMPDEST PUSH2 0x1ECE DUP11 DUP8 PUSH2 0x2226 JUMP JUMPDEST SWAP1 POP PUSH2 0x1ED8 PUSH2 0x2F9D JUMP JUMPDEST PUSH2 0x1EE7 DUP10 DUP12 DUP8 DUP12 DUP7 DUP10 DUP10 PUSH2 0x22E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1EF8 DUP4 DUP14 DUP14 DUP11 DUP7 PUSH2 0x2489 JUMP JUMPDEST SWAP1 POP DUP1 DUP11 EQ PUSH2 0x1F6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E76616C69642070726F6F6600000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x1FA7 JUMPI INVALID JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1FB4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1FC6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD MULMOD PUSH2 0x1FE6 DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x1FDC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x25B8 JUMP JUMPDEST EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2092 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x626164207769746E657373000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP7 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x20A4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x20B0 JUMPI INVALID JUMPDEST MOD EQ PUSH2 0x20BD JUMPI PUSH1 0x1C PUSH2 0x20C0 JUMP JUMPDEST PUSH1 0x1B JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 PUSH2 0x20EC JUMPI INVALID JUMPDEST DUP6 DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x20FA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD MULMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 SUB PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 PUSH2 0x2151 JUMPI INVALID JUMPDEST DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x215E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 MULMOD PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 DUP6 DUP11 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x217D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x0 SHL DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP5 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x222E PUSH2 0x2F9D JUMP JUMPDEST PUSH2 0x228F PUSH1 0x1 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2269 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x224E JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x2646 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x229B DUP2 PUSH2 0x1F7D JUMP JUMPDEST PUSH2 0x22DF JUMPI PUSH2 0x22D8 DUP2 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x22AF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x2646 JUMP JUMPDEST SWAP1 POP PUSH2 0x2292 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22ED PUSH2 0x2F9D JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP5 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x231D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x232F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD SUB DUP2 PUSH2 0x233C JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x23B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x706F696E747320696E2073756D206D7573742062652064697374696E63740000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23BC DUP8 DUP10 DUP9 PUSH2 0x2719 JUMP JUMPDEST PUSH2 0x2411 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3062 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x241C DUP5 DUP7 DUP6 PUSH2 0x2719 JUMP JUMPDEST PUSH2 0x2471 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3083 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x247C DUP7 DUP5 DUP5 PUSH2 0x28A4 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP7 DUP7 DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24C6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x24AB JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP6 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24F4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x24D9 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2522 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2507 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2550 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2535 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x25E3 JUMPI INVALID JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x260B JUMPI INVALID JUMPDEST DUP5 DUP6 MULMOD DUP5 MULMOD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x263A JUMPI INVALID JUMPDEST PUSH1 0x7 DUP3 ADDMOD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x264E PUSH2 0x2F9D JUMP JUMPDEST PUSH2 0x2657 DUP3 PUSH2 0x2A22 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x2664 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x268F PUSH2 0x268A DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x2680 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x25B8 JUMP JUMPDEST PUSH2 0x2A8F JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x269C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x2 DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x26B6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x26C2 JUMPI INVALID JUMPDEST MOD EQ ISZERO PUSH2 0x2714 JUMPI DUP1 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x26D6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP2 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x270A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2728 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x2737 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 DUP8 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x2750 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x275C JUMPI INVALID JUMPDEST MOD EQ PUSH2 0x2769 JUMPI PUSH1 0x1C PUSH2 0x276C JUMP JUMPDEST PUSH1 0x1B JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 PUSH2 0x2798 JUMPI INVALID JUMPDEST DUP4 DUP8 MULMOD PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL DUP5 DUP7 PUSH1 0x0 SHL DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2805 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2842 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2827 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP6 POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x28AC PUSH2 0x2F9D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2901 DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x28C1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x28D3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x28E5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x28F7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x2AC9 JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP DUP3 SWAP6 POP POP POP POP PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2937 JUMPI INVALID JUMPDEST DUP7 DUP4 MULMOD EQ PUSH2 0x29AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E765A206D75737420626520696E7665727365206F66207A00000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x29E0 JUMPI INVALID JUMPDEST DUP8 DUP7 MULMOD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2A10 JUMPI INVALID JUMPDEST DUP8 DUP6 MULMOD DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP2 LT PUSH2 0x2A8A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH2 0x2A32 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AC2 DUP3 PUSH1 0x2 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F ADD SWAP1 SHR PUSH2 0x2C9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 DUP1 SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2B02 JUMPI INVALID JUMPDEST DUP10 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP9 ADDMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2B53 JUMPI INVALID JUMPDEST DUP12 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP11 ADDMOD SWAP1 POP PUSH1 0x0 PUSH2 0x2B88 DUP4 DUP4 DUP6 DUP6 PUSH2 0x2DFF JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x2B9C DUP9 DUP3 DUP15 DUP9 PUSH2 0x2E69 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x2BB0 DUP9 DUP3 DUP13 DUP8 PUSH2 0x2E69 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH1 0x0 PUSH2 0x2BC6 DUP14 DUP8 DUP12 DUP6 PUSH2 0x2E69 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x2BDA DUP9 DUP3 DUP7 DUP7 PUSH2 0x2DFF JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x2BEE DUP9 DUP3 DUP15 DUP10 PUSH2 0x2E69 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP DUP1 DUP3 EQ PUSH2 0x2C89 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2C25 JUMPI INVALID JUMPDEST DUP2 DUP11 MULMOD SWAP9 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2C52 JUMPI INVALID JUMPDEST DUP3 DUP10 MULMOD SWAP8 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2C7F JUMPI INVALID JUMPDEST DUP2 DUP4 MULMOD SWAP7 POP PUSH2 0x2C8D JUMP JUMPDEST DUP2 SWAP7 POP JUMPDEST POP POP POP POP POP POP SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CA8 PUSH2 0x2FE1 JUMP JUMPDEST PUSH1 0x20 DUP2 PUSH1 0x0 PUSH1 0x6 DUP2 LT PUSH2 0x2CB7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x20 DUP2 PUSH1 0x1 PUSH1 0x6 DUP2 LT PUSH2 0x2CCF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x20 DUP2 PUSH1 0x2 PUSH1 0x6 DUP2 LT PUSH2 0x2CE7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x3 PUSH1 0x6 DUP2 LT PUSH2 0x2CFE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x4 PUSH1 0x6 DUP2 LT PUSH2 0x2D15 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP2 PUSH1 0x5 PUSH1 0x6 DUP2 LT PUSH2 0x2D4C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2D5D PUSH2 0x3003 JUMP JUMPDEST PUSH1 0x20 DUP2 PUSH1 0xC0 DUP5 PUSH1 0x5 PUSH1 0x0 NOT STATICCALL SWAP3 POP PUSH1 0x0 DUP4 EQ ISZERO PUSH2 0x2DE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6269674D6F64457870206661696C757265210000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 DUP2 LT PUSH2 0x2DEF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2E2A JUMPI INVALID JUMPDEST DUP5 DUP8 MULMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2E55 JUMPI INVALID JUMPDEST DUP5 DUP8 MULMOD DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2E96 JUMPI INVALID JUMPDEST DUP8 DUP6 MULMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2EC5 JUMPI INVALID JUMPDEST DUP8 DUP8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB MULMOD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2F14 JUMPI INVALID JUMPDEST DUP2 DUP4 ADDMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x2F3F JUMPI INVALID JUMPDEST DUP7 DUP10 MULMOD DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP INVALID PUSH26 0x6F752063616E277420636861726765206D6F7265207468616E20 PUSH2 0x6C6C KECCAK256 PUSH21 0x6865204C494E4B20696E2074686520776F726C642C KECCAK256 PUSH8 0x7265656479466972 PUSH20 0x74206D756C7469706C69636174696F6E20636865 PUSH4 0x6B206661 PUSH10 0x6C65645365636F6E6420 PUSH14 0x756C7469706C69636174696F6E20 PUSH4 0x6865636B KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x706673582212202CBB59 CALLDATASIZE 0xF8 JUMPDEST 0xB2 DUP4 SWAP1 0xED JUMP PC 0xCF DUP2 0xEA 0xD0 0xFB 0x22 SWAP15 PUSH9 0xD4B7C071B7662B4CAA BALANCE TIMESTAMP 0xD0 PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "354:12051:3:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;354:12051:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;1814:89:3;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1814:89:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1654:70;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1654:70:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6928:615;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;6928:615:3;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;6928:615:3;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;6928:615:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6928:615:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6928:615:3;;;;;;;;;;;;;;;:::i;:::-;;1728:82;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1728:82:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6339:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4258:237;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4258:237:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;4258:237:3;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;4258:237:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4258:237:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4258:237:3;;;;;;;;;;;;;;;:::i;:::-;;6461:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11431:136;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;11431:136:3;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;11431:136:3;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2855:743;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;2855:743:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;24594:351:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11043:236:3;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;11043:236:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1814:89;;;;;;;;;;;;;;;;;:::o;1654:70::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6928:615::-;6997:22;7021:24;;:::i;:::-;7047:17;7071:18;7093:30;7116:6;7093:22;:30::i;:::-;6996:127;;;;;;;;7148:12;7163:17;:33;7181:14;7163:33;;;;;;;;;;;:43;;;;;;;;;;;;7148:58;;7239:59;7275:8;:22;;;7239:59;;:18;:24;7258:4;7239:24;;;;;;;;;;;;;;;;:28;;:59;;;;:::i;:::-;7212:18;:24;7231:4;7212:24;;;;;;;;;;;;;;;:86;;;;7379:9;:20;7389:9;7379:20;;;;;;;;;;;;7372:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7405:72;7428:9;7439:10;7451:8;:25;;;7405:22;:72::i;:::-;7489:49;7516:9;7527:10;7489:49;;;;;;;;;;;;;;;;;;;;;;;;6928:615;;;;;;:::o;1728:82::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6339:48::-;6383:4;6339:48;:::o;4258:237::-;12050:4;;;;;;;;;;;12028:27;;:10;:27;;;12020:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4367:15:::1;4384:12:::0;4411:5:::1;4400:37;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;4400:37:3;;;;;;;;;;;;;;;;;;;;;;;;;4366:71;;;;4443:47;4461:7;4470:4;4476;4482:7;4443:17;:47::i;:::-;12085:1;;4258:237:::0;;;:::o;6461:45::-;6502:4;6461:45;:::o;11431:136::-;11501:7;11550:10;11533:28;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11533:28:3;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;11533:28:3;;;11523:39;;;;;;11516:46;;11431:136;;;:::o;2855:743::-;2998:15;3016:28;3026:17;3016:28;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3016:28:3;;;;;:9;:28::i;:::-;2998:46;;3050:20;3073:17;:26;3091:7;3073:26;;;;;;;;;;;:36;;;;;;;;;;;;3050:59;;3147:1;3123:26;;:12;:26;;;3115:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3212:1;3193:21;;:7;:21;;;;3185:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3287:7;3248:17;:26;3266:7;3248:26;;;;;;;;;;;:36;;;:46;;;;;;;;;;;;;;;;;;3335:6;3300:17;:26;3318:7;3300:26;;;;;;;;;;;:32;;:41;;;;3417:9;3409:4;:17;;3401:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3543:4;3503:17;:26;3521:7;3503:26;;;;;;;;;;;:30;;;:45;;;;;;;;;;;;;;;;;;3559:34;3579:7;3588:4;3559:34;;;;;;;;;;;;;;;;;;;;;;;;2855:743;;;;;;:::o;24594:351:1:-;24630:315;24594:351;:::o;11043:236:3:-;11133:7;12346;12312:18;:30;12331:10;12312:30;;;;;;;;;;;;;;;;:41;;12304:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11183:43:::1;11218:7;11183:18;:30;11202:10;11183:30;;;;;;;;;;;;;;;;:34;;:43;;;;:::i;:::-;11150:18;:30;11169:10;11150:30;;;;;;;;;;;;;;;:76;;;;11239:4;::::0;::::1;;;;;;;;;:13;;;11253:10;11265:7;11239:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;11239:34:3;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;11239:34:3;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;11239:34:3;;;;;;;;;;;;;;;;11232:42;;;;11043:236:::0;;;:::o;8940:1879::-;9020:22;9044:24;;:::i;:::-;9076:17;9095:18;9273:23;24630:315:1;9299:4:3;:19;9273:45;;9473:15;9456:6;:13;:32;9448:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9517:27;;:::i;:::-;9550:15;9571:16;9678:17;9670:6;9666:30;9653:43;;9732:14;9724:6;9720:27;9714:34;9703:45;;9785:15;9777:6;9773:28;9767:35;9755:47;;9830:20;9840:9;9830;:20::i;:::-;9813:37;;9868:38;9882:14;9898:7;9868:13;:38::i;:::-;9856:50;;9923:9;:20;9933:9;9923:20;;;;;;;;;;;9912:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9994:1;9957:39;;:8;:25;;;:39;;;;9949:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10094:7;10109:8;10077:41;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10077:41:3;;;10067:52;;;;;;10039:8;:24;;;:80;10031:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10157:17;10187:8;10177:19;10157:39;;10227:1;10219:10;;10206:9;:23;10202:159;;;10251:14;;;;;;;;;;;:27;;;10279:8;10251:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;10251:37:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10251:37:3;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;10251:37:3;;;;;;;;;;;;;;;;10239:49;;10325:1;10317:10;;10304:9;:23;;10296:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10202:159;10442:18;10498:7;10507:9;10481:36;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10481:36:3;;;10471:47;;;;;;10463:56;;10442:77;;10687:10;10670:14;10662:6;10658:27;10651:47;10720:12;10712:6;10705:28;10757:35;10785:6;10757:27;:35::i;:::-;10744:48;;8940:1879;;;;;;;;;;;:::o;822:162:0:-;880:7;895:9;911:1;907;:5;895:17;;931:1;926;:6;;918:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;978:1;971:8;;;822:162;;;;:::o;7547:1389:3:-;7816:17;7839;7889:31;;;7922:9;7933:10;7859:85;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7859:85:3;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;7859:85:3;7839:105;;8213:9;8225:6;8213:18;;8258:1;8245:9;:14;;8237:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8716:12;8733:16;:21;;8755:4;8733:27;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;8733:27:3;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;8715:45:3;;;7547:1389;;;;;;;:::o;5243:966::-;5398:8;5408;11862:17;:27;11880:8;11862:27;;;;;;;;;;;:31;;;;;;;;;;;;11850:43;;:8;:43;;11842:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5426:13:::1;5442:6;:16;5449:8;5442:16;;;;;;;;;;;:25;5459:7;5442:25;;;;;;;;;;;;;;;;5426:41;;5473:15;5491:57;5508:8;5518:13;5533:7;5542:5;5491:16;:57::i;:::-;5473:75;;5554:17;5574:32;5588:8;5598:7;5574:13;:32::i;:::-;5554:52;;5745:1;5696:51;;:9;:20;5706:9;5696:20;;;;;;;;;;;:37;;;;;;;;;;;;:51;;;5689:59;;;;5794:7;5754:9;:20;5764:9;5754:20;;;;;;;;;;;:37;;;:47;;;;;;;;;;;;;;;;;;5825:4;5814:8;:15;5807:23;;;;5909:8;5865:9;:20;5875:9;5865:20;;;;;;;;;;;:34;;;:53;;;;;;;;;;;;;;;;;;5997:7;6006:12;5973:46;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5973:46:3;;;5963:57;;;;;;5924:9;:20;5934:9;5924:20;;;;;;;;;;;:36;;:96;;;;6068:17;:27;6086:8;6068:27;;;;;;;;;;;:33;;;6031:107;6049:8;6059:7;6109;6118:8;6128:9;6031:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6172:32;6202:1;6172:6;:16;6179:8;6172:16;;;;;;;;;;;:25;6189:7;6172:25;;;;;;;;;;;;;;;;:29;;:32;;;;:::i;:::-;6144:6;:16;6151:8;6144:16;;;;;;;;;;;:25;6161:7;6144:25;;;;;;;;;;;;;;;:60;;;;11924:1;;;5243:966:::0;;;;;;:::o;1236:165:0:-;1294:7;1322:1;1317;:6;;1309:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1364:9;1380:1;1376;:5;1364:17;;1395:1;1388:8;;;1236:165;;;;:::o;1376:171:4:-;1468:7;1517:8;1527:13;1500:41;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1500:41:4;;;1490:52;;;;;;1483:59;;1376:171;;;;:::o;25549:997:1:-;25629:14;24630:315;25661:5;:12;:28;25653:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25721:20;;:::i;:::-;25794:23;;:::i;:::-;25903:24;;:::i;:::-;25935:16;25959:31;;:::i;:::-;25998:30;;:::i;:::-;26036:12;26143:5;26123:122;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;26123:122:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26056:189;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26253:201;26277:2;26289:5;26304:6;26311:1;26304:9;;;;;;;;;;;26328:6;26335:1;26328:9;;;;;;;;;;;26352:6;26359:1;26352:9;;;;;;;;;;;26379:8;26397:13;26420:12;26442:4;26253:14;:201::i;:::-;24519:1;26531:5;26489:48;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;26489:48:1;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;26489:48:1;;;26479:59;;;;;;26471:68;;26462:77;;25549:997;;;;;;;;;;:::o;765:231:4:-;895:7;949:8;959:9;970:10;982:6;938:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;938:51:4;;;928:62;;;;;;920:71;;912:79;;765:231;;;;;;:::o;22819:1521:1:-;23070:13;23080:2;23070:9;:13::i;:::-;23062:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23130:16;23140:5;23130:9;:16::i;:::-;23122:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23188:24;23198:13;23188:9;:24::i;:::-;23180:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23262:23;23272:12;23262:9;:23::i;:::-;23254:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23720:56;23757:1;23760:2;23764:1;23767:8;23720:36;:56::i;:::-;23703:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23917:22;;:::i;:::-;23942:21;23954:2;23958:4;23942:11;:21::i;:::-;23917:46;;24055:19;;:::i;:::-;24077:80;24104:1;24107:5;24114:13;24129:1;24132:4;24138:12;24152:4;24077:17;:80::i;:::-;24055:102;;24216:16;24235:51;24257:4;24263:2;24267:5;24274:8;24284:1;24235:21;:51::i;:::-;24216:70;;24307:8;24302:1;:13;24294:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22819:1521;;;;;;;;;;;;:::o;9658:135::-;9721:4;7588:66;9758:30;;;;;9771:1;9773;9771:4;;;;;;;;;;;9765:1;9767;9765:4;;;;;;;;;;;9758:30;9740:14;9749:1;9751;9749:4;;;;;;;;;;;9740:8;:14::i;:::-;:48;9733:55;;9658:135;;;:::o;18872:1044::-;19012:4;19121:1;19100:23;;:9;:23;;;;19092:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19147:7;19170:1;19165;19158;19160;19158:4;;;;;;;;;;;:8;;;;;;:13;19157:25;;19180:2;19157:25;;;19175:2;19157:25;19147:35;;19219:18;7354:66;19262:28;;;;;19275:1;19269;19271;19269:4;;;;;;;;;;;19262:28;7354:66;19248:42;19240:51;;19219:72;;19310:23;7354:66;19344:28;;;;;19354:1;19356;19354:4;;;;;;;;;;;19351:1;19344:28;19336:37;;19310:63;;19798:16;19817:56;19827:10;19839:1;19850;19852;19850:4;;;;;;;;;;;19842:13;;19857:15;19817:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19817:56:1;;;;;;;;19798:75;;19900:9;19888:21;;:8;:21;;;19881:28;;;;;;18872:1044;;;;;;:::o;11832:369::-;11917:20;;:::i;:::-;11952:137;11058:1;12078:2;12082:5;11979:109;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11979:109:1;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;11979:109:1;;;11952:26;:137::i;:::-;11947:142;;12097:98;12105:13;12115:2;12105:9;:13::i;:::-;12097:98;;12135:51;12179:2;12182:1;12179:5;;;;;;;;;;;12162:23;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;12162:23:1;;;12135:26;:51::i;:::-;12130:56;;12097:98;;;11832:369;;;;:::o;20399:572::-;20606:17;;:::i;:::-;20689:1;7588:66;20658:10;20669:1;20658:13;;;;;;;;;;;20642:10;20653:1;20642:13;;;;;;;;;;;:29;20641:44;;;;;;:49;;20633:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20755:30;20767:2;20771:1;20774:10;20755:11;:30::i;:::-;20747:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20839:30;20851:2;20855:1;20858:10;20839:11;:30::i;:::-;20831:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20923:41;20935:10;20947;20959:4;20923:11;:41::i;:::-;20916:48;;20399:572;;;;;;;;;:::o;21878:358::-;22055:9;21159:1;22198:4;22204:2;22208:5;22215:1;22218:8;22108:119;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;22108:119:1;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;22108:119:1;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;22108:119:1;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;22108:119:1;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;22108:119:1;;;22098:130;;;;;;22081:148;;22074:155;;21878:358;;;;;;;:::o;9363:259::-;9415:7;9511:14;7588:66;9528:47;;;;;7588:66;9538:24;;;;;9548:1;9545;9538:24;9535:1;9528:47;9511:64;;7588:66;9588:29;;;;;9603:1;9595:6;9588:29;9581:36;;;9363:259;;;:::o;10656:244::-;10735:19;;:::i;:::-;10771:12;10781:1;10771:9;:12::i;:::-;10764:1;10766;10764:4;;;;;;;;;;:19;;;;;10798:26;10809:14;10818:1;10820;10818:4;;;;;;;;;;;10809:8;:14::i;:::-;10798:10;:26::i;:::-;10791:1;10793;10791:4;;;;;;;;;;:33;;;;;10848:1;10843;10836;10838;10836:4;;;;;;;;;;;:8;;;;;;:13;10832:62;;;10881:1;10883;10881:4;;;;;;;;;;;7588:66;10868:17;10861:1;10863;10861:4;;;;;;;;;;:24;;;;;10832:62;10656:244;;;:::o;12693:978::-;12815:13;12856:1;12846:6;:11;;12838:20;;12:1:-1;9;2:12;12838:20:1;12903:9;12915:12;12928:1;12915:15;;;;;;;;;;;12903:27;;12966:7;12999:1;12994;12976:12;12989:1;12976:15;;;;;;;;;;;:19;;;;;;:24;:34;;13008:2;12976:34;;;13003:2;12976:34;12966:44;;13359:20;7354:66;13390:30;;;;;13405:1;13397:6;13390:30;13382:39;;13359:62;;13427:14;13444:50;13462:1;13454:10;;13466:1;13477;13469:10;;13481:12;13444:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13444:50:1;;;;;;;;13427:67;;13560:16;13622:7;13605:25;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13605:25:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;13605:25:1;;;13595:36;;;;;;13587:45;;13560:73;;13657:8;13647:18;;:6;:18;;;13639:27;;;;;;;12693:978;;;;;:::o;18234:519::-;18345:17;;:::i;:::-;18370:9;18385;18400;18427:43;18443:2;18446:1;18443:5;;;;;;;;;;;18450:2;18453:1;18450:5;;;;;;;;;;;18457:2;18460:1;18457:5;;;;;;;;;;;18464:2;18467:1;18464:5;;;;;;;;;;;18427:15;:43::i;:::-;18415:55;;;;;;;;;;;;18515:1;7588:66;18484:27;;;;;18494:4;18491:1;18484:27;:32;18476:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18683:65;;;;;;;;7588:66;18691:27;;;;;18701:4;18698:1;18691:27;18683:65;;;;7588:66;18720:27;;;;;18730:4;18727:1;18720:27;18683:65;;;;;;;;18234:519;;;;;:::o;9848:394::-;9906:10;9947:1;9937:12;;;;;;9929:21;;9924:26;;10153:85;7588:66;10160:2;:16;10153:85;;10226:2;10209:20;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10209:20:1;;;10199:31;;;;;;10191:40;;10186:45;;10153:85;;;9848:394;;;:::o;9198:105::-;9252:7;9274:24;9284:1;9132;9126;7588:66;9113:14;9112:21;;9274:9;:24::i;:::-;9267:31;;9198:105;;;:::o;15969:1996::-;16068:10;16080;16092;16783;16795;16810:1;16813;16782:33;;;;16892:10;7588:66;16905:39;;;;;16929:2;7588:66;16916:15;16912:2;16905:39;16892:52;;16952:10;7588:66;16965:39;;;;;16989:2;7588:66;16976:15;16972:2;16965:39;16952:52;;17013:10;17127:29;17141:2;17145;17149;17153;17127:13;:29::i;:::-;17116:40;;;;;;;;17198:29;17212:2;17216;17220;17224;17198:13;:29::i;:::-;17187:40;;;;;;;;17272:29;17286:2;17290;17294;17298;17272:13;:29::i;:::-;17261:40;;;;;;;;17339:10;17455:29;17469:2;17473;17477;17481;17455:13;:29::i;:::-;17444:40;;;;;;;;17512:29;17526:2;17530;17534;17538;17512:13;:29::i;:::-;17501:40;;;;;;;;17588:29;17602:2;17606;17610;17614;17588:13;:29::i;:::-;17577:40;;;;;;;;17667:2;17661;:8;17657:302;;7588:66;17748:26;;;;;17759:2;17755;17748:26;17743:31;;7588:66;17789:26;;;;;17800:2;17796;17789:26;17784:31;;7588:66;17830:26;;;;;17841:2;17837;17830:26;17825:31;;17657:302;;;17948:2;17943:7;;17657:302;15969:1996;;;;;;;;;;;;;;:::o;7827:1072::-;7905:22;7937:18;7963:41;;:::i;:::-;7703:4;8012:23;8036:1;8012:26;;;;;;;;;;:46;;;;;7703:4;8085:23;8109:1;8085:26;;;;;;;;;;:46;;;;;7703:4;8162:23;8186:1;8162:26;;;;;;;;;;:46;;;;;8267:4;8238:23;8262:1;8238:26;;;;;;;;;;:33;;;;;8308:8;8279:23;8303:1;8279:26;;;;;;;;;;:37;;;;;7588:66;8324:23;8348:1;8324:26;;;;;;;;;;:39;;;;;8371:24;;:::i;:::-;8741:4;8725:6;8650:4;8617:23;8553:4;8501:1;8497:6;8477:325;8463:339;;8835:1;8821:10;:15;8817:52;;;8839:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8817:52;8883:6;8890:1;8883:9;;;;;;;;;;;8876:16;;;;;7827:1072;;;;:::o;14165:203::-;14262:10;14274;7588:66;14306:26;;;;;14317:2;14313;14306:26;7588:66;14334:26;;;;;14345:2;14341;14334:26;14294:67;;;;;;;;14165:203;;;;;;;:::o;13761:318::-;13858:10;13870;13890:12;7588:66;13905:26;;;;;13916:2;13912;13905:26;13890:41;;13939:12;7588:66;13954:39;;;;;13978:2;13974;7588:66;13961:15;13954:39;13939:54;;7588:66;14013:30;;;;;14026:4;14020;14013:30;7588:66;14045:26;;;;;14056:2;14052;14045:26;14001:71;;;;;;;;13761:318;;;;;;;;;:::o;354:12051:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;125:4;109:14;101:6;88:42;156:4;148:6;144:17;134:27;;0:165;354:12051:3;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;125:4;109:14;101:6;88:42;156:4;148:6;144:17;134:27;;0:165;354:12051:3;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;125:4;109:14;101:6;88:42;156:4;148:6;144:17;134:27;;0:165;354:12051:3;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;125:4;109:14;101:6;88:42;156:4;148:6;144:17;134:27;;0:165;354:12051:3;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2501200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"PRESEED_OFFSET()": "227",
								"PROOF_LENGTH()": "293",
								"PUBLIC_KEY_OFFSET()": "294",
								"callbacks(bytes32)": "3010",
								"fulfillRandomnessRequest(bytes)": "infinite",
								"hashOfKey(uint256[2])": "infinite",
								"onTokenTransfer(address,uint256,bytes)": "infinite",
								"registerProvingKey(uint256,address,uint256[2],bytes32)": "infinite",
								"serviceAgreements(bytes32)": "3054",
								"withdraw(address,uint256)": "infinite",
								"withdrawableTokens(address)": "1170"
							},
							"internal": {
								"callBackWithRandomness(bytes32,uint256,address)": "infinite",
								"getRandomnessFromProof(bytes memory)": "infinite",
								"randomnessRequest(bytes32,uint256,uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 354,
									"end": 12405,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 354,
									"end": 12405,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 354,
									"end": 12405,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 527,
									"end": 692,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 527,
									"end": 692,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 527,
									"end": 692,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 15,
									"end": 17,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 10,
									"end": 13,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 7,
									"end": 18,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 31,
									"end": 32,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 29,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 21,
									"end": 33,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "tag",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 527,
									"end": 692,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 527,
									"end": 692,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 527,
									"end": 692,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 618,
									"end": 623,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 592,
									"end": 596,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 592,
									"end": 596,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 592,
									"end": 624,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 592,
									"end": 624,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 592,
									"end": 624,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 592,
									"end": 624,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 592,
									"end": 624,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 592,
									"end": 624,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 592,
									"end": 624,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 592,
									"end": 624,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 592,
									"end": 624,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 592,
									"end": 624,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 592,
									"end": 624,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 592,
									"end": 624,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 592,
									"end": 624,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 592,
									"end": 624,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 592,
									"end": 624,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 592,
									"end": 624,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 592,
									"end": 624,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 592,
									"end": 624,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 671,
									"end": 686,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 630,
									"end": 644,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 644,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 687,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 630,
									"end": 687,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 630,
									"end": 687,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 630,
									"end": 687,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 630,
									"end": 687,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 630,
									"end": 687,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 630,
									"end": 687,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 630,
									"end": 687,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 630,
									"end": 687,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 630,
									"end": 687,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 630,
									"end": 687,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 630,
									"end": 687,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 630,
									"end": 687,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 630,
									"end": 687,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 630,
									"end": 687,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 630,
									"end": 687,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 630,
									"end": 687,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 630,
									"end": 687,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 527,
									"end": 692,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 354,
									"end": 12405,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 354,
									"end": 12405,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 354,
									"end": 12405,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 354,
									"end": 12405,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 354,
									"end": 12405,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 354,
									"end": 12405,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 354,
									"end": 12405,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202cbb5936f85bb28390ed5658cf81ead0fb229e68d4b7c071b7662b4caa3142d064736f6c63430006060033",
									".code": [
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "A4C0ED36"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "A4C0ED36"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "B415F4F5"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "CAF70C4A"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "D8340209"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "E911439C"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "F3FEF3A3"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "6F6AD0"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "21F36509"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "5E1C1059"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "75D35070"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "8AA7927B"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "16"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "16"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "22"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "22"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 27,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 14,
											"end": 25,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 11,
											"end": 39,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "23"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 42,
											"end": 54,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "23"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 41,
											"end": 50,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 34,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 18,
											"end": 32,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 39,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 64,
											"end": 65,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 62,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 54,
											"end": 66,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "25"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "25"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "28"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "28"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "33"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "33"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 27,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 14,
											"end": 25,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 11,
											"end": 39,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "34"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 42,
											"end": 54,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "34"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 41,
											"end": 50,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 34,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 18,
											"end": 32,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 39,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "35"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 64,
											"end": 65,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 62,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 54,
											"end": 66,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "35"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "36"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "36"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "41"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "41"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15,
											"end": 18,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 19,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "44"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 32,
											"end": 33,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22,
											"end": 34,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "44"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "49"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "49"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1903,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1724,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6997,
											"end": 7019,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7045,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 7021,
											"end": 7045,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 7021,
											"end": 7045,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7021,
											"end": 7045,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 7021,
											"end": 7045,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7064,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7071,
											"end": 7089,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7093,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 7116,
											"end": 7122,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7093,
											"end": 7115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 7093,
											"end": 7123,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7093,
											"end": 7123,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 7093,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6996,
											"end": 7123,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6996,
											"end": 7123,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6996,
											"end": 7123,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6996,
											"end": 7123,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6996,
											"end": 7123,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6996,
											"end": 7123,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6996,
											"end": 7123,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6996,
											"end": 7123,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7148,
											"end": 7160,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7163,
											"end": 7180,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 7163,
											"end": 7196,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7181,
											"end": 7195,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7196,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7196,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7196,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7163,
											"end": 7196,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7196,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7196,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7196,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7196,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7163,
											"end": 7196,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7196,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7163,
											"end": 7196,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7206,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7163,
											"end": 7206,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7206,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7163,
											"end": 7206,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7206,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7206,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7206,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7163,
											"end": 7206,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7206,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7206,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7206,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7163,
											"end": 7206,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7148,
											"end": 7206,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7148,
											"end": 7206,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7239,
											"end": 7298,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 7275,
											"end": 7283,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7275,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7275,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7275,
											"end": 7297,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7239,
											"end": 7298,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7239,
											"end": 7298,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7239,
											"end": 7257,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7239,
											"end": 7263,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7258,
											"end": 7262,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7239,
											"end": 7263,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7239,
											"end": 7263,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7239,
											"end": 7263,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7239,
											"end": 7263,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7239,
											"end": 7263,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7239,
											"end": 7263,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7239,
											"end": 7263,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7239,
											"end": 7263,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7239,
											"end": 7263,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7239,
											"end": 7263,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7239,
											"end": 7263,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7239,
											"end": 7263,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7239,
											"end": 7263,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7239,
											"end": 7263,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7239,
											"end": 7263,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7239,
											"end": 7263,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7239,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 7239,
											"end": 7267,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7239,
											"end": 7298,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7239,
											"end": 7298,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7239,
											"end": 7298,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7239,
											"end": 7298,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7239,
											"end": 7298,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7239,
											"end": 7298,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 7239,
											"end": 7298,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7212,
											"end": 7230,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7212,
											"end": 7236,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7231,
											"end": 7235,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7212,
											"end": 7236,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7212,
											"end": 7236,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7212,
											"end": 7236,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7212,
											"end": 7236,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7212,
											"end": 7236,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7212,
											"end": 7236,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7212,
											"end": 7236,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7212,
											"end": 7236,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7212,
											"end": 7236,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7212,
											"end": 7236,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7212,
											"end": 7236,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7212,
											"end": 7236,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7212,
											"end": 7236,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7212,
											"end": 7236,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7212,
											"end": 7236,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7212,
											"end": 7298,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7212,
											"end": 7298,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7212,
											"end": 7298,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7212,
											"end": 7298,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7379,
											"end": 7388,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7379,
											"end": 7399,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7389,
											"end": 7398,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7379,
											"end": 7399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7379,
											"end": 7399,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7379,
											"end": 7399,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7379,
											"end": 7399,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7379,
											"end": 7399,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7379,
											"end": 7399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7379,
											"end": 7399,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7379,
											"end": 7399,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7379,
											"end": 7399,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7379,
											"end": 7399,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7379,
											"end": 7399,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7379,
											"end": 7399,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7405,
											"end": 7477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 7428,
											"end": 7437,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7449,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7451,
											"end": 7459,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7451,
											"end": 7476,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7451,
											"end": 7476,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7451,
											"end": 7476,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7405,
											"end": 7427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 7405,
											"end": 7477,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7405,
											"end": 7477,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 7405,
											"end": 7477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7489,
											"end": 7538,
											"name": "PUSH",
											"source": 3,
											"value": "A2E7A402243EBDA4A69CEEB3DFB682943B7A9B3AC66D6EEFA8DB65894009611C"
										},
										{
											"begin": 7516,
											"end": 7525,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7527,
											"end": 7537,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7489,
											"end": 7538,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7489,
											"end": 7538,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7489,
											"end": 7538,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7489,
											"end": 7538,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7489,
											"end": 7538,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7489,
											"end": 7538,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7489,
											"end": 7538,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7489,
											"end": 7538,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7489,
											"end": 7538,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7489,
											"end": 7538,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7489,
											"end": 7538,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7489,
											"end": 7538,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7489,
											"end": 7538,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7489,
											"end": 7538,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7489,
											"end": 7538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7489,
											"end": 7538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7489,
											"end": 7538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7489,
											"end": 7538,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7489,
											"end": 7538,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7489,
											"end": 7538,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7489,
											"end": 7538,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7489,
											"end": 7538,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7489,
											"end": 7538,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7489,
											"end": 7538,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 7543,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1810,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6383,
											"end": 6387,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6339,
											"end": 6387,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12050,
											"end": 12054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12050,
											"end": 12054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12050,
											"end": 12054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12050,
											"end": 12054,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 12050,
											"end": 12054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12050,
											"end": 12054,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 12050,
											"end": 12054,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 12050,
											"end": 12054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12050,
											"end": 12054,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 12050,
											"end": 12054,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12050,
											"end": 12054,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12028,
											"end": 12055,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12028,
											"end": 12055,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12028,
											"end": 12038,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 12028,
											"end": 12055,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12028,
											"end": 12055,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12028,
											"end": 12055,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "PUSH",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "PUSH",
											"source": 3,
											"value": "4D75737420757365204C494E4B20746F6B656E00000000000000000000000000"
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 12020,
											"end": 12079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4382,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4384,
											"end": 4396,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4411,
											"end": 4416,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "63"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "63"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4437,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4437,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4443,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4461,
											"end": 4468,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4470,
											"end": 4474,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4480,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4482,
											"end": 4489,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 4443,
											"end": 4460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 4443,
											"end": 4490,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4443,
											"end": 4490,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4443,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12085,
											"end": 12086,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12085,
											"end": 12086,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4495,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6502,
											"end": 6506,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6461,
											"end": 6506,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11501,
											"end": 11508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11550,
											"end": 11560,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "67"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "69"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "67"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "69"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11533,
											"end": 11561,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11523,
											"end": 11562,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11523,
											"end": 11562,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11523,
											"end": 11562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11523,
											"end": 11562,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11523,
											"end": 11562,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11523,
											"end": 11562,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11516,
											"end": 11562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11516,
											"end": 11562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11567,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3013,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3026,
											"end": 3043,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3016,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3044,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3070,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3090,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3073,
											"end": 3099,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3091,
											"end": 3098,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3099,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3099,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3099,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3073,
											"end": 3099,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3099,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3099,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3099,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3099,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3073,
											"end": 3099,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3099,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3099,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3109,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3109,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3109,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3109,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3109,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3073,
											"end": 3109,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3109,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3109,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3073,
											"end": 3109,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3109,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3149,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3123,
											"end": 3149,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3123,
											"end": 3149,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3123,
											"end": 3149,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3123,
											"end": 3149,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "PUSH",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "PUSH",
											"source": 3,
											"value": "706C656173652072656769737465722061206E6577206B657900000000000000"
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3212,
											"end": 3213,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3193,
											"end": 3200,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH",
											"source": 3,
											"value": "5F6F7261636C65206D757374206E6F7420626520307830000000000000000000"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3185,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3287,
											"end": 3294,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3265,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3248,
											"end": 3274,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3273,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3274,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3274,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3274,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3248,
											"end": 3274,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3274,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3274,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3274,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3274,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3248,
											"end": 3274,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3274,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3274,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3284,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3284,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3284,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3294,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3248,
											"end": 3294,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3294,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3294,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3294,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3294,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3248,
											"end": 3294,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3294,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3294,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3294,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3294,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3294,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3248,
											"end": 3294,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3294,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3294,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3294,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3294,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3335,
											"end": 3341,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3317,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3300,
											"end": 3326,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3318,
											"end": 3325,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3326,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3326,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3326,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3300,
											"end": 3326,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3326,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3326,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3326,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3326,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3300,
											"end": 3326,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3326,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3300,
											"end": 3326,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3332,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3300,
											"end": 3332,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3341,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3341,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3417,
											"end": 3426,
											"name": "PUSH",
											"source": 3,
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 3409,
											"end": 3413,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3409,
											"end": 3426,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3409,
											"end": 3426,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "PUSH",
											"source": 3,
											"value": "3C"
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "PUSH data",
											"source": 3,
											"value": "3A4898A14F86303F4F0F062CF67700E5107CAF8A2238D9BBA8AA8F9B688110E9"
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "PUSH",
											"source": 3,
											"value": "3C"
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3401,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3543,
											"end": 3547,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3520,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3503,
											"end": 3529,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3528,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3529,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3529,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3529,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3503,
											"end": 3529,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3529,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3529,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3529,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3529,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3503,
											"end": 3529,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3529,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3503,
											"end": 3529,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3533,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3503,
											"end": 3533,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3533,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3503,
											"end": 3548,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3503,
											"end": 3548,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3548,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3548,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3548,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3548,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3503,
											"end": 3548,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3548,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3548,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3548,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3548,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3548,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3503,
											"end": 3548,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3548,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3548,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3548,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3548,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3548,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3593,
											"name": "PUSH",
											"source": 3,
											"value": "AE189157E0628C1E62315E9179156E1EA10E90E9C15060002F7021E907DC2CFE"
										},
										{
											"begin": 3579,
											"end": 3586,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3588,
											"end": 3592,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3593,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3559,
											"end": 3593,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3593,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3593,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3593,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3593,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3559,
											"end": 3593,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3593,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3593,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3593,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3593,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3559,
											"end": 3593,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3593,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3593,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3559,
											"end": 3593,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3593,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3593,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3593,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3593,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3598,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24630,
											"end": 24945,
											"name": "PUSH",
											"source": 1,
											"value": "1A0"
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24594,
											"end": 24945,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11133,
											"end": 11140,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12346,
											"end": 12353,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12312,
											"end": 12330,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12312,
											"end": 12342,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12331,
											"end": 12341,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 12312,
											"end": 12342,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12312,
											"end": 12342,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12312,
											"end": 12342,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12312,
											"end": 12342,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12312,
											"end": 12342,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12312,
											"end": 12342,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12312,
											"end": 12342,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12312,
											"end": 12342,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12312,
											"end": 12342,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12312,
											"end": 12342,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12312,
											"end": 12342,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12312,
											"end": 12342,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12312,
											"end": 12342,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12312,
											"end": 12342,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12312,
											"end": 12342,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 12312,
											"end": 12342,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 12312,
											"end": 12353,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 12312,
											"end": 12353,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "PUSH",
											"source": 3,
											"value": "63616E2774207769746864726177206D6F7265207468616E2062616C616E6365"
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 12304,
											"end": 12390,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 11218,
											"end": 11225,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11201,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11183,
											"end": 11213,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11202,
											"end": 11212,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11213,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11183,
											"end": 11213,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11213,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11183,
											"end": 11213,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11213,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11213,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11213,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11183,
											"end": 11213,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11213,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11213,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11213,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11213,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11183,
											"end": 11213,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11213,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11183,
											"end": 11213,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11213,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 11183,
											"end": 11217,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11226,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11226,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11226,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11183,
											"end": 11226,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11226,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11183,
											"end": 11226,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 11183,
											"end": 11226,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11150,
											"end": 11168,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11150,
											"end": 11180,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11169,
											"end": 11179,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 11150,
											"end": 11180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11150,
											"end": 11180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11150,
											"end": 11180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11150,
											"end": 11180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11150,
											"end": 11180,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11150,
											"end": 11180,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11150,
											"end": 11180,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11150,
											"end": 11180,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11150,
											"end": 11180,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11150,
											"end": 11180,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11150,
											"end": 11180,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11150,
											"end": 11180,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11150,
											"end": 11180,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11150,
											"end": 11180,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11150,
											"end": 11180,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11150,
											"end": 11226,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11150,
											"end": 11226,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11150,
											"end": 11226,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11150,
											"end": 11226,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11243,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11239,
											"end": 11243,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11243,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11243,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11243,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11243,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 11239,
											"end": 11243,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11243,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11243,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11243,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11239,
											"end": 11243,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11252,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11239,
											"end": 11252,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11252,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 11253,
											"end": 11263,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11265,
											"end": 11272,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "82"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "82"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "83"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "83"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11232,
											"end": 11274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 11232,
											"end": 11274,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11232,
											"end": 11274,
											"name": "INVALID",
											"source": 3
										},
										{
											"begin": 11232,
											"end": 11274,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 11232,
											"end": 11274,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11279,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8940,
											"end": 10819,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 8940,
											"end": 10819,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9020,
											"end": 9042,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9044,
											"end": 9068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 9044,
											"end": 9068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 9044,
											"end": 9068,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9044,
											"end": 9068,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 9044,
											"end": 9068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9076,
											"end": 9093,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9095,
											"end": 9113,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9273,
											"end": 9296,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 24630,
											"end": 24945,
											"name": "PUSH",
											"source": 1,
											"value": "1A0"
										},
										{
											"begin": 9299,
											"end": 9303,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9299,
											"end": 9318,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9273,
											"end": 9318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9273,
											"end": 9318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9473,
											"end": 9488,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9456,
											"end": 9462,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9456,
											"end": 9469,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9456,
											"end": 9488,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "PUSH",
											"source": 3,
											"value": "77726F6E672070726F6F66206C656E6774680000000000000000000000000000"
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 9448,
											"end": 9511,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9517,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 9517,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 9517,
											"end": 9544,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9517,
											"end": 9544,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 9517,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9550,
											"end": 9565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9571,
											"end": 9587,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9678,
											"end": 9695,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9670,
											"end": 9676,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 9666,
											"end": 9696,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9653,
											"end": 9696,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9653,
											"end": 9696,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9732,
											"end": 9746,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 9724,
											"end": 9730,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 9720,
											"end": 9747,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9714,
											"end": 9748,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9703,
											"end": 9748,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9703,
											"end": 9748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9785,
											"end": 9800,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9777,
											"end": 9783,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 9773,
											"end": 9801,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9767,
											"end": 9802,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9755,
											"end": 9802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9755,
											"end": 9802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9830,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9830,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 9830,
											"end": 9850,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9830,
											"end": 9850,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 9830,
											"end": 9850,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9850,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9850,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9868,
											"end": 9906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 9882,
											"end": 9896,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 9898,
											"end": 9905,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9868,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 9868,
											"end": 9906,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9868,
											"end": 9906,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 9868,
											"end": 9906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9856,
											"end": 9906,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 9856,
											"end": 9906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9923,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 9923,
											"end": 9943,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9933,
											"end": 9942,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9923,
											"end": 9943,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9923,
											"end": 9943,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9923,
											"end": 9943,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9923,
											"end": 9943,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9923,
											"end": 9943,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9923,
											"end": 9943,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9923,
											"end": 9943,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9923,
											"end": 9943,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9923,
											"end": 9943,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9923,
											"end": 9943,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9923,
											"end": 9943,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9943,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9994,
											"end": 9995,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9957,
											"end": 9996,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9957,
											"end": 9996,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9957,
											"end": 9965,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9957,
											"end": 9982,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9957,
											"end": 9982,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9957,
											"end": 9982,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9957,
											"end": 9996,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9957,
											"end": 9996,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9957,
											"end": 9996,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9957,
											"end": 9996,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "PUSH",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "PUSH",
											"source": 3,
											"value": "6E6F20636F72726573706F6E64696E6720726571756573740000000000000000"
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 9949,
											"end": 10025,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10094,
											"end": 10101,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10109,
											"end": 10117,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10077,
											"end": 10118,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10077,
											"end": 10118,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10077,
											"end": 10118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10077,
											"end": 10118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10077,
											"end": 10118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10077,
											"end": 10118,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10077,
											"end": 10118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10077,
											"end": 10118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10077,
											"end": 10118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10077,
											"end": 10118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10077,
											"end": 10118,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10077,
											"end": 10118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10077,
											"end": 10118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10077,
											"end": 10118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10077,
											"end": 10118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10077,
											"end": 10118,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10077,
											"end": 10118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10077,
											"end": 10118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10077,
											"end": 10118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10077,
											"end": 10118,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10077,
											"end": 10118,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10077,
											"end": 10118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10077,
											"end": 10118,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10077,
											"end": 10118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10067,
											"end": 10119,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10067,
											"end": 10119,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10067,
											"end": 10119,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10067,
											"end": 10119,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10067,
											"end": 10119,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10067,
											"end": 10119,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10039,
											"end": 10047,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 10039,
											"end": 10063,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10039,
											"end": 10063,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10039,
											"end": 10063,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10039,
											"end": 10119,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "PUSH",
											"source": 3,
											"value": "1A"
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "PUSH",
											"source": 3,
											"value": "77726F6E672070726553656564206F7220626C6F636B206E756D000000000000"
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 10031,
											"end": 10150,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10157,
											"end": 10174,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10187,
											"end": 10195,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10177,
											"end": 10196,
											"name": "BLOCKHASH",
											"source": 3
										},
										{
											"begin": 10157,
											"end": 10196,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10157,
											"end": 10196,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10227,
											"end": 10228,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10219,
											"end": 10229,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10219,
											"end": 10229,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 10206,
											"end": 10215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10206,
											"end": 10229,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10202,
											"end": 10361,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10202,
											"end": 10361,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 10202,
											"end": 10361,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10251,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10251,
											"end": 10265,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10265,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10265,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 10251,
											"end": 10265,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10265,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10265,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10251,
											"end": 10265,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10278,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10251,
											"end": 10278,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10278,
											"name": "PUSH",
											"source": 3,
											"value": "E9413D38"
										},
										{
											"begin": 10279,
											"end": 10287,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "96"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "96"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "98"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "98"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "99"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "99"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10251,
											"end": 10288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10239,
											"end": 10288,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10239,
											"end": 10288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10325,
											"end": 10326,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10317,
											"end": 10327,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10317,
											"end": 10327,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 10304,
											"end": 10313,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10304,
											"end": 10327,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10304,
											"end": 10327,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "PUSH",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "PUSH",
											"source": 3,
											"value": "706C656173652070726F766520626C6F636B6861736800000000000000000000"
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 10296,
											"end": 10354,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10202,
											"end": 10361,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 10202,
											"end": 10361,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10442,
											"end": 10460,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10498,
											"end": 10505,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10507,
											"end": 10516,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10471,
											"end": 10518,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10471,
											"end": 10518,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10471,
											"end": 10518,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10471,
											"end": 10518,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10471,
											"end": 10518,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10471,
											"end": 10518,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10463,
											"end": 10519,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10463,
											"end": 10519,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 10442,
											"end": 10519,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10442,
											"end": 10519,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10697,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10670,
											"end": 10684,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 10662,
											"end": 10668,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 10658,
											"end": 10685,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10651,
											"end": 10698,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10720,
											"end": 10732,
											"name": "PUSH",
											"source": 3,
											"value": "1A0"
										},
										{
											"begin": 10712,
											"end": 10718,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 10705,
											"end": 10733,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10757,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 10785,
											"end": 10791,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 10757,
											"end": 10784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 10757,
											"end": 10792,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10757,
											"end": 10792,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 10757,
											"end": 10792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10744,
											"end": 10792,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 10744,
											"end": 10792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8940,
											"end": 10819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8940,
											"end": 10819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8940,
											"end": 10819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8940,
											"end": 10819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8940,
											"end": 10819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8940,
											"end": 10819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8940,
											"end": 10819,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8940,
											"end": 10819,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8940,
											"end": 10819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8940,
											"end": 10819,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8940,
											"end": 10819,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8940,
											"end": 10819,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 822,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 822,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 880,
											"end": 887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 912,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 907,
											"end": 908,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 907,
											"end": 912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 931,
											"end": 932,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 926,
											"end": 927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 926,
											"end": 932,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 926,
											"end": 932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 918,
											"end": 964,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 918,
											"end": 964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 918,
											"end": 964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 918,
											"end": 964,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 918,
											"end": 964,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 918,
											"end": 964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 918,
											"end": 964,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 918,
											"end": 964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 918,
											"end": 964,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 918,
											"end": 964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 918,
											"end": 964,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 918,
											"end": 964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 978,
											"end": 979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 971,
											"end": 979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 971,
											"end": 979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 971,
											"end": 979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 984,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 984,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7547,
											"end": 8936,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 7547,
											"end": 8936,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7816,
											"end": 7833,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7839,
											"end": 7856,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7889,
											"end": 7920,
											"name": "PUSH",
											"source": 3,
											"value": "94985DDD"
										},
										{
											"begin": 7889,
											"end": 7920,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 7889,
											"end": 7920,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 7922,
											"end": 7931,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7933,
											"end": 7943,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7859,
											"end": 7944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7839,
											"end": 7944,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7839,
											"end": 7944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8213,
											"end": 8222,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8225,
											"end": 8231,
											"name": "PUSH",
											"source": 3,
											"value": "324B0"
										},
										{
											"begin": 8213,
											"end": 8231,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8213,
											"end": 8231,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8258,
											"end": 8259,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8245,
											"end": 8254,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 8245,
											"end": 8259,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 8245,
											"end": 8259,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "PUSH",
											"source": 3,
											"value": "6E6F7420656E6F7567682067617320666F7220636F6E73756D65720000000000"
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 8237,
											"end": 8291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8716,
											"end": 8728,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8733,
											"end": 8749,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8754,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8733,
											"end": 8754,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8755,
											"end": 8759,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "107"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "109"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "107"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "109"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8760,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 12,
											"end": 13,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 19,
											"end": 20,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "112"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 67,
											"end": 71,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 72,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 134,
											"end": 138,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 130,
											"end": 139,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 127,
											"name": "PUSH",
											"source": -1,
											"value": "3F"
										},
										{
											"begin": 105,
											"end": 121,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 101,
											"end": 128,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 140,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 94,
											"end": 95,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 141,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 88,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 77,
											"end": 142,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 154,
											"end": 155,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 174,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 211,
											"end": 227,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 208,
											"end": 209,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 205,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 198,
											"end": 199,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 194,
											"end": 206,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 179,
											"end": 228,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "111"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "tag",
											"source": -1,
											"value": "112"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32,
											"end": 36,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 27,
											"end": 36,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 36,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "tag",
											"source": -1,
											"value": "111"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8715,
											"end": 8760,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8715,
											"end": 8760,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8715,
											"end": 8760,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 8936,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 8936,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 8936,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 8936,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 8936,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 8936,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 8936,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 8936,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5243,
											"end": 6209,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 5243,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5398,
											"end": 5406,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5408,
											"end": 5416,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11862,
											"end": 11879,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 11862,
											"end": 11889,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11880,
											"end": 11888,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11862,
											"end": 11889,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11862,
											"end": 11889,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11862,
											"end": 11889,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11862,
											"end": 11889,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11862,
											"end": 11889,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11862,
											"end": 11889,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11862,
											"end": 11889,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11862,
											"end": 11889,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11862,
											"end": 11889,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11862,
											"end": 11889,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11862,
											"end": 11889,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11862,
											"end": 11893,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11862,
											"end": 11893,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11862,
											"end": 11893,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 11862,
											"end": 11893,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11862,
											"end": 11893,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 11862,
											"end": 11893,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11862,
											"end": 11893,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 11862,
											"end": 11893,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 11862,
											"end": 11893,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11862,
											"end": 11893,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 11862,
											"end": 11893,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11862,
											"end": 11893,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11850,
											"end": 11893,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11850,
											"end": 11893,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11850,
											"end": 11858,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11850,
											"end": 11893,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11850,
											"end": 11893,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "PUSH",
											"source": 3,
											"value": "42656C6F7720616772656564207061796D656E74000000000000000000000000"
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 11842,
											"end": 11918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5426,
											"end": 5439,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5442,
											"end": 5448,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 5442,
											"end": 5458,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5449,
											"end": 5457,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5458,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5458,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5458,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5442,
											"end": 5458,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5458,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5458,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5458,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5458,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5442,
											"end": 5458,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5458,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5442,
											"end": 5458,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5467,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5459,
											"end": 5466,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5467,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5442,
											"end": 5467,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5467,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5442,
											"end": 5467,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5467,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5467,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5467,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5442,
											"end": 5467,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5467,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5467,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5467,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5467,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5442,
											"end": 5467,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5467,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5442,
											"end": 5467,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5467,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5426,
											"end": 5467,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5426,
											"end": 5467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5473,
											"end": 5488,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5491,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 5508,
											"end": 5516,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 5533,
											"end": 5540,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5542,
											"end": 5547,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5491,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 5491,
											"end": 5548,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5491,
											"end": 5548,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 5491,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5473,
											"end": 5548,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5473,
											"end": 5548,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5554,
											"end": 5571,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5574,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 5588,
											"end": 5596,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 5598,
											"end": 5605,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5574,
											"end": 5587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 5574,
											"end": 5606,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5574,
											"end": 5606,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 5574,
											"end": 5606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5554,
											"end": 5606,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5554,
											"end": 5606,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5745,
											"end": 5746,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5696,
											"end": 5747,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5696,
											"end": 5747,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5705,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5696,
											"end": 5716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5715,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5716,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5716,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5716,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5696,
											"end": 5716,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5716,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5716,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5716,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5696,
											"end": 5716,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5696,
											"end": 5716,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5733,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5696,
											"end": 5733,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5733,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5696,
											"end": 5733,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5733,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5733,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5733,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5696,
											"end": 5733,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5733,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5733,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5733,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5696,
											"end": 5733,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5747,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5696,
											"end": 5747,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5747,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 5689,
											"end": 5748,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5748,
											"name": "INVALID",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5748,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 5689,
											"end": 5748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5794,
											"end": 5801,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5763,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5754,
											"end": 5774,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5764,
											"end": 5773,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5774,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5774,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5774,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5754,
											"end": 5774,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5774,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5774,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5774,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5774,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5754,
											"end": 5774,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5774,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5754,
											"end": 5774,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5791,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5754,
											"end": 5791,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5791,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5754,
											"end": 5801,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5754,
											"end": 5801,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5801,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5801,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5801,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5801,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5754,
											"end": 5801,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5801,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5801,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5801,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5801,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5801,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5754,
											"end": 5801,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5801,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5801,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5801,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5801,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5754,
											"end": 5801,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5825,
											"end": 5829,
											"name": "PUSH",
											"source": 3,
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 5814,
											"end": 5822,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5814,
											"end": 5829,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5807,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5807,
											"end": 5830,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5807,
											"end": 5830,
											"name": "INVALID",
											"source": 3
										},
										{
											"begin": 5807,
											"end": 5830,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5807,
											"end": 5830,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5909,
											"end": 5917,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5874,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5865,
											"end": 5885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5875,
											"end": 5884,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5885,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5885,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5865,
											"end": 5885,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5885,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5885,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5865,
											"end": 5885,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5865,
											"end": 5885,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5899,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5865,
											"end": 5899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5899,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 5865,
											"end": 5918,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5865,
											"end": 5918,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5918,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5918,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5918,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5918,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5865,
											"end": 5918,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5918,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5918,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5918,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5918,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5918,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5865,
											"end": 5918,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5918,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5918,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5918,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5918,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6004,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6006,
											"end": 6018,
											"name": "NUMBER",
											"source": 3
										},
										{
											"begin": 5973,
											"end": 6019,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5973,
											"end": 6019,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5973,
											"end": 6019,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5973,
											"end": 6019,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5973,
											"end": 6019,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5973,
											"end": 6019,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5973,
											"end": 6019,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5973,
											"end": 6019,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5973,
											"end": 6019,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5973,
											"end": 6019,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5973,
											"end": 6019,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5973,
											"end": 6019,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5973,
											"end": 6019,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5973,
											"end": 6019,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5973,
											"end": 6019,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5973,
											"end": 6019,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5973,
											"end": 6019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5973,
											"end": 6019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5973,
											"end": 6019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5973,
											"end": 6019,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5973,
											"end": 6019,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5973,
											"end": 6019,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5973,
											"end": 6019,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5973,
											"end": 6019,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5963,
											"end": 6020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5963,
											"end": 6020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5963,
											"end": 6020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5963,
											"end": 6020,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 6020,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5963,
											"end": 6020,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5924,
											"end": 5933,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5924,
											"end": 5944,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5934,
											"end": 5943,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5924,
											"end": 5944,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5924,
											"end": 5944,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5924,
											"end": 5944,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5924,
											"end": 5944,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5924,
											"end": 5944,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5924,
											"end": 5944,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5924,
											"end": 5944,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5924,
											"end": 5944,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5924,
											"end": 5944,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5924,
											"end": 5944,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5924,
											"end": 5944,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5924,
											"end": 5960,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5924,
											"end": 5960,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5924,
											"end": 6020,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5924,
											"end": 6020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5924,
											"end": 6020,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5924,
											"end": 6020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6068,
											"end": 6085,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6086,
											"end": 6094,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6068,
											"end": 6095,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6068,
											"end": 6101,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6068,
											"end": 6101,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6068,
											"end": 6101,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "PUSH",
											"source": 3,
											"value": "56BD374744A66D531874338DEF36C906E3A6CF31176EB1E9AFD9F1DE69725D51"
										},
										{
											"begin": 6049,
											"end": 6057,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 6059,
											"end": 6066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6109,
											"end": 6116,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 6118,
											"end": 6126,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 6128,
											"end": 6137,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6138,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 6202,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6172,
											"end": 6178,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 6172,
											"end": 6188,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6187,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6188,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6188,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6188,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6188,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6188,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6188,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6188,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6188,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6188,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6188,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6188,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6197,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6189,
											"end": 6196,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6197,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6172,
											"end": 6197,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6197,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6172,
											"end": 6197,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6197,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6197,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6197,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6197,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6197,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6197,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6197,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6197,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6197,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6197,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6197,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6197,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 6172,
											"end": 6201,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6204,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6204,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6204,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6172,
											"end": 6204,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6204,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6172,
											"end": 6204,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 6172,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6144,
											"end": 6150,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 6144,
											"end": 6160,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6151,
											"end": 6159,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 6144,
											"end": 6160,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6144,
											"end": 6160,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6144,
											"end": 6160,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6144,
											"end": 6160,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6144,
											"end": 6160,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6144,
											"end": 6160,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6144,
											"end": 6160,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6144,
											"end": 6160,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6144,
											"end": 6160,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6144,
											"end": 6160,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6144,
											"end": 6160,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6144,
											"end": 6169,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6161,
											"end": 6168,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 6144,
											"end": 6169,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6144,
											"end": 6169,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6144,
											"end": 6169,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6144,
											"end": 6169,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6144,
											"end": 6169,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6144,
											"end": 6169,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6144,
											"end": 6169,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6144,
											"end": 6169,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6144,
											"end": 6169,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6144,
											"end": 6169,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6144,
											"end": 6169,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6144,
											"end": 6169,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6144,
											"end": 6169,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6144,
											"end": 6169,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6144,
											"end": 6169,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6144,
											"end": 6204,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6144,
											"end": 6204,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6144,
											"end": 6204,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6144,
											"end": 6204,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11924,
											"end": 11925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11924,
											"end": 11925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11924,
											"end": 11925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5243,
											"end": 6209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5243,
											"end": 6209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5243,
											"end": 6209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5243,
											"end": 6209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5243,
											"end": 6209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5243,
											"end": 6209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5243,
											"end": 6209,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1236,
											"end": 1401,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1236,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1323,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1323,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1317,
											"end": 1323,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1309,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1380,
											"end": 1381,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1376,
											"end": 1377,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1376,
											"end": 1381,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1395,
											"end": 1396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1401,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1401,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1376,
											"end": 1547,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1376,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1525,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1540,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1541,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1541,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1541,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1541,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1541,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1541,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1541,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1541,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1541,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1541,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1541,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1541,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1541,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1541,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1541,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1541,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1541,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1541,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1541,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1541,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1500,
											"end": 1541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1541,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1541,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1490,
											"end": 1542,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1490,
											"end": 1542,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1490,
											"end": 1542,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1490,
											"end": 1542,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1490,
											"end": 1542,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1490,
											"end": 1542,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1542,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1547,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1547,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 25549,
											"end": 26546,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 25549,
											"end": 26546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25629,
											"end": 25643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24630,
											"end": 24945,
											"name": "PUSH",
											"source": 1,
											"value": "1A0"
										},
										{
											"begin": 25661,
											"end": 25666,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25661,
											"end": 25673,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 25661,
											"end": 25689,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "PUSH",
											"source": 1,
											"value": "77726F6E672070726F6F66206C656E6774680000000000000000000000000000"
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 25653,
											"end": 25712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25721,
											"end": 25741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 25721,
											"end": 25741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 25721,
											"end": 25741,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25721,
											"end": 25741,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 25721,
											"end": 25741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25794,
											"end": 25817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 25794,
											"end": 25817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 25794,
											"end": 25817,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25794,
											"end": 25817,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 25794,
											"end": 25817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25903,
											"end": 25927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 25903,
											"end": 25927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 25903,
											"end": 25927,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25903,
											"end": 25927,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 25903,
											"end": 25927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25935,
											"end": 25951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25959,
											"end": 25990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 25959,
											"end": 25990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 25959,
											"end": 25990,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25959,
											"end": 25990,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 25959,
											"end": 25990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25998,
											"end": 26028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 25998,
											"end": 26028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 25998,
											"end": 26028,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25998,
											"end": 26028,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 25998,
											"end": 26028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26036,
											"end": 26048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26143,
											"end": 26148,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15,
											"end": 18,
											"name": "PUSH",
											"source": -1,
											"value": "1A0"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 19,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "133"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 32,
											"end": 33,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22,
											"end": 34,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "133"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26123,
											"end": 26245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "SWAP11",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "SWAP12",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "SWAP13",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "SWAP14",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26056,
											"end": 26245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26253,
											"end": 26454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 26277,
											"end": 26279,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 26289,
											"end": 26294,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 26304,
											"end": 26310,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 26311,
											"end": 26312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26304,
											"end": 26313,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 26304,
											"end": 26313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26304,
											"end": 26313,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 26304,
											"end": 26313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 26304,
											"end": 26313,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26304,
											"end": 26313,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 26304,
											"end": 26313,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 26304,
											"end": 26313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26304,
											"end": 26313,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26304,
											"end": 26313,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 26304,
											"end": 26313,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26304,
											"end": 26313,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26328,
											"end": 26334,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 26335,
											"end": 26336,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 26328,
											"end": 26337,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 26328,
											"end": 26337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26328,
											"end": 26337,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 26328,
											"end": 26337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 26328,
											"end": 26337,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26328,
											"end": 26337,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 26328,
											"end": 26337,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 26328,
											"end": 26337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26328,
											"end": 26337,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26328,
											"end": 26337,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 26328,
											"end": 26337,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26328,
											"end": 26337,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26352,
											"end": 26358,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 26359,
											"end": 26360,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 26352,
											"end": 26361,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 26352,
											"end": 26361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26352,
											"end": 26361,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 26352,
											"end": 26361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 26352,
											"end": 26361,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26352,
											"end": 26361,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 26352,
											"end": 26361,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 26352,
											"end": 26361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26352,
											"end": 26361,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26352,
											"end": 26361,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 26352,
											"end": 26361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26352,
											"end": 26361,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26387,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 26397,
											"end": 26410,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 26420,
											"end": 26432,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 26442,
											"end": 26446,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 26253,
											"end": 26267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 26253,
											"end": 26454,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26253,
											"end": 26454,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 26253,
											"end": 26454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24519,
											"end": 24520,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 26531,
											"end": 26536,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "139"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "141"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "139"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "141"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26489,
											"end": 26537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26479,
											"end": 26538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26479,
											"end": 26538,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26479,
											"end": 26538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26479,
											"end": 26538,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26479,
											"end": 26538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26479,
											"end": 26538,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 26471,
											"end": 26539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26471,
											"end": 26539,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 26462,
											"end": 26539,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 26462,
											"end": 26539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25549,
											"end": 26546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25549,
											"end": 26546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25549,
											"end": 26546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25549,
											"end": 26546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25549,
											"end": 26546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25549,
											"end": 26546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25549,
											"end": 26546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25549,
											"end": 26546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25549,
											"end": 26546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25549,
											"end": 26546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25549,
											"end": 26546,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 765,
											"end": 996,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 765,
											"end": 996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 895,
											"end": 902,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 957,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 959,
											"end": 968,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 970,
											"end": 980,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 982,
											"end": 988,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 989,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 989,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 989,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 989,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 938,
											"end": 989,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 938,
											"end": 989,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 989,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 989,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 989,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 938,
											"end": 989,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 938,
											"end": 989,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 989,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 928,
											"end": 990,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 928,
											"end": 990,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 928,
											"end": 990,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 928,
											"end": 990,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 928,
											"end": 990,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 928,
											"end": 990,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 920,
											"end": 991,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 920,
											"end": 991,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 912,
											"end": 991,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 912,
											"end": 991,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 765,
											"end": 996,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 765,
											"end": 996,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 765,
											"end": 996,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 765,
											"end": 996,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 765,
											"end": 996,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 765,
											"end": 996,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 765,
											"end": 996,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 22819,
											"end": 24340,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 22819,
											"end": 24340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23070,
											"end": 23083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 23080,
											"end": 23082,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 23070,
											"end": 23079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 23070,
											"end": 23083,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23070,
											"end": 23083,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 23070,
											"end": 23083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "PUSH",
											"source": 1,
											"value": "7075626C6963206B6579206973206E6F74206F6E206375727665000000000000"
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 23062,
											"end": 23114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23130,
											"end": 23146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 23140,
											"end": 23145,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 23130,
											"end": 23139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 23130,
											"end": 23146,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23130,
											"end": 23146,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 23130,
											"end": 23146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "PUSH",
											"source": 1,
											"value": "67616D6D61206973206E6F74206F6E2063757276650000000000000000000000"
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 23122,
											"end": 23172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23188,
											"end": 23212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 23198,
											"end": 23211,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23188,
											"end": 23197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 23188,
											"end": 23212,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23188,
											"end": 23212,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 23188,
											"end": 23212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "PUSH",
											"source": 1,
											"value": "6347616D6D615769746E657373206973206E6F74206F6E206375727665000000"
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 23180,
											"end": 23246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23262,
											"end": 23285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 23272,
											"end": 23284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23262,
											"end": 23271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 23262,
											"end": 23285,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23262,
											"end": 23285,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 23262,
											"end": 23285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "PUSH",
											"source": 1,
											"value": "73486173685769746E657373206973206E6F74206F6E20637572766500000000"
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 23254,
											"end": 23318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23720,
											"end": 23776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 23757,
											"end": 23758,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 23760,
											"end": 23762,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 23764,
											"end": 23765,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 23767,
											"end": 23775,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 23720,
											"end": 23756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 23720,
											"end": 23776,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23720,
											"end": 23776,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 23720,
											"end": 23776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "PUSH",
											"source": 1,
											"value": "6164647228632A706B2B732A6729E289A05F755769746E657373000000000000"
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 23703,
											"end": 23822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23917,
											"end": 23939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 23917,
											"end": 23939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 23917,
											"end": 23939,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23917,
											"end": 23939,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 23917,
											"end": 23939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23942,
											"end": 23963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 23954,
											"end": 23956,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 23958,
											"end": 23962,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 23942,
											"end": 23953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 23942,
											"end": 23963,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23942,
											"end": 23963,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 23942,
											"end": 23963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23917,
											"end": 23963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23917,
											"end": 23963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24055,
											"end": 24074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 24055,
											"end": 24074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 24055,
											"end": 24074,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24055,
											"end": 24074,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 24055,
											"end": 24074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24077,
											"end": 24157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 24104,
											"end": 24105,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 24107,
											"end": 24112,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 24114,
											"end": 24127,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 24129,
											"end": 24130,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 24132,
											"end": 24136,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 24138,
											"end": 24150,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 24152,
											"end": 24156,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 24077,
											"end": 24094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 24077,
											"end": 24157,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24077,
											"end": 24157,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 24077,
											"end": 24157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24055,
											"end": 24157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24055,
											"end": 24157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24216,
											"end": 24232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24235,
											"end": 24286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 24257,
											"end": 24261,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24263,
											"end": 24265,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 24267,
											"end": 24272,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 24274,
											"end": 24282,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 24284,
											"end": 24285,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 24235,
											"end": 24256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 24235,
											"end": 24286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24235,
											"end": 24286,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 24235,
											"end": 24286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24216,
											"end": 24286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24216,
											"end": 24286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24307,
											"end": 24315,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24302,
											"end": 24303,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 24302,
											"end": 24315,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "PUSH",
											"source": 1,
											"value": "696E76616C69642070726F6F6600000000000000000000000000000000000000"
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 24294,
											"end": 24333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22819,
											"end": 24340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22819,
											"end": 24340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22819,
											"end": 24340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22819,
											"end": 24340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22819,
											"end": 24340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22819,
											"end": 24340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22819,
											"end": 24340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22819,
											"end": 24340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22819,
											"end": 24340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22819,
											"end": 24340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22819,
											"end": 24340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22819,
											"end": 24340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22819,
											"end": 24340,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9658,
											"end": 9793,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 9658,
											"end": 9793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9721,
											"end": 9725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 9758,
											"end": 9788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9758,
											"end": 9788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 9758,
											"end": 9788,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9758,
											"end": 9788,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 9758,
											"end": 9788,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 9758,
											"end": 9788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9771,
											"end": 9772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9773,
											"end": 9774,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9771,
											"end": 9775,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9771,
											"end": 9775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9771,
											"end": 9775,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9771,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 9771,
											"end": 9775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9771,
											"end": 9775,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 9771,
											"end": 9775,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 9771,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9771,
											"end": 9775,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9771,
											"end": 9775,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9771,
											"end": 9775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9771,
											"end": 9775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9766,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9767,
											"end": 9768,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9765,
											"end": 9769,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9765,
											"end": 9769,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9769,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 9765,
											"end": 9769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9769,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9769,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 9765,
											"end": 9769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9769,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9765,
											"end": 9769,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9769,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9769,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9758,
											"end": 9788,
											"name": "MULMOD",
											"source": 1
										},
										{
											"begin": 9740,
											"end": 9754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 9749,
											"end": 9750,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9751,
											"end": 9752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9749,
											"end": 9753,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9749,
											"end": 9753,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9749,
											"end": 9753,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9749,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 9749,
											"end": 9753,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9749,
											"end": 9753,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 9749,
											"end": 9753,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 9749,
											"end": 9753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9749,
											"end": 9753,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9749,
											"end": 9753,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9749,
											"end": 9753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9749,
											"end": 9753,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9740,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 9740,
											"end": 9754,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9740,
											"end": 9754,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 9740,
											"end": 9754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9740,
											"end": 9788,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9733,
											"end": 9788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9733,
											"end": 9788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9658,
											"end": 9793,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9658,
											"end": 9793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9658,
											"end": 9793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9658,
											"end": 9793,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18872,
											"end": 19916,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 18872,
											"end": 19916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19012,
											"end": 19016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19121,
											"end": 19122,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19100,
											"end": 19123,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19100,
											"end": 19123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19100,
											"end": 19109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19100,
											"end": 19123,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19100,
											"end": 19123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19100,
											"end": 19123,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19100,
											"end": 19123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "PUSH",
											"source": 1,
											"value": "626164207769746E657373000000000000000000000000000000000000000000"
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 19092,
											"end": 19139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19147,
											"end": 19154,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19170,
											"end": 19171,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19165,
											"end": 19166,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 19158,
											"end": 19159,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 19160,
											"end": 19161,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 19158,
											"end": 19162,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 19158,
											"end": 19162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19158,
											"end": 19162,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 19158,
											"end": 19162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 19158,
											"end": 19162,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19158,
											"end": 19162,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 19158,
											"end": 19162,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 19158,
											"end": 19162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19158,
											"end": 19162,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19158,
											"end": 19162,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 19158,
											"end": 19162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19158,
											"end": 19162,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19158,
											"end": 19166,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19158,
											"end": 19166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 19158,
											"end": 19166,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19158,
											"end": 19166,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 19158,
											"end": 19166,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 19158,
											"end": 19166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19158,
											"end": 19166,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 19158,
											"end": 19171,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19157,
											"end": 19182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 19157,
											"end": 19182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19180,
											"end": 19182,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 19157,
											"end": 19182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 19157,
											"end": 19182,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19157,
											"end": 19182,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 19157,
											"end": 19182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19175,
											"end": 19177,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 19157,
											"end": 19182,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 19157,
											"end": 19182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19147,
											"end": 19182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19147,
											"end": 19182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19219,
											"end": 19237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7354,
											"end": 7420,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141"
										},
										{
											"begin": 19262,
											"end": 19290,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19262,
											"end": 19290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 19262,
											"end": 19290,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19262,
											"end": 19290,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 19262,
											"end": 19290,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 19262,
											"end": 19290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19275,
											"end": 19276,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19269,
											"end": 19270,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 19271,
											"end": 19272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19269,
											"end": 19273,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 19269,
											"end": 19273,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19269,
											"end": 19273,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 19269,
											"end": 19273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 19269,
											"end": 19273,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19269,
											"end": 19273,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 19269,
											"end": 19273,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 19269,
											"end": 19273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19269,
											"end": 19273,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19269,
											"end": 19273,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 19269,
											"end": 19273,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19269,
											"end": 19273,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19262,
											"end": 19290,
											"name": "MULMOD",
											"source": 1
										},
										{
											"begin": 7354,
											"end": 7420,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141"
										},
										{
											"begin": 19248,
											"end": 19290,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19240,
											"end": 19291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19240,
											"end": 19291,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 19219,
											"end": 19291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19219,
											"end": 19291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19310,
											"end": 19333,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7354,
											"end": 7420,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141"
										},
										{
											"begin": 19344,
											"end": 19372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19344,
											"end": 19372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 19344,
											"end": 19372,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19344,
											"end": 19372,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 19344,
											"end": 19372,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 19344,
											"end": 19372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19354,
											"end": 19355,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 19356,
											"end": 19357,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19354,
											"end": 19358,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 19354,
											"end": 19358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19354,
											"end": 19358,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 19354,
											"end": 19358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 19354,
											"end": 19358,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19354,
											"end": 19358,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 19354,
											"end": 19358,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 19354,
											"end": 19358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19354,
											"end": 19358,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19354,
											"end": 19358,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 19354,
											"end": 19358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19354,
											"end": 19358,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19351,
											"end": 19352,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 19344,
											"end": 19372,
											"name": "MULMOD",
											"source": 1
										},
										{
											"begin": 19336,
											"end": 19373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19336,
											"end": 19373,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 19310,
											"end": 19373,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19310,
											"end": 19373,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19798,
											"end": 19814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 19827,
											"end": 19837,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19839,
											"end": 19840,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19850,
											"end": 19851,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 19852,
											"end": 19853,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19850,
											"end": 19854,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 19850,
											"end": 19854,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19850,
											"end": 19854,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 19850,
											"end": 19854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 19850,
											"end": 19854,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19850,
											"end": 19854,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 19850,
											"end": 19854,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 19850,
											"end": 19854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19850,
											"end": 19854,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19850,
											"end": 19854,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 19850,
											"end": 19854,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19850,
											"end": 19854,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19842,
											"end": 19855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19842,
											"end": 19855,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 19857,
											"end": 19872,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "184"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "184"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19873,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19798,
											"end": 19873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19798,
											"end": 19873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19900,
											"end": 19909,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19888,
											"end": 19909,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19888,
											"end": 19909,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19888,
											"end": 19896,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19888,
											"end": 19909,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19888,
											"end": 19909,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19888,
											"end": 19909,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19881,
											"end": 19909,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 19881,
											"end": 19909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19881,
											"end": 19909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19881,
											"end": 19909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19881,
											"end": 19909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19881,
											"end": 19909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18872,
											"end": 19916,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 18872,
											"end": 19916,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 18872,
											"end": 19916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18872,
											"end": 19916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18872,
											"end": 19916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18872,
											"end": 19916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18872,
											"end": 19916,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11832,
											"end": 12201,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 11832,
											"end": 12201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11917,
											"end": 11937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 11917,
											"end": 11937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 11917,
											"end": 11937,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11917,
											"end": 11937,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 11917,
											"end": 11937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11952,
											"end": 12089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 11058,
											"end": 11059,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12078,
											"end": 12080,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12082,
											"end": 12087,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "188"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "190"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "188"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "190"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11979,
											"end": 12088,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11952,
											"end": 11978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 11952,
											"end": 12089,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11952,
											"end": 12089,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 11952,
											"end": 12089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11947,
											"end": 12089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11947,
											"end": 12089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12097,
											"end": 12195,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 12097,
											"end": 12195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12105,
											"end": 12118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 12115,
											"end": 12117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12105,
											"end": 12114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 12105,
											"end": 12118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12105,
											"end": 12118,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 12105,
											"end": 12118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12097,
											"end": 12195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 12097,
											"end": 12195,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12135,
											"end": 12186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 12179,
											"end": 12181,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12182,
											"end": 12183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12179,
											"end": 12184,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 12179,
											"end": 12184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12179,
											"end": 12184,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12179,
											"end": 12184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 12179,
											"end": 12184,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12179,
											"end": 12184,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 12179,
											"end": 12184,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 12179,
											"end": 12184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12179,
											"end": 12184,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12179,
											"end": 12184,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12179,
											"end": 12184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12179,
											"end": 12184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12162,
											"end": 12185,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12162,
											"end": 12185,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12162,
											"end": 12185,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12162,
											"end": 12185,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12162,
											"end": 12185,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12162,
											"end": 12185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12162,
											"end": 12185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12162,
											"end": 12185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12162,
											"end": 12185,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12162,
											"end": 12185,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12162,
											"end": 12185,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12162,
											"end": 12185,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12162,
											"end": 12185,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12162,
											"end": 12185,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12162,
											"end": 12185,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12162,
											"end": 12185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12162,
											"end": 12185,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12162,
											"end": 12185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12135,
											"end": 12161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 12135,
											"end": 12186,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12135,
											"end": 12186,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 12135,
											"end": 12186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12130,
											"end": 12186,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12130,
											"end": 12186,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12097,
											"end": 12195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 12097,
											"end": 12195,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12097,
											"end": 12195,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 12097,
											"end": 12195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11832,
											"end": 12201,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11832,
											"end": 12201,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11832,
											"end": 12201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11832,
											"end": 12201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11832,
											"end": 12201,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20399,
											"end": 20971,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 20399,
											"end": 20971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20606,
											"end": 20623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 20606,
											"end": 20623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 20606,
											"end": 20623,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20606,
											"end": 20623,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 20606,
											"end": 20623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20689,
											"end": 20690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 20658,
											"end": 20668,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20669,
											"end": 20670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20658,
											"end": 20671,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 20658,
											"end": 20671,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20658,
											"end": 20671,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 20658,
											"end": 20671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 20658,
											"end": 20671,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20658,
											"end": 20671,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 20658,
											"end": 20671,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 20658,
											"end": 20671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20658,
											"end": 20671,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20658,
											"end": 20671,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 20658,
											"end": 20671,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20658,
											"end": 20671,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20642,
											"end": 20652,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 20653,
											"end": 20654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20642,
											"end": 20655,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 20642,
											"end": 20655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20642,
											"end": 20655,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 20642,
											"end": 20655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 20642,
											"end": 20655,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20642,
											"end": 20655,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 20642,
											"end": 20655,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 20642,
											"end": 20655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20642,
											"end": 20655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20642,
											"end": 20655,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 20642,
											"end": 20655,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20642,
											"end": 20655,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20642,
											"end": 20671,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20641,
											"end": 20685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20641,
											"end": 20685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 20641,
											"end": 20685,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20641,
											"end": 20685,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 20641,
											"end": 20685,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 20641,
											"end": 20685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20641,
											"end": 20685,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 20641,
											"end": 20690,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 20641,
											"end": 20690,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "PUSH",
											"source": 1,
											"value": "706F696E747320696E2073756D206D7573742062652064697374696E63740000"
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 20633,
											"end": 20739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20755,
											"end": 20785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 20767,
											"end": 20769,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 20771,
											"end": 20772,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 20774,
											"end": 20784,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 20755,
											"end": 20766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 20755,
											"end": 20785,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20755,
											"end": 20785,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 20755,
											"end": 20785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "PUSH data",
											"source": 1,
											"value": "40E788544E29554C975084A69228C0B0B4A1C9C1F6404406EC2B6D9B86D179A9"
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 20747,
											"end": 20823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20839,
											"end": 20869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 20851,
											"end": 20853,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20855,
											"end": 20856,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20858,
											"end": 20868,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20839,
											"end": 20850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 20839,
											"end": 20869,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20839,
											"end": 20869,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 20839,
											"end": 20869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "PUSH data",
											"source": 1,
											"value": "4BAE64BA22ED7FBB776E6032297D511B182DFD08020C93D70FEC3CFCC33A5267"
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20923,
											"end": 20964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 20935,
											"end": 20945,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20947,
											"end": 20957,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20959,
											"end": 20963,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20923,
											"end": 20934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 20923,
											"end": 20964,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20923,
											"end": 20964,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 20923,
											"end": 20964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20916,
											"end": 20964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20916,
											"end": 20964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20399,
											"end": 20971,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 20399,
											"end": 20971,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 20399,
											"end": 20971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20399,
											"end": 20971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20399,
											"end": 20971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20399,
											"end": 20971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20399,
											"end": 20971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20399,
											"end": 20971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20399,
											"end": 20971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20399,
											"end": 20971,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21878,
											"end": 22236,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 21878,
											"end": 22236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 22064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21159,
											"end": 21160,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 22198,
											"end": 22202,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22204,
											"end": 22206,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22208,
											"end": 22213,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22215,
											"end": 22216,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22218,
											"end": 22226,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "211"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "213"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "211"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "213"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "214"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "216"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "214"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "216"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "217"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "219"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "217"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "219"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "220"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "222"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "220"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "222"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22108,
											"end": 22227,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22098,
											"end": 22228,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22098,
											"end": 22228,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22098,
											"end": 22228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22098,
											"end": 22228,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22098,
											"end": 22228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22098,
											"end": 22228,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 22081,
											"end": 22229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22081,
											"end": 22229,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 22074,
											"end": 22229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22074,
											"end": 22229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21878,
											"end": 22236,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 21878,
											"end": 22236,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 21878,
											"end": 22236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21878,
											"end": 22236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21878,
											"end": 22236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21878,
											"end": 22236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21878,
											"end": 22236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21878,
											"end": 22236,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9363,
											"end": 9622,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 9363,
											"end": 9622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9415,
											"end": 9422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9511,
											"end": 9525,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 9528,
											"end": 9575,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9528,
											"end": 9575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 9528,
											"end": 9575,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9528,
											"end": 9575,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 9528,
											"end": 9575,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 9528,
											"end": 9575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 9538,
											"end": 9562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9538,
											"end": 9562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 9538,
											"end": 9562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9538,
											"end": 9562,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 9538,
											"end": 9562,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 9538,
											"end": 9562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9548,
											"end": 9549,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9545,
											"end": 9546,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9538,
											"end": 9562,
											"name": "MULMOD",
											"source": 1
										},
										{
											"begin": 9535,
											"end": 9536,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9528,
											"end": 9575,
											"name": "MULMOD",
											"source": 1
										},
										{
											"begin": 9511,
											"end": 9575,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9511,
											"end": 9575,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 9588,
											"end": 9617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9588,
											"end": 9617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 9588,
											"end": 9617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9588,
											"end": 9617,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 9588,
											"end": 9617,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 9588,
											"end": 9617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9603,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 9595,
											"end": 9601,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9588,
											"end": 9617,
											"name": "ADDMOD",
											"source": 1
										},
										{
											"begin": 9581,
											"end": 9617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9581,
											"end": 9617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9581,
											"end": 9617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9622,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9622,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10656,
											"end": 10900,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 10656,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 10735,
											"end": 10754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 10735,
											"end": 10754,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10735,
											"end": 10754,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 10735,
											"end": 10754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10771,
											"end": 10783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 10781,
											"end": 10782,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10771,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 10771,
											"end": 10783,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10771,
											"end": 10783,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 10771,
											"end": 10783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 10765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10766,
											"end": 10767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10764,
											"end": 10768,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10764,
											"end": 10768,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 10768,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 10768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 10764,
											"end": 10768,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 10768,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 10768,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 10764,
											"end": 10768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 10768,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10764,
											"end": 10768,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 10768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 10783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 10783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 10783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 10783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 10783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10798,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 10809,
											"end": 10823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 10818,
											"end": 10819,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10820,
											"end": 10821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10818,
											"end": 10822,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10818,
											"end": 10822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10818,
											"end": 10822,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10818,
											"end": 10822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 10818,
											"end": 10822,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10818,
											"end": 10822,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 10818,
											"end": 10822,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 10818,
											"end": 10822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10818,
											"end": 10822,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10818,
											"end": 10822,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10818,
											"end": 10822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10818,
											"end": 10822,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10809,
											"end": 10817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 10809,
											"end": 10823,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10809,
											"end": 10823,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 10809,
											"end": 10823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10798,
											"end": 10808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 10798,
											"end": 10824,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10798,
											"end": 10824,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 10798,
											"end": 10824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10791,
											"end": 10792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10793,
											"end": 10794,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10791,
											"end": 10795,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10791,
											"end": 10795,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10791,
											"end": 10795,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10791,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 10791,
											"end": 10795,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10791,
											"end": 10795,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 10791,
											"end": 10795,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 10791,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10791,
											"end": 10795,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10791,
											"end": 10795,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10791,
											"end": 10795,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10791,
											"end": 10824,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10791,
											"end": 10824,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10791,
											"end": 10824,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10791,
											"end": 10824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10791,
											"end": 10824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10848,
											"end": 10849,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10843,
											"end": 10844,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10836,
											"end": 10837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10839,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10836,
											"end": 10840,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10836,
											"end": 10840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10836,
											"end": 10840,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10836,
											"end": 10840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 10836,
											"end": 10840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10836,
											"end": 10840,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 10836,
											"end": 10840,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 10836,
											"end": 10840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10836,
											"end": 10840,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10836,
											"end": 10840,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10836,
											"end": 10840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10836,
											"end": 10840,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10836,
											"end": 10844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10836,
											"end": 10844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 10836,
											"end": 10844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10836,
											"end": 10844,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 10836,
											"end": 10844,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 10836,
											"end": 10844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10836,
											"end": 10844,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 10836,
											"end": 10849,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 10894,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 10894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 10832,
											"end": 10894,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10883,
											"end": 10884,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10881,
											"end": 10885,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10881,
											"end": 10885,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10885,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 10881,
											"end": 10885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10885,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10885,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 10881,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10885,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10881,
											"end": 10885,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10885,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10885,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 10868,
											"end": 10885,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 10862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10863,
											"end": 10864,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10861,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10861,
											"end": 10865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 10865,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 10865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 10861,
											"end": 10865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 10865,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 10865,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 10861,
											"end": 10865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10861,
											"end": 10865,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 10865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 10885,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 10885,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 10885,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 10885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 10885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 10894,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 10832,
											"end": 10894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10656,
											"end": 10900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10656,
											"end": 10900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10656,
											"end": 10900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10656,
											"end": 10900,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12693,
											"end": 13671,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 12693,
											"end": 13671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12815,
											"end": 12828,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12856,
											"end": 12857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12846,
											"end": 12852,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12846,
											"end": 12857,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12846,
											"end": 12857,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12838,
											"end": 12858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 12838,
											"end": 12858,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 12838,
											"end": 12858,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 12838,
											"end": 12858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12903,
											"end": 12912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12915,
											"end": 12927,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12928,
											"end": 12929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12915,
											"end": 12930,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 12915,
											"end": 12930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12915,
											"end": 12930,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12915,
											"end": 12930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 12915,
											"end": 12930,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12915,
											"end": 12930,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 12915,
											"end": 12930,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 12915,
											"end": 12930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12915,
											"end": 12930,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12915,
											"end": 12930,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12915,
											"end": 12930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12915,
											"end": 12930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12903,
											"end": 12930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12903,
											"end": 12930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12966,
											"end": 12973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12999,
											"end": 13000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12994,
											"end": 12995,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 12976,
											"end": 12988,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12989,
											"end": 12990,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12976,
											"end": 12991,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 12976,
											"end": 12991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12976,
											"end": 12991,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12976,
											"end": 12991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 12976,
											"end": 12991,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12976,
											"end": 12991,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 12976,
											"end": 12991,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 12976,
											"end": 12991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12976,
											"end": 12991,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12976,
											"end": 12991,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12976,
											"end": 12991,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12976,
											"end": 12991,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12976,
											"end": 12995,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12976,
											"end": 12995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 12976,
											"end": 12995,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12976,
											"end": 12995,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 12976,
											"end": 12995,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 12976,
											"end": 12995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12976,
											"end": 12995,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 12976,
											"end": 13000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12976,
											"end": 13010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 12976,
											"end": 13010,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13008,
											"end": 13010,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 12976,
											"end": 13010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 12976,
											"end": 13010,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12976,
											"end": 13010,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 12976,
											"end": 13010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13003,
											"end": 13005,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 12976,
											"end": 13010,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 12976,
											"end": 13010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12966,
											"end": 13010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12966,
											"end": 13010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13359,
											"end": 13379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7354,
											"end": 7420,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141"
										},
										{
											"begin": 13390,
											"end": 13420,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13390,
											"end": 13420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 13390,
											"end": 13420,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13390,
											"end": 13420,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 13390,
											"end": 13420,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 13390,
											"end": 13420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13405,
											"end": 13406,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13397,
											"end": 13403,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13390,
											"end": 13420,
											"name": "MULMOD",
											"source": 1
										},
										{
											"begin": 13382,
											"end": 13421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13382,
											"end": 13421,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 13359,
											"end": 13421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13359,
											"end": 13421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13427,
											"end": 13441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13462,
											"end": 13463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13454,
											"end": 13464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13454,
											"end": 13464,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 13466,
											"end": 13467,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13477,
											"end": 13478,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13469,
											"end": 13479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13469,
											"end": 13479,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13493,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "251"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "251"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13494,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13427,
											"end": 13494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13427,
											"end": 13494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13560,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13622,
											"end": 13629,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "252"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "254"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "252"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "254"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13605,
											"end": 13630,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13595,
											"end": 13631,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13595,
											"end": 13631,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13595,
											"end": 13631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13595,
											"end": 13631,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13595,
											"end": 13631,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13595,
											"end": 13631,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13587,
											"end": 13632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13587,
											"end": 13632,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 13560,
											"end": 13633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13560,
											"end": 13633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13657,
											"end": 13665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13647,
											"end": 13665,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13647,
											"end": 13665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13647,
											"end": 13653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13647,
											"end": 13665,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13647,
											"end": 13665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13647,
											"end": 13665,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 13639,
											"end": 13666,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 13639,
											"end": 13666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13639,
											"end": 13666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13639,
											"end": 13666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13639,
											"end": 13666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13639,
											"end": 13666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13639,
											"end": 13666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12693,
											"end": 13671,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12693,
											"end": 13671,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12693,
											"end": 13671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12693,
											"end": 13671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12693,
											"end": 13671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12693,
											"end": 13671,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18234,
											"end": 18753,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 18234,
											"end": 18753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18345,
											"end": 18362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 18345,
											"end": 18362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 18345,
											"end": 18362,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18345,
											"end": 18362,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 18345,
											"end": 18362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18370,
											"end": 18379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18385,
											"end": 18394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18400,
											"end": 18409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18427,
											"end": 18470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 18443,
											"end": 18445,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 18446,
											"end": 18447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18443,
											"end": 18448,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 18443,
											"end": 18448,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18443,
											"end": 18448,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 18443,
											"end": 18448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 18443,
											"end": 18448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18443,
											"end": 18448,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 18443,
											"end": 18448,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 18443,
											"end": 18448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18443,
											"end": 18448,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18443,
											"end": 18448,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18443,
											"end": 18448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18443,
											"end": 18448,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18450,
											"end": 18452,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 18453,
											"end": 18454,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 18450,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 18450,
											"end": 18455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18450,
											"end": 18455,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 18450,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 18450,
											"end": 18455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18450,
											"end": 18455,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 18450,
											"end": 18455,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 18450,
											"end": 18455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18450,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18450,
											"end": 18455,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18450,
											"end": 18455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18450,
											"end": 18455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18457,
											"end": 18459,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 18460,
											"end": 18461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18457,
											"end": 18462,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 18457,
											"end": 18462,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18457,
											"end": 18462,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 18457,
											"end": 18462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 18457,
											"end": 18462,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18457,
											"end": 18462,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 18457,
											"end": 18462,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 18457,
											"end": 18462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18457,
											"end": 18462,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18457,
											"end": 18462,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18457,
											"end": 18462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18457,
											"end": 18462,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18464,
											"end": 18466,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 18467,
											"end": 18468,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 18464,
											"end": 18469,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 18464,
											"end": 18469,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18464,
											"end": 18469,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 18464,
											"end": 18469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 18464,
											"end": 18469,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18464,
											"end": 18469,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 18464,
											"end": 18469,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 18464,
											"end": 18469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18464,
											"end": 18469,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18464,
											"end": 18469,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18464,
											"end": 18469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18464,
											"end": 18469,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18427,
											"end": 18442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 18427,
											"end": 18470,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18427,
											"end": 18470,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 18427,
											"end": 18470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18415,
											"end": 18470,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18415,
											"end": 18470,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 18415,
											"end": 18470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18415,
											"end": 18470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18415,
											"end": 18470,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 18415,
											"end": 18470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18415,
											"end": 18470,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18415,
											"end": 18470,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 18415,
											"end": 18470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18415,
											"end": 18470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18415,
											"end": 18470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18415,
											"end": 18470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18515,
											"end": 18516,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 18484,
											"end": 18511,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18484,
											"end": 18511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 18484,
											"end": 18511,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18484,
											"end": 18511,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 18484,
											"end": 18511,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 18484,
											"end": 18511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18494,
											"end": 18498,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 18491,
											"end": 18492,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18484,
											"end": 18511,
											"name": "MULMOD",
											"source": 1
										},
										{
											"begin": 18484,
											"end": 18516,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "PUSH",
											"source": 1,
											"value": "696E765A206D75737420626520696E7665727365206F66207A00000000000000"
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 18476,
											"end": 18546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18683,
											"end": 18748,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18683,
											"end": 18748,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18683,
											"end": 18748,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18683,
											"end": 18748,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18683,
											"end": 18748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18683,
											"end": 18748,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18683,
											"end": 18748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18683,
											"end": 18748,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 18691,
											"end": 18718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18691,
											"end": 18718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 18691,
											"end": 18718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18691,
											"end": 18718,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 18691,
											"end": 18718,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 18691,
											"end": 18718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18701,
											"end": 18705,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 18698,
											"end": 18699,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 18691,
											"end": 18718,
											"name": "MULMOD",
											"source": 1
										},
										{
											"begin": 18683,
											"end": 18748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18683,
											"end": 18748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18683,
											"end": 18748,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18683,
											"end": 18748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 18720,
											"end": 18747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18720,
											"end": 18747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 18720,
											"end": 18747,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18720,
											"end": 18747,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 18720,
											"end": 18747,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 18720,
											"end": 18747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18730,
											"end": 18734,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 18727,
											"end": 18728,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18720,
											"end": 18747,
											"name": "MULMOD",
											"source": 1
										},
										{
											"begin": 18683,
											"end": 18748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18683,
											"end": 18748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18683,
											"end": 18748,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18683,
											"end": 18748,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 18683,
											"end": 18748,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18683,
											"end": 18748,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18683,
											"end": 18748,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18683,
											"end": 18748,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18234,
											"end": 18753,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 18234,
											"end": 18753,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18234,
											"end": 18753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18234,
											"end": 18753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18234,
											"end": 18753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18234,
											"end": 18753,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9848,
											"end": 10242,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 9848,
											"end": 10242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9906,
											"end": 9916,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9947,
											"end": 9948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9937,
											"end": 9949,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9937,
											"end": 9949,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9937,
											"end": 9949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9937,
											"end": 9949,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9937,
											"end": 9949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9937,
											"end": 9949,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9929,
											"end": 9950,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9929,
											"end": 9950,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 9924,
											"end": 9950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9924,
											"end": 9950,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10238,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 10153,
											"end": 10238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 10160,
											"end": 10162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10160,
											"end": 10176,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 10153,
											"end": 10238,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10226,
											"end": 10228,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10229,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10209,
											"end": 10229,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10229,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10209,
											"end": 10229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10229,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10229,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10209,
											"end": 10229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10229,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10229,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10209,
											"end": 10229,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10209,
											"end": 10229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10229,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10209,
											"end": 10229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10230,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10230,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10230,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10199,
											"end": 10230,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10230,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10191,
											"end": 10231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10191,
											"end": 10231,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 10186,
											"end": 10231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10186,
											"end": 10231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 10153,
											"end": 10238,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10238,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 10153,
											"end": 10238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9848,
											"end": 10242,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9848,
											"end": 10242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9848,
											"end": 10242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9848,
											"end": 10242,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9198,
											"end": 9303,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 9198,
											"end": 9303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9252,
											"end": 9259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9274,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 9284,
											"end": 9285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9132,
											"end": 9133,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9126,
											"end": 9127,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 9113,
											"end": 9127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9112,
											"end": 9133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9112,
											"end": 9133,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 9274,
											"end": 9283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 9274,
											"end": 9298,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9274,
											"end": 9298,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 9274,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9267,
											"end": 9298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9267,
											"end": 9298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9198,
											"end": 9303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9198,
											"end": 9303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9198,
											"end": 9303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9198,
											"end": 9303,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15969,
											"end": 17965,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 15969,
											"end": 17965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16068,
											"end": 16078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16080,
											"end": 16090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16092,
											"end": 16102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16783,
											"end": 16793,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16795,
											"end": 16805,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16810,
											"end": 16811,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16813,
											"end": 16814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16782,
											"end": 16815,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16782,
											"end": 16815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16782,
											"end": 16815,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16782,
											"end": 16815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16892,
											"end": 16902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 16905,
											"end": 16944,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16905,
											"end": 16944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 16905,
											"end": 16944,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16905,
											"end": 16944,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 16905,
											"end": 16944,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 16905,
											"end": 16944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16929,
											"end": 16931,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 16916,
											"end": 16931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16912,
											"end": 16914,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 16905,
											"end": 16944,
											"name": "ADDMOD",
											"source": 1
										},
										{
											"begin": 16892,
											"end": 16944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16892,
											"end": 16944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16952,
											"end": 16962,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 16965,
											"end": 17004,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16965,
											"end": 17004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 16965,
											"end": 17004,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16965,
											"end": 17004,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 16965,
											"end": 17004,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 16965,
											"end": 17004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16989,
											"end": 16991,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 16976,
											"end": 16991,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16972,
											"end": 16974,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 16965,
											"end": 17004,
											"name": "ADDMOD",
											"source": 1
										},
										{
											"begin": 16952,
											"end": 17004,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16952,
											"end": 17004,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17013,
											"end": 17023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17127,
											"end": 17156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 17141,
											"end": 17143,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17145,
											"end": 17147,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17149,
											"end": 17151,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17153,
											"end": 17155,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17127,
											"end": 17140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 17127,
											"end": 17156,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17127,
											"end": 17156,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 17127,
											"end": 17156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17116,
											"end": 17156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17116,
											"end": 17156,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17116,
											"end": 17156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17116,
											"end": 17156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17116,
											"end": 17156,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": 17116,
											"end": 17156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17116,
											"end": 17156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17116,
											"end": 17156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17198,
											"end": 17227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 17212,
											"end": 17214,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 17216,
											"end": 17218,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17220,
											"end": 17222,
											"name": "DUP15",
											"source": 1
										},
										{
											"begin": 17224,
											"end": 17226,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 17198,
											"end": 17211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 17198,
											"end": 17227,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17198,
											"end": 17227,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 17198,
											"end": 17227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17187,
											"end": 17227,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17187,
											"end": 17227,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17187,
											"end": 17227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17187,
											"end": 17227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17187,
											"end": 17227,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": 17187,
											"end": 17227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17187,
											"end": 17227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17187,
											"end": 17227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 17286,
											"end": 17288,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 17290,
											"end": 17292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 17298,
											"end": 17300,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 17272,
											"end": 17301,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17272,
											"end": 17301,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 17272,
											"end": 17301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17261,
											"end": 17301,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17261,
											"end": 17301,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17261,
											"end": 17301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17261,
											"end": 17301,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17261,
											"end": 17301,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": 17261,
											"end": 17301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17261,
											"end": 17301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17261,
											"end": 17301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17339,
											"end": 17349,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17455,
											"end": 17484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 17469,
											"end": 17471,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 17473,
											"end": 17475,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 17477,
											"end": 17479,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 17481,
											"end": 17483,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17455,
											"end": 17468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 17455,
											"end": 17484,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17455,
											"end": 17484,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 17455,
											"end": 17484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17444,
											"end": 17484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17444,
											"end": 17484,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17444,
											"end": 17484,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17444,
											"end": 17484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17444,
											"end": 17484,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": 17444,
											"end": 17484,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17444,
											"end": 17484,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17444,
											"end": 17484,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17512,
											"end": 17541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 17526,
											"end": 17528,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 17530,
											"end": 17532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17534,
											"end": 17536,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17538,
											"end": 17540,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17512,
											"end": 17525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 17512,
											"end": 17541,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17512,
											"end": 17541,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 17512,
											"end": 17541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17501,
											"end": 17541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17501,
											"end": 17541,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17501,
											"end": 17541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17501,
											"end": 17541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17501,
											"end": 17541,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": 17501,
											"end": 17541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17501,
											"end": 17541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17501,
											"end": 17541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17588,
											"end": 17617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 17602,
											"end": 17604,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 17606,
											"end": 17608,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17610,
											"end": 17612,
											"name": "DUP15",
											"source": 1
										},
										{
											"begin": 17614,
											"end": 17616,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 17588,
											"end": 17601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 17588,
											"end": 17617,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17588,
											"end": 17617,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 17588,
											"end": 17617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17577,
											"end": 17617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17577,
											"end": 17617,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17577,
											"end": 17617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17577,
											"end": 17617,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17577,
											"end": 17617,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": 17577,
											"end": 17617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17577,
											"end": 17617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17577,
											"end": 17617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17667,
											"end": 17669,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17661,
											"end": 17663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17661,
											"end": 17669,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17657,
											"end": 17959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 17657,
											"end": 17959,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 17748,
											"end": 17774,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17748,
											"end": 17774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 17748,
											"end": 17774,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17748,
											"end": 17774,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 17748,
											"end": 17774,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 17748,
											"end": 17774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17759,
											"end": 17761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17755,
											"end": 17757,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 17748,
											"end": 17774,
											"name": "MULMOD",
											"source": 1
										},
										{
											"begin": 17743,
											"end": 17774,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 17743,
											"end": 17774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 17789,
											"end": 17815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17789,
											"end": 17815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 17789,
											"end": 17815,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17789,
											"end": 17815,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 17789,
											"end": 17815,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 17789,
											"end": 17815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17800,
											"end": 17802,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17796,
											"end": 17798,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 17789,
											"end": 17815,
											"name": "MULMOD",
											"source": 1
										},
										{
											"begin": 17784,
											"end": 17815,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 17784,
											"end": 17815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 17830,
											"end": 17856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17830,
											"end": 17856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 17830,
											"end": 17856,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17830,
											"end": 17856,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 17830,
											"end": 17856,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 17830,
											"end": 17856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17841,
											"end": 17843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17837,
											"end": 17839,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17830,
											"end": 17856,
											"name": "MULMOD",
											"source": 1
										},
										{
											"begin": 17825,
											"end": 17856,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 17825,
											"end": 17856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17657,
											"end": 17959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 17657,
											"end": 17959,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17657,
											"end": 17959,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 17657,
											"end": 17959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17948,
											"end": 17950,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17943,
											"end": 17950,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 17943,
											"end": 17950,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17657,
											"end": 17959,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 17657,
											"end": 17959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15969,
											"end": 17965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15969,
											"end": 17965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15969,
											"end": 17965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15969,
											"end": 17965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15969,
											"end": 17965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15969,
											"end": 17965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15969,
											"end": 17965,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 15969,
											"end": 17965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15969,
											"end": 17965,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 15969,
											"end": 17965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15969,
											"end": 17965,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 15969,
											"end": 17965,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15969,
											"end": 17965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15969,
											"end": 17965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15969,
											"end": 17965,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7827,
											"end": 8899,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 7827,
											"end": 8899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7905,
											"end": 7927,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7937,
											"end": 7955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7963,
											"end": 8004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 7963,
											"end": 8004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 7963,
											"end": 8004,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7963,
											"end": 8004,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 7963,
											"end": 8004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7707,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8012,
											"end": 8035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8036,
											"end": 8037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8012,
											"end": 8038,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 8012,
											"end": 8038,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8012,
											"end": 8038,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8012,
											"end": 8038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 8012,
											"end": 8038,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8012,
											"end": 8038,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 8012,
											"end": 8038,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 8012,
											"end": 8038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8012,
											"end": 8038,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8012,
											"end": 8038,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8012,
											"end": 8038,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8012,
											"end": 8058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8012,
											"end": 8058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8012,
											"end": 8058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8012,
											"end": 8058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8012,
											"end": 8058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7707,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8085,
											"end": 8108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8109,
											"end": 8110,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8085,
											"end": 8111,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 8085,
											"end": 8111,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8085,
											"end": 8111,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8085,
											"end": 8111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 8085,
											"end": 8111,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8085,
											"end": 8111,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 8085,
											"end": 8111,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 8085,
											"end": 8111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8085,
											"end": 8111,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8085,
											"end": 8111,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8085,
											"end": 8111,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8085,
											"end": 8131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8085,
											"end": 8131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8085,
											"end": 8131,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8085,
											"end": 8131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8085,
											"end": 8131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7707,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8162,
											"end": 8185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8186,
											"end": 8187,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8162,
											"end": 8188,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 8162,
											"end": 8188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8162,
											"end": 8188,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8162,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 8162,
											"end": 8188,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8162,
											"end": 8188,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 8162,
											"end": 8188,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 8162,
											"end": 8188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8162,
											"end": 8188,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8162,
											"end": 8188,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8162,
											"end": 8188,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8162,
											"end": 8208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8162,
											"end": 8208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8162,
											"end": 8208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8162,
											"end": 8208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8162,
											"end": 8208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8271,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8261,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8263,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 8238,
											"end": 8264,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 8238,
											"end": 8264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8264,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 8238,
											"end": 8264,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8264,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8264,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 8238,
											"end": 8264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8238,
											"end": 8264,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8264,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8271,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8271,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8271,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8308,
											"end": 8316,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8279,
											"end": 8302,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8303,
											"end": 8304,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8279,
											"end": 8305,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 8279,
											"end": 8305,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8279,
											"end": 8305,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8279,
											"end": 8305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 8279,
											"end": 8305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8279,
											"end": 8305,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 8279,
											"end": 8305,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 8279,
											"end": 8305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8279,
											"end": 8305,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8279,
											"end": 8305,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8279,
											"end": 8305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8279,
											"end": 8316,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8279,
											"end": 8316,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8279,
											"end": 8316,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8279,
											"end": 8316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8279,
											"end": 8316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 8324,
											"end": 8347,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8348,
											"end": 8349,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 8324,
											"end": 8350,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 8324,
											"end": 8350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8324,
											"end": 8350,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8324,
											"end": 8350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 8324,
											"end": 8350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8324,
											"end": 8350,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 8324,
											"end": 8350,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 8324,
											"end": 8350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8324,
											"end": 8350,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8324,
											"end": 8350,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8324,
											"end": 8350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8324,
											"end": 8363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8324,
											"end": 8363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8324,
											"end": 8363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8324,
											"end": 8363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8324,
											"end": 8363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 8371,
											"end": 8395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 8371,
											"end": 8395,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8371,
											"end": 8395,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 8371,
											"end": 8395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8741,
											"end": 8745,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8725,
											"end": 8731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8650,
											"end": 8654,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 8617,
											"end": 8640,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8557,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 8501,
											"end": 8502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8497,
											"end": 8503,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 8477,
											"end": 8802,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8802,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8835,
											"end": 8836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8821,
											"end": 8831,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8821,
											"end": 8836,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8817,
											"end": 8869,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8817,
											"end": 8869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 8817,
											"end": 8869,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "PUSH",
											"source": 1,
											"value": "6269674D6F64457870206661696C757265210000000000000000000000000000"
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8867,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8817,
											"end": 8869,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 8817,
											"end": 8869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8890,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8883,
											"end": 8892,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8883,
											"end": 8892,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8892,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 8883,
											"end": 8892,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8892,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8892,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 8883,
											"end": 8892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8892,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8883,
											"end": 8892,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8892,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8892,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8876,
											"end": 8892,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8876,
											"end": 8892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8876,
											"end": 8892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8876,
											"end": 8892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8876,
											"end": 8892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7827,
											"end": 8899,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7827,
											"end": 8899,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7827,
											"end": 8899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7827,
											"end": 8899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7827,
											"end": 8899,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14165,
											"end": 14368,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 14165,
											"end": 14368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14262,
											"end": 14272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14274,
											"end": 14284,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 14306,
											"end": 14332,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14306,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 14306,
											"end": 14332,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14306,
											"end": 14332,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 14306,
											"end": 14332,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 14306,
											"end": 14332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14317,
											"end": 14319,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14313,
											"end": 14315,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14306,
											"end": 14332,
											"name": "MULMOD",
											"source": 1
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 14334,
											"end": 14360,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14334,
											"end": 14360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 14334,
											"end": 14360,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14334,
											"end": 14360,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 14334,
											"end": 14360,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 14334,
											"end": 14360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14345,
											"end": 14347,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14341,
											"end": 14343,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14334,
											"end": 14360,
											"name": "MULMOD",
											"source": 1
										},
										{
											"begin": 14294,
											"end": 14361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14294,
											"end": 14361,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14294,
											"end": 14361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14294,
											"end": 14361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14294,
											"end": 14361,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14294,
											"end": 14361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14294,
											"end": 14361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14294,
											"end": 14361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14165,
											"end": 14368,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14165,
											"end": 14368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14165,
											"end": 14368,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14165,
											"end": 14368,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14165,
											"end": 14368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14165,
											"end": 14368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14165,
											"end": 14368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14165,
											"end": 14368,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13761,
											"end": 14079,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 13761,
											"end": 14079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13858,
											"end": 13868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13870,
											"end": 13880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13890,
											"end": 13902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 13905,
											"end": 13931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13905,
											"end": 13931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 13905,
											"end": 13931,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13905,
											"end": 13931,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 13905,
											"end": 13931,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 13905,
											"end": 13931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13916,
											"end": 13918,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 13914,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13905,
											"end": 13931,
											"name": "MULMOD",
											"source": 1
										},
										{
											"begin": 13890,
											"end": 13931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13890,
											"end": 13931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13939,
											"end": 13951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 13954,
											"end": 13993,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13954,
											"end": 13993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 13954,
											"end": 13993,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13954,
											"end": 13993,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 13954,
											"end": 13993,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 13954,
											"end": 13993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13978,
											"end": 13980,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13974,
											"end": 13976,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 13961,
											"end": 13976,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13954,
											"end": 13993,
											"name": "MULMOD",
											"source": 1
										},
										{
											"begin": 13939,
											"end": 13993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13939,
											"end": 13993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 14013,
											"end": 14043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14013,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 14013,
											"end": 14043,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14013,
											"end": 14043,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 14013,
											"end": 14043,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 14013,
											"end": 14043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14026,
											"end": 14030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14020,
											"end": 14024,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14013,
											"end": 14043,
											"name": "ADDMOD",
											"source": 1
										},
										{
											"begin": 7588,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
										},
										{
											"begin": 14045,
											"end": 14071,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 14045,
											"end": 14071,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14071,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14071,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 14045,
											"end": 14071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14056,
											"end": 14058,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14052,
											"end": 14054,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14071,
											"name": "MULMOD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14072,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14072,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14072,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14079,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14079,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14079,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14079,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 125,
											"end": 129,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 109,
											"end": 123,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": 101,
											"end": 107,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 88,
											"end": 130,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 156,
											"end": 160,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 148,
											"end": 154,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 144,
											"end": 161,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 134,
											"end": 161,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 134,
											"end": 161,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 165,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 125,
											"end": 129,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 109,
											"end": 123,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": 101,
											"end": 107,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 88,
											"end": 130,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 156,
											"end": 160,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 148,
											"end": 154,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 144,
											"end": 161,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 134,
											"end": 161,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 134,
											"end": 161,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 165,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 125,
											"end": 129,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 109,
											"end": 123,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": 101,
											"end": 107,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 88,
											"end": 130,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 156,
											"end": 160,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 148,
											"end": 154,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 144,
											"end": 161,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 134,
											"end": 161,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 134,
											"end": 161,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 165,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "tag",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 125,
											"end": 129,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 109,
											"end": 123,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": 101,
											"end": 107,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 88,
											"end": 130,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 156,
											"end": 160,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 148,
											"end": 154,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 144,
											"end": 161,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 134,
											"end": 161,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 134,
											"end": 161,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 165,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 354,
											"end": 12405,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									],
									".data": {
										"3A4898A14F86303F4F0F062CF67700E5107CAF8A2238D9BBA8AA8F9B688110E9": "796f752063616e277420636861726765206d6f7265207468616e20616c6c20746865204c494e4b20696e2074686520776f726c642c20677265656479",
										"40E788544E29554C975084A69228C0B0B4A1C9C1F6404406EC2B6D9B86D179A9": "4669727374206d756c7469706c69636174696f6e20636865636b206661696c6564",
										"4BAE64BA22ED7FBB776E6032297D511B182DFD08020C93D70FEC3CFCC33A5267": "5365636f6e64206d756c7469706c69636174696f6e20636865636b206661696c6564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"PRESEED_OFFSET()": "b415f4f5",
							"PROOF_LENGTH()": "e911439c",
							"PUBLIC_KEY_OFFSET()": "8aa7927b",
							"callbacks(bytes32)": "21f36509",
							"fulfillRandomnessRequest(bytes)": "5e1c1059",
							"hashOfKey(uint256[2])": "caf70c4a",
							"onTokenTransfer(address,uint256,bytes)": "a4c0ed36",
							"registerProvingKey(uint256,address,uint256[2],bytes32)": "d8340209",
							"serviceAgreements(bytes32)": "75d35070",
							"withdraw(address,uint256)": "f3fef3a3",
							"withdrawableTokens(address)": "006f6ad0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_link\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_blockHashStore\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"NewServiceAgreement\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"jobID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"requestID\",\"type\":\"bytes32\"}],\"name\":\"RandomnessRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"output\",\"type\":\"uint256\"}],\"name\":\"RandomnessRequestFulfilled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PRESEED_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROOF_LENGTH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PUBLIC_KEY_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"callbacks\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"callbackContract\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"randomnessFee\",\"type\":\"uint96\"},{\"internalType\":\"bytes32\",\"name\":\"seedAndBlockNum\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"fulfillRandomnessRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"_publicKey\",\"type\":\"uint256[2]\"}],\"name\":\"hashOfKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"uint256[2]\",\"name\":\"_publicProvingKey\",\"type\":\"uint256[2]\"},{\"internalType\":\"bytes32\",\"name\":\"_jobID\",\"type\":\"bytes32\"}],\"name\":\"registerProvingKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"serviceAgreements\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"vRFOracle\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"fee\",\"type\":\"uint96\"},{\"internalType\":\"bytes32\",\"name\":\"jobID\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawableTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"fulfillRandomnessRequest(bytes)\":{\"details\":\"The structure of _proof corresponds to vrf.MarshaledOnChainResponse,in the node source code. I.e., it is a vrf.MarshaledProof with theseed replaced by the preSeed, followed by the hash of the requestingblock.\",\"params\":{\"_proof\":\"the proof of randomness. Actual random output built from this\"}},\"hashOfKey(uint256[2])\":{\"params\":{\"_publicKey\":\"the key to return the address for\"}},\"onTokenTransfer(address,uint256,bytes)\":{\"details\":\"To invoke this, use the requestRandomness method in VRFConsumerBase.The VRFCoordinator will call back to the calling contract when theoracle responds, on the method fulfillRandomness. SeeVRFConsumerBase.fulfilRandomness for its signature. Your consumingcontract should inherit from VRFConsumerBase, and implementfulfilRandomness.\",\"params\":{\"_data\":\"abi-encoded call to randomnessRequest\",\"_fee\":\"amount of LINK sent\",\"_sender\":\"address: who sent the LINK (must be a contract)\"}},\"registerProvingKey(uint256,address,uint256[2],bytes32)\":{\"params\":{\"_fee\":\"minimum LINK payment required to serve randomness\",\"_jobID\":\"ID of the corresponding chainlink job in the oracle's db\",\"_oracle\":\"the address of the Chainlink node with the proving key and job\",\"_publicProvingKey\":\"public key used to prove randomness\"}},\"withdraw(address,uint256)\":{\"details\":\"Allows the oracle operator to withdraw their LINK\",\"params\":{\"_amount\":\"is the amount of LINK transferred from the Coordinator contract\",\"_recipient\":\"is the address the funds will be sent to\"}}},\"title\":\"VRFCoordinator coordinates on-chain verifiable-randomness requestswith off-chain responses\"},\"userdoc\":{\"methods\":{\"fulfillRandomnessRequest(bytes)\":{\"notice\":\"Called by the chainlink node to fulfill requests\"},\"hashOfKey(uint256[2])\":{\"notice\":\"Returns the serviceAgreements key associated with this public key\"},\"onTokenTransfer(address,uint256,bytes)\":{\"notice\":\"Called by LINK.transferAndCall, on successful LINK transfer\"},\"registerProvingKey(uint256,address,uint256[2],bytes32)\":{\"notice\":\"Commits calling address to serve randomness\"}}}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":\"VRFCoordinator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol\":{\"keccak256\":\"0x6fa676e33e7598f560867c1dd353babae081c77580cbda47ac6bdffa5fb5fb24\",\"urls\":[\"bzz-raw://2a60cf6f368640c4b3c6457243a8ced9328a3f2bd4c97ed3f7506dc07bc94e27\",\"dweb:/ipfs/Qmd1FK8mjdE8GX4nojZqsgDStV2EeQko7cjDMV2qL1cuBP\"]},\"Users/leilei/Downloads/VRFCoordinator/VRF.sol\":{\"keccak256\":\"0x82ef9afa58b83af09901c42ae3c8e23ca77064fd256f2bf8b08e9dd04e77864f\",\"urls\":[\"bzz-raw://7041a16497009a5efec9eebad666bae1a83c9333f69875a0fb358b863db0c9e8\",\"dweb:/ipfs/QmThshxL8Fkk2F5L2V2o2aSgXsdC5AUj8gSMn7jUizgrAC\"]},\"Users/leilei/Downloads/VRFCoordinator/VRFConsumerBase.sol\":{\"keccak256\":\"0x43a14fe073e276a7e029b08e484c209a91a3f247666e839905cde4e494970157\",\"urls\":[\"bzz-raw://8bbcfa5979d35aa628e85c679ad8a6af68f90543e7c604ba76bdc32e743537a2\",\"dweb:/ipfs/QmUaJLdCjaWVCJpnFnngjr9mA1QkCKs1SqjJPmdDw3ntoJ\"]},\"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol\":{\"keccak256\":\"0x1acc6237b8ad9e2be07d39641f666763a03b08c6ed4e8d186287ccf173f64b9b\",\"urls\":[\"bzz-raw://428414cc849676f67c1a605c307a2072125a5ca649be685f9d8f7b4909692fde\",\"dweb:/ipfs/QmRSjiAGdkKEdKGRPeUeaKRmapMR5YGVJjJwDnn2QbqW82\"]},\"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":{\"keccak256\":\"0xdf34b43d3073edfbf56c9b8d99edd00c09b10eda82dfee45d14d199bf42ee631\",\"urls\":[\"bzz-raw://9f4fe1079f975fe7193964cad81a93776c3ef1be353744b0fbef3a757b750e8d\",\"dweb:/ipfs/QmceqfHiF4SxMPoMJYPEiqPh65UYnBhHKBizFhzG1Q8Bim\"]},\"Users/leilei/Downloads/VRFCoordinator/interfaces/BlockHashStoreInterface.sol\":{\"keccak256\":\"0xa204f747eb96f5712992d1bf47fe1bc1d705940cc7466fa6807be05f04d597da\",\"urls\":[\"bzz-raw://1f9cd2401b9825a82091d9dda11e709c3a8424828932c01b6efe60d63d9df474\",\"dweb:/ipfs/QmbZRosnHnMK2AnmuG8sK6yHn8iZ8kgHc7o1jU2dijgqur\"]},\"Users/leilei/Downloads/VRFCoordinator/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xbf1b1b0f6fc72a45cae680506dd7effc625973443cde0b9c24a9ad6a0c08f4a7\",\"urls\":[\"bzz-raw://9d81480b9e88c40870fbf1ac4ef1fa336b83f780ca60f4e699e300da7346f07c\",\"dweb:/ipfs/Qmeezc5gCP5RvRRC27wqDkyZH7do98nqBmNAxie3yajQJz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1424,
								"contract": "Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol:VRFCoordinator",
								"label": "LINK",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(LinkTokenInterface)2243"
							},
							{
								"astId": 1426,
								"contract": "Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol:VRFCoordinator",
								"label": "blockHashStore",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(BlockHashStoreInterface)2148"
							},
							{
								"astId": 1464,
								"contract": "Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol:VRFCoordinator",
								"label": "callbacks",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_bytes32,t_struct(Callback)1453_storage)"
							},
							{
								"astId": 1468,
								"contract": "Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol:VRFCoordinator",
								"label": "serviceAgreements",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_bytes32,t_struct(ServiceAgreement)1460_storage)"
							},
							{
								"astId": 1472,
								"contract": "Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol:VRFCoordinator",
								"label": "withdrawableTokens",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1478,
								"contract": "Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol:VRFCoordinator",
								"label": "nonces",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(BlockHashStoreInterface)2148": {
								"encoding": "inplace",
								"label": "contract BlockHashStoreInterface",
								"numberOfBytes": "20"
							},
							"t_contract(LinkTokenInterface)2243": {
								"encoding": "inplace",
								"label": "contract LinkTokenInterface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_bytes32,t_struct(Callback)1453_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct VRFCoordinator.Callback)",
								"numberOfBytes": "32",
								"value": "t_struct(Callback)1453_storage"
							},
							"t_mapping(t_bytes32,t_struct(ServiceAgreement)1460_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct VRFCoordinator.ServiceAgreement)",
								"numberOfBytes": "32",
								"value": "t_struct(ServiceAgreement)1460_storage"
							},
							"t_struct(Callback)1453_storage": {
								"encoding": "inplace",
								"label": "struct VRFCoordinator.Callback",
								"members": [
									{
										"astId": 1448,
										"contract": "Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol:VRFCoordinator",
										"label": "callbackContract",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1450,
										"contract": "Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol:VRFCoordinator",
										"label": "randomnessFee",
										"offset": 20,
										"slot": "0",
										"type": "t_uint96"
									},
									{
										"astId": 1452,
										"contract": "Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol:VRFCoordinator",
										"label": "seedAndBlockNum",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(ServiceAgreement)1460_storage": {
								"encoding": "inplace",
								"label": "struct VRFCoordinator.ServiceAgreement",
								"members": [
									{
										"astId": 1455,
										"contract": "Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol:VRFCoordinator",
										"label": "vRFOracle",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1457,
										"contract": "Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol:VRFCoordinator",
										"label": "fee",
										"offset": 20,
										"slot": "0",
										"type": "t_uint96"
									},
									{
										"astId": 1459,
										"contract": "Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol:VRFCoordinator",
										"label": "jobID",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"methods": {
							"fulfillRandomnessRequest(bytes)": {
								"notice": "Called by the chainlink node to fulfill requests"
							},
							"hashOfKey(uint256[2])": {
								"notice": "Returns the serviceAgreements key associated with this public key"
							},
							"onTokenTransfer(address,uint256,bytes)": {
								"notice": "Called by LINK.transferAndCall, on successful LINK transfer"
							},
							"registerProvingKey(uint256,address,uint256[2],bytes32)": {
								"notice": "Commits calling address to serve randomness"
							}
						}
					}
				}
			},
			"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol": {
				"VRFRequestIDBase": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":25:1549  contract VRFRequestIDBase {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":25:1549  contract VRFRequestIDBase {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":25:1549  contract VRFRequestIDBase {... */\n      mstore(0x40, 0x80)\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n\n    auxdata: 0xa2646970667358221220e575e4640211df657803082abc3c6fd08586e0f0b28f15f2f85d6949c97f686164736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220e575e4640211df657803082abc3c6fd08586e0f0b28f15f2f85d6949c97f686164736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH22 0xE4640211DF657803082ABC3C6FD08586E0F0B28F15F2 0xF8 0x5D PUSH10 0x49C97F686164736F6C63 NUMBER STOP MOD MOD STOP CALLER ",
							"sourceMap": "25:1524:4:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;25:1524:4;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220e575e4640211df657803082abc3c6fd08586e0f0b28f15f2f85d6949c97f686164736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH22 0xE4640211DF657803082ABC3C6FD08586E0F0B28F15F2 0xF8 0x5D PUSH10 0x49C97F686164736F6C63 NUMBER STOP MOD MOD STOP CALLER ",
							"sourceMap": "25:1524:4:-:0;;;12:1:-1;9;2:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"makeRequestId(bytes32,uint256)": "infinite",
								"makeVRFInputSeed(bytes32,uint256,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 1549,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 25,
									"end": 1549,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 25,
									"end": 1549,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 25,
									"end": 1549,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 25,
									"end": 1549,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 25,
									"end": 1549,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 1549,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 25,
									"end": 1549,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 1549,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 1549,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 25,
									"end": 1549,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 1549,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e575e4640211df657803082abc3c6fd08586e0f0b28f15f2f85d6949c97f686164736f6c63430006060033",
									".code": [
										{
											"begin": 25,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 25,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 25,
											"end": 1549,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":\"VRFRequestIDBase\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol\":{\"keccak256\":\"0xdf34b43d3073edfbf56c9b8d99edd00c09b10eda82dfee45d14d199bf42ee631\",\"urls\":[\"bzz-raw://9f4fe1079f975fe7193964cad81a93776c3ef1be353744b0fbef3a757b750e8d\",\"dweb:/ipfs/QmceqfHiF4SxMPoMJYPEiqPh65UYnBhHKBizFhzG1Q8Bim\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"Users/leilei/Downloads/VRFCoordinator/interfaces/BlockHashStoreInterface.sol": {
				"BlockHashStoreInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "number",
									"type": "uint256"
								}
							],
							"name": "getBlockhash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getBlockhash(uint256)": "e9413d38"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"getBlockhash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/VRFCoordinator/interfaces/BlockHashStoreInterface.sol\":\"BlockHashStoreInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/VRFCoordinator/interfaces/BlockHashStoreInterface.sol\":{\"keccak256\":\"0xa204f747eb96f5712992d1bf47fe1bc1d705940cc7466fa6807be05f04d597da\",\"urls\":[\"bzz-raw://1f9cd2401b9825a82091d9dda11e709c3a8424828932c01b6efe60d63d9df474\",\"dweb:/ipfs/QmbZRosnHnMK2AnmuG8sK6yHn8iZ8kgHc7o1jU2dijgqur\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"Users/leilei/Downloads/VRFCoordinator/interfaces/LinkTokenInterface.sol": {
				"LinkTokenInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "remaining",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "decimalPlaces",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseApproval",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "increaseApproval",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "tokenName",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "tokenSymbol",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalTokensIssued",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseApproval(address,uint256)": "66188463",
							"increaseApproval(address,uint256)": "d73dd623",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/VRFCoordinator/interfaces/LinkTokenInterface.sol\":\"LinkTokenInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/VRFCoordinator/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xbf1b1b0f6fc72a45cae680506dd7effc625973443cde0b9c24a9ad6a0c08f4a7\",\"urls\":[\"bzz-raw://9d81480b9e88c40870fbf1ac4ef1fa336b83f780ca60f4e699e300da7346f07c\",\"dweb:/ipfs/Qmeezc5gCP5RvRRC27wqDkyZH7do98nqBmNAxie3yajQJz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"Users/leilei/Downloads/VRFCoordinator/SafeMath.sol": {
				"ast": {
					"absolutePath": "Users/leilei/Downloads/VRFCoordinator/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							138
						]
					},
					"id": 139,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "25:563:0",
								"text": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 138,
							"linearizedBaseContracts": [
								138
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "889:95:0",
										"statements": [
											{
												"assignments": [
													13
												],
												"declarations": [
													{
														"constant": false,
														"id": 13,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 27,
														"src": "895:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 12,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "895:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 17,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 14,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "907:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 15,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "911:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "907:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "895:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 19,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "926:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 20,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "931:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "926:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "934:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 18,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "918:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "918:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "918:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 25,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 13,
													"src": "978:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 11,
												"id": 26,
												"nodeType": "Return",
												"src": "971:8:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "610:209:0",
										"text": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n    * Counterpart to Solidity's `+` operator.\n    * Requirements:\n- Addition cannot overflow."
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "835:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "846:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "834:22:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "880:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "879:9:0"
									},
									"scope": 138,
									"src": "822:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1303:98:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 39,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "1317:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 40,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "1322:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1317:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1325:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 38,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1309:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1309:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "1309:49:0"
											},
											{
												"assignments": [
													46
												],
												"declarations": [
													{
														"constant": false,
														"id": 46,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 53,
														"src": "1364:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 45,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1364:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 50,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 47,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1376:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 48,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "1380:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1376:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1364:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 51,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 46,
													"src": "1395:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 37,
												"id": 52,
												"nodeType": "Return",
												"src": "1388:8:0"
											}
										]
									},
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "988:245:0",
										"text": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n    * Counterpart to Solidity's `-` operator.\n    * Requirements:\n- Subtraction cannot overflow."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 54,
												"src": "1249:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 54,
												"src": "1260:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1248:22:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 54,
												"src": "1294:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1293:9:0"
									},
									"scope": 138,
									"src": "1236:165:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "1696:351:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 64,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "1911:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1916:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1911:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 70,
												"nodeType": "IfStatement",
												"src": "1907:35:0",
												"trueBody": {
													"id": 69,
													"nodeType": "Block",
													"src": "1919:23:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1934:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 63,
															"id": 68,
															"nodeType": "Return",
															"src": "1927:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													72
												],
												"declarations": [
													{
														"constant": false,
														"id": 72,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 88,
														"src": "1948:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 71,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1948:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 76,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 73,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "1960:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 74,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "1964:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1960:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1948:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 78,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "1979:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 79,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 57,
																	"src": "1983:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1979:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 81,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "1988:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1979:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1991:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 77,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1971:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1971:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "1971:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 86,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 72,
													"src": "2041:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 63,
												"id": 87,
												"nodeType": "Return",
												"src": "2034:8:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1405:221:0",
										"text": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n    * Counterpart to Solidity's `*` operator.\n    * Requirements:\n- Multiplication cannot overflow."
									},
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 89,
												"src": "1642:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 89,
												"src": "1653:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1641:22:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 89,
												"src": "1687:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1686:9:0"
									},
									"scope": 138,
									"src": "1629:418:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "2555:237:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 100,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "2631:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2635:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2631:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2638:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 99,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2623:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2623:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "2623:44:0"
											},
											{
												"assignments": [
													107
												],
												"declarations": [
													{
														"constant": false,
														"id": 107,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 114,
														"src": "2673:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 106,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2673:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 111,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 108,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "2685:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 109,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2689:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2685:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2673:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 112,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 107,
													"src": "2786:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 98,
												"id": 113,
												"nodeType": "Return",
												"src": "2779:8:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2051:434:0",
										"text": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n    * Requirements:\n- The divisor cannot be zero."
									},
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 115,
												"src": "2501:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2501:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 115,
												"src": "2512:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2500:22:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 115,
												"src": "2546:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2545:9:0"
									},
									"scope": 138,
									"src": "2488:304:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "3289:72:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 126,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 120,
																"src": "3303:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3308:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3303:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3311:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3295:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3295:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "3295:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 132,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "3351:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 133,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "3355:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3351:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 124,
												"id": 135,
												"nodeType": "Return",
												"src": "3344:12:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "2796:423:0",
										"text": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n    * Requirements:\n- The divisor cannot be zero."
									},
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 137,
												"src": "3235:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3235:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 137,
												"src": "3246:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3234:22:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 137,
												"src": "3280:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3280:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3279:9:0"
									},
									"scope": 138,
									"src": "3222:139:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 139,
							"src": "589:2774:0"
						}
					],
					"src": "0:3363:0"
				},
				"id": 0
			},
			"Users/leilei/Downloads/VRFCoordinator/VRF.sol": {
				"ast": {
					"absolutePath": "Users/leilei/Downloads/VRFCoordinator/VRF.sol",
					"exportedSymbols": {
						"VRF": [
							1283
						]
					},
					"id": 1284,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 140,
							"literals": [
								"solidity",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 141,
								"nodeType": "StructuredDocumentation",
								"src": "24:7112:1",
								"text": "****************************************************************************\n@notice Verification of verifiable-random-function (VRF) proofs, following\n@notice https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\n@notice See https://eprint.iacr.org/2017/099.pdf for security proofs.\n@dev Bibliographic references:\n@dev Goldberg, et al., \"Verifiable Random Functions (VRFs)\", Internet Draft\n@dev draft-irtf-cfrg-vrf-05, IETF, Aug 11 2019,\n@dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05\n@dev Papadopoulos, et al., \"Making NSEC5 Practical for DNSSEC\", Cryptology\n@dev ePrint Archive, Report 2017/099, https://eprint.iacr.org/2017/099.pdf\n****************************************************************************\n@dev USAGE\n@dev The main entry point is randomValueFromVRFProof. See its docstring.\n****************************************************************************\n@dev PURPOSE\n@dev Reggie the Random Oracle (not his real job) wants to provide randomness\n@dev to Vera the verifier in such a way that Vera can be sure he's not\n@dev making his output up to suit himself. Reggie provides Vera a public key\n@dev to which he knows the secret key. Each time Vera provides a seed to\n@dev Reggie, he gives back a value which is computed completely\n@dev deterministically from the seed and the secret key.\n@dev Reggie provides a proof by which Vera can verify that the output was\n@dev correctly computed once Reggie tells it to her, but without that proof,\n@dev the output is computationally indistinguishable to her from a uniform\n@dev random sample from the output space.\n@dev The purpose of this contract is to perform that verification.\n****************************************************************************\n@dev DESIGN NOTES\n@dev The VRF algorithm verified here satisfies the full unqiqueness, full\n@dev collision resistance, and full pseudorandomness security properties.\n@dev See \"SECURITY PROPERTIES\" below, and\n@dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-3\n@dev An elliptic curve point is generally represented in the solidity code\n@dev as a uint256[2], corresponding to its affine coordinates in\n@dev GF(FIELD_SIZE).\n@dev For the sake of efficiency, this implementation deviates from the spec\n@dev in some minor ways:\n@dev - Keccak hash rather than the SHA256 hash recommended in\n@dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\n@dev   Keccak costs much less gas on the EVM, and provides similar security.\n@dev - Secp256k1 curve instead of the P-256 or ED25519 curves recommended in\n@dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\n@dev   For curve-point multiplication, it's much cheaper to abuse ECRECOVER\n@dev - hashToCurve recursively hashes until it finds a curve x-ordinate. On\n@dev   the EVM, this is slightly more efficient than the recommendation in\n@dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1\n@dev   step 5, to concatenate with a nonce then hash, and rehash with the\n@dev   nonce updated until a valid x-ordinate is found.\n@dev - hashToCurve does not include a cipher version string or the byte 0x1\n@dev   in the hash message, as recommended in step 5.B of the draft\n@dev   standard. They are unnecessary here because no variation in the\n@dev   cipher suite is allowed.\n@dev - Similarly, the hash input in scalarFromCurvePoints does not include a\n@dev   commitment to the cipher suite, either, which differs from step 2 of\n@dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3\n@dev   . Also, the hash input is the concatenation of the uncompressed\n@dev   points, not the compressed points as recommended in step 3.\n@dev - In the calculation of the challenge value \"c\", the \"u\" value (i.e.\n@dev   the value computed by Reggie as the nonce times the secp256k1\n@dev   generator point, see steps 5 and 7 of\n@dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\n@dev   ) is replaced by its ethereum address, i.e. the lower 160 bits of the\n@dev   keccak hash of the original u. This is because we only verify the\n@dev   calculation of u up to its address, by abusing ECRECOVER.\n****************************************************************************\n@dev   SECURITY PROPERTIES\n@dev Here are the security properties for this VRF:\n@dev Full uniqueness: For any seed and valid VRF public key, there is\n@dev   exactly one VRF output which can be proved to come from that seed, in\n@dev   the sense that the proof will pass verifyVRFProof.\n@dev Full collision resistance: It's cryptographically infeasible to find\n@dev   two seeds with same VRF output from a fixed, valid VRF key\n@dev Full pseudorandomness: Absent the proofs that the VRF outputs are\n@dev   derived from a given seed, the outputs are computationally\n@dev   indistinguishable from randomness.\n@dev https://eprint.iacr.org/2017/099.pdf, Appendix B contains the proofs\n@dev for these properties.\n@dev For secp256k1, the key validation described in section\n@dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.6\n@dev is unnecessary, because secp256k1 has cofactor 1, and the\n@dev representation of the public key used here (affine x- and y-ordinates\n@dev of the secp256k1 point on the standard y^2=x^3+7 curve) cannot refer to\n@dev the point at infinity.\n****************************************************************************\n@dev OTHER SECURITY CONSIDERATIONS\n  * @dev The seed input to the VRF could in principle force an arbitrary amount\n@dev of work in hashToCurve, by requiring extra rounds of hashing and\n@dev checking whether that's yielded the x ordinate of a secp256k1 point.\n@dev However, under the Random Oracle Model the probability of choosing a\n@dev point which forces n extra rounds in hashToCurve is 2⁻ⁿ. The base cost\n@dev for calling hashToCurve is about 25,000 gas, and each round of checking\n@dev for a valid x ordinate costs about 15,555 gas, so to find a seed for\n@dev which hashToCurve would cost more than 2,017,000 gas, one would have to\n@dev try, in expectation, about 2¹²⁸ seeds, which is infeasible for any\n@dev foreseeable computational resources. (25,000 + 128 * 15,555 < 2,017,000.)\n@dev Since the gas block limit for the Ethereum main net is 10,000,000 gas,\n@dev this means it is infeasible for an adversary to prevent correct\n@dev operation of this contract by choosing an adverse seed.\n@dev (See TestMeasureHashToCurveGasCost for verification of the gas cost for\n@dev hashToCurve.)\n@dev It may be possible to make a secure constant-time hashToCurve function.\n@dev See notes in hashToCurve docstring."
							},
							"fullyImplemented": true,
							"id": 1283,
							"linearizedBaseContracts": [
								1283
							],
							"name": "VRF",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 144,
									"mutability": "constant",
									"name": "GROUP_ORDER",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1283,
									"src": "7234:186:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 142,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7234:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307846464646464646464646464646464646464646464646464646464646464646454241414544434536414634384130334242464432354538434430333634313431",
										"id": 143,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7354:66:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907852837564279074904382605163141518161494337_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...4337"
										},
										"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 147,
									"mutability": "constant",
									"name": "FIELD_SIZE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1283,
									"src": "7502:152:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 145,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7502:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646454646464646433246",
										"id": 146,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7588:66:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007908834671663_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...1663"
										},
										"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 150,
									"mutability": "constant",
									"name": "WORD_LENGTH_BYTES",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1283,
									"src": "7658:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 148,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7658:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783230",
										"id": 149,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7703:4:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "0x20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "7929:970:1",
										"statements": [
											{
												"assignments": [
													160
												],
												"declarations": [
													{
														"constant": false,
														"id": 160,
														"mutability": "mutable",
														"name": "callResult",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 226,
														"src": "7937:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 159,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7937:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 161,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "7937:18:1"
											},
											{
												"assignments": [
													167
												],
												"declarations": [
													{
														"constant": false,
														"id": 167,
														"mutability": "mutable",
														"name": "bigModExpContractInputs",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 226,
														"src": "7963:41:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$6_memory_ptr",
															"typeString": "uint256[6]"
														},
														"typeName": {
															"baseType": {
																"id": 165,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7963:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 166,
															"length": {
																"argumentTypes": null,
																"hexValue": "36",
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7971:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_6_by_1",
																	"typeString": "int_const 6"
																},
																"value": "6"
															},
															"nodeType": "ArrayTypeName",
															"src": "7963:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$6_storage_ptr",
																"typeString": "uint256[6]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 168,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "7963:41:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 169,
															"name": "bigModExpContractInputs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "8012:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$6_memory_ptr",
																"typeString": "uint256[6] memory"
															}
														},
														"id": 171,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8036:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8012:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 172,
														"name": "WORD_LENGTH_BYTES",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "8041:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8012:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "8012:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 175,
															"name": "bigModExpContractInputs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "8085:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$6_memory_ptr",
																"typeString": "uint256[6] memory"
															}
														},
														"id": 177,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8109:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8085:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 178,
														"name": "WORD_LENGTH_BYTES",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "8114:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8085:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "8085:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 181,
															"name": "bigModExpContractInputs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "8162:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$6_memory_ptr",
																"typeString": "uint256[6] memory"
															}
														},
														"id": 183,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8186:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8162:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 184,
														"name": "WORD_LENGTH_BYTES",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "8191:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8162:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "8162:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 187,
															"name": "bigModExpContractInputs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "8238:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$6_memory_ptr",
																"typeString": "uint256[6] memory"
															}
														},
														"id": 189,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "33",
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8262:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8238:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 190,
														"name": "base",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "8267:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8238:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "8238:33:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 193,
															"name": "bigModExpContractInputs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "8279:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$6_memory_ptr",
																"typeString": "uint256[6] memory"
															}
														},
														"id": 195,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "34",
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8303:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8279:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 196,
														"name": "exponent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "8308:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8279:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "8279:37:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 199,
															"name": "bigModExpContractInputs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "8324:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$6_memory_ptr",
																"typeString": "uint256[6] memory"
															}
														},
														"id": 201,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "35",
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8348:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8324:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 202,
														"name": "FIELD_SIZE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "8353:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8324:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "8324:39:1"
											},
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "output",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 226,
														"src": "8371:24:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
															"typeString": "uint256[1]"
														},
														"typeName": {
															"baseType": {
																"id": 208,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8371:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 209,
															"length": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8379:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"nodeType": "ArrayTypeName",
															"src": "8371:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$1_storage_ptr",
																"typeString": "uint256[1]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 211,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "8371:24:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8412:398:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8463:339:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8501:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8497:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8497:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8553:4:1",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "bigModExpContractInputs",
																		"nodeType": "YulIdentifier",
																		"src": "8617:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8650:4:1",
																		"type": "",
																		"value": "0xc0"
																	},
																	{
																		"name": "output",
																		"nodeType": "YulIdentifier",
																		"src": "8725:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8741:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nodeType": "YulIdentifier",
																	"src": "8477:10:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8477:325:1"
															},
															"variableNames": [
																{
																	"name": "callResult",
																	"nodeType": "YulIdentifier",
																	"src": "8463:10:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 167,
														"isOffset": false,
														"isSlot": false,
														"src": "8617:23:1",
														"valueSize": 1
													},
													{
														"declaration": 160,
														"isOffset": false,
														"isSlot": false,
														"src": "8463:10:1",
														"valueSize": 1
													},
													{
														"declaration": 210,
														"isOffset": false,
														"isSlot": false,
														"src": "8725:6:1",
														"valueSize": 1
													}
												],
												"id": 212,
												"nodeType": "InlineAssembly",
												"src": "8403:407:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 213,
														"name": "callResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "8821:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8835:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8821:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 221,
												"nodeType": "IfStatement",
												"src": "8817:52:1",
												"trueBody": {
													"id": 220,
													"nodeType": "Block",
													"src": "8838:31:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "6269674d6f64457870206661696c75726521",
																		"id": 217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8846:20:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f",
																			"typeString": "literal_string \"bigModExp failure!\""
																		},
																		"value": "bigModExp failure!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f",
																			"typeString": "literal_string \"bigModExp failure!\""
																		}
																	],
																	"id": 216,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-19,
																		-19
																	],
																	"referencedDeclaration": -19,
																	"src": "8839:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8839:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 219,
															"nodeType": "ExpressionStatement",
															"src": "8839:28:1"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 222,
														"name": "output",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "8883:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
															"typeString": "uint256[1] memory"
														}
													},
													"id": 224,
													"indexExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8890:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8883:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 158,
												"id": 225,
												"nodeType": "Return",
												"src": "8876:16:1"
											}
										]
									},
									"documentation": null,
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bigModExp",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "base",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "7846:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7846:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "exponent",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "7860:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7860:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7845:32:1"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "exponentiation",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "7905:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7905:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7904:24:1"
									},
									"scope": 1283,
									"src": "7827:1072:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 235,
									"mutability": "constant",
									"name": "SQRT_POWER",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1283,
									"src": "9074:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 228,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9074:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 234,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"components": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 229,
														"name": "FIELD_SIZE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "9113:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9126:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9113:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 232,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "9112:16:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": ">>",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "32",
											"id": 233,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "9132:1:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"src": "9112:21:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "9261:42:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 243,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "9284:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 244,
															"name": "SQRT_POWER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "9287:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 242,
														"name": "bigModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "9274:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9274:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 246,
												"nodeType": "Return",
												"src": "9267:31:1"
											}
										]
									},
									"documentation": null,
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "squareRoot",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 248,
												"src": "9218:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9218:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9217:11:1"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 248,
												"src": "9252:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9252:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9251:9:1"
									},
									"scope": 1283,
									"src": "9198:105:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "9424:198:1",
										"statements": [
											{
												"assignments": [
													256
												],
												"declarations": [
													{
														"constant": false,
														"id": 256,
														"mutability": "mutable",
														"name": "xCubed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 273,
														"src": "9511:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 255,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9511:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 266,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 258,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "9535:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 260,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "9545:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 261,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "9548:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 262,
																	"name": "FIELD_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 147,
																	"src": "9551:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 259,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -16,
																"src": "9538:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9538:24:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 264,
															"name": "FIELD_SIZE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "9564:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 257,
														"name": "mulmod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -16,
														"src": "9528:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9528:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9511:64:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 268,
															"name": "xCubed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "9595:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "37",
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9603:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														{
															"argumentTypes": null,
															"id": 270,
															"name": "FIELD_SIZE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "9606:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 267,
														"name": "addmod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -2,
														"src": "9588:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9588:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 254,
												"id": 272,
												"nodeType": "Return",
												"src": "9581:36:1"
											}
										]
									},
									"documentation": null,
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ySquared",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 274,
												"src": "9381:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9381:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9380:11:1"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 274,
												"src": "9415:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9415:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9414:9:1"
									},
									"scope": 1283,
									"src": "9363:259:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "9727:66:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 284,
																	"name": "p",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "9749:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																"id": 286,
																"indexExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9751:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9749:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 283,
															"name": "ySquared",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "9740:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) pure returns (uint256)"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9740:14:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 289,
																	"name": "p",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "9765:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																"id": 291,
																"indexExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9767:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9765:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 292,
																	"name": "p",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "9771:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																"id": 294,
																"indexExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9773:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9771:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 295,
																"name": "FIELD_SIZE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "9777:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 288,
															"name": "mulmod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -16,
															"src": "9758:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9758:30:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9740:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 282,
												"id": 298,
												"nodeType": "Return",
												"src": "9733:55:1"
											}
										]
									},
									"documentation": null,
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOnCurve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "p",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 300,
												"src": "9677:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 275,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9677:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 277,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9685:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "9677:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9676:21:1"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 300,
												"src": "9721:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 280,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9721:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9720:6:1"
									},
									"scope": 1283,
									"src": "9658:135:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "9918:324:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 307,
														"name": "x_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "9924:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 311,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 302,
																		"src": "9947:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 310,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -8,
																	"src": "9937:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9937:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9929:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 308,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9929:7:1",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9929:21:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9924:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "9924:26:1"
											},
											{
												"body": {
													"id": 331,
													"nodeType": "Block",
													"src": "10178:60:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 319,
																	"name": "x_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "10186:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 325,
																							"name": "x_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 305,
																							"src": "10226:2:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 323,
																							"name": "abi",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -1,
																							"src": "10209:3:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_abi",
																								"typeString": "abi"
																							}
																						},
																						"id": 324,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "encodePacked",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": null,
																						"src": "10209:16:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																							"typeString": "function () pure returns (bytes memory)"
																						}
																					},
																					"id": 326,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10209:20:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 322,
																				"name": "keccak256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -8,
																				"src": "10199:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																					"typeString": "function (bytes memory) pure returns (bytes32)"
																				}
																			},
																			"id": 327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10199:31:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10191:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 320,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "10191:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10191:40:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10186:45:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 330,
															"nodeType": "ExpressionStatement",
															"src": "10186:45:1"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 316,
														"name": "x_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "10160:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 317,
														"name": "FIELD_SIZE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "10166:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10160:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 332,
												"nodeType": "WhileStatement",
												"src": "10153:85:1"
											}
										]
									},
									"documentation": null,
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fieldHash",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 334,
												"src": "9867:14:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 301,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9867:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9866:16:1"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "x_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 334,
												"src": "9906:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9906:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9905:12:1"
									},
									"scope": 1283,
									"src": "9848:394:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "10756:144:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 343,
															"name": "p",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "10764:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															}
														},
														"id": 345,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10766:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10764:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 347,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "10781:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 346,
															"name": "fieldHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "10771:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (bytes memory) pure returns (uint256)"
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10771:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10764:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "10764:19:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 351,
															"name": "p",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "10791:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															}
														},
														"id": 353,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10793:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10791:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 356,
																			"name": "p",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 341,
																			"src": "10818:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																				"typeString": "uint256[2] memory"
																			}
																		},
																		"id": 358,
																		"indexExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10820:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10818:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 355,
																	"name": "ySquared",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "10809:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10809:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 354,
															"name": "squareRoot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "10798:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10798:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10791:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "10791:33:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 363,
																"name": "p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "10836:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															"id": 365,
															"indexExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10838:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10836:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10843:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "10836:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10848:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10836:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 381,
												"nodeType": "IfStatement",
												"src": "10832:62:1",
												"trueBody": {
													"id": 380,
													"nodeType": "Block",
													"src": "10851:43:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 370,
																		"name": "p",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "10861:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																			"typeString": "uint256[2] memory"
																		}
																	},
																	"id": 372,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10863:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10861:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 373,
																		"name": "FIELD_SIZE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 147,
																		"src": "10868:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 374,
																			"name": "p",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 341,
																			"src": "10881:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																				"typeString": "uint256[2] memory"
																			}
																		},
																		"id": 376,
																		"indexExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10883:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10881:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10868:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10861:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 379,
															"nodeType": "ExpressionStatement",
															"src": "10861:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "newCandidateSecp256k1Point",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 383,
												"src": "10692:14:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 335,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10692:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10691:16:1"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "p",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 383,
												"src": "10735:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 338,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10735:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 340,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10743:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "10735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10734:21:1"
									},
									"scope": 1283,
									"src": "10656:244:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 386,
									"mutability": "constant",
									"name": "HASH_TO_CURVE_HASH_PREFIX",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1283,
									"src": "11013:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 384,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11013:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 385,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11058:1:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "11939:262:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 399,
														"name": "rv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "11947:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 403,
																		"name": "HASH_TO_CURVE_HASH_PREFIX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "11996:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 404,
																		"name": "pk",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 390,
																		"src": "12078:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																			"typeString": "uint256[2] memory"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 405,
																		"name": "input",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "12082:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																			"typeString": "uint256[2] memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 401,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -1,
																		"src": "11979:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "11979:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11979:109:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 400,
															"name": "newCandidateSecp256k1Point",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "11952:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																"typeString": "function (bytes memory) view returns (uint256[2] memory)"
															}
														},
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11952:137:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"src": "11947:142:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
														"typeString": "uint256[2] memory"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "11947:142:1"
											},
											{
												"body": {
													"id": 425,
													"nodeType": "Block",
													"src": "12120:75:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 414,
																	"name": "rv",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "12130:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 418,
																						"name": "rv",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 397,
																						"src": "12179:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																							"typeString": "uint256[2] memory"
																						}
																					},
																					"id": 420,
																					"indexExpression": {
																						"argumentTypes": null,
																						"hexValue": "30",
																						"id": 419,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12182:1:1",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "12179:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 416,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -1,
																					"src": "12162:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 417,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "12162:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12162:23:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 415,
																		"name": "newCandidateSecp256k1Point",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 383,
																		"src": "12135:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
																			"typeString": "function (bytes memory) view returns (uint256[2] memory)"
																		}
																	},
																	"id": 422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12135:51:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																"src": "12130:56:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															"id": 424,
															"nodeType": "ExpressionStatement",
															"src": "12130:56:1"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "12104:14:1",
													"subExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 411,
																"name": "rv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "12115:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															],
															"id": 410,
															"name": "isOnCurve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "12105:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (uint256[2] memory) pure returns (bool)"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12105:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 426,
												"nodeType": "WhileStatement",
												"src": "12097:98:1"
											}
										]
									},
									"documentation": null,
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hashToCurve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "pk",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 428,
												"src": "11853:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 387,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11853:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 389,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11861:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "11853:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "input",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 428,
												"src": "11875:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11875:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11852:37:1"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "rv",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 428,
												"src": "11917:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 394,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11917:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 396,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11925:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "11917:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11916:22:1"
									},
									"scope": 1283,
									"src": "11832:369:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "12832:839:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 445,
																"name": "scalar",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "12846:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12856:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12846:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12838:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12838:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "12838:20:1"
											},
											{
												"assignments": [
													451
												],
												"declarations": [
													{
														"constant": false,
														"id": 451,
														"mutability": "mutable",
														"name": "x",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 515,
														"src": "12903:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 450,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12903:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 455,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 452,
														"name": "multiplicand",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "12915:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2] memory"
														}
													},
													"id": 454,
													"indexExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12928:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12915:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12903:27:1"
											},
											{
												"assignments": [
													457
												],
												"declarations": [
													{
														"constant": false,
														"id": 457,
														"mutability": "mutable",
														"name": "v",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 515,
														"src": "12966:7:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 456,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "12966:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 468,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 458,
																	"name": "multiplicand",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "12976:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																"id": 460,
																"indexExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12989:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12976:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12994:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "12976:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12999:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "12976:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "3238",
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13008:2:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_28_by_1",
															"typeString": "int_const 28"
														},
														"value": "28"
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "12976:34:1",
													"trueExpression": {
														"argumentTypes": null,
														"hexValue": "3237",
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13003:2:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_27_by_1",
															"typeString": "int_const 27"
														},
														"value": "27"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12966:44:1"
											},
											{
												"assignments": [
													470
												],
												"declarations": [
													{
														"constant": false,
														"id": 470,
														"mutability": "mutable",
														"name": "scalarTimesX",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 515,
														"src": "13359:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 469,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "13359:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 479,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 474,
																	"name": "scalar",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 435,
																	"src": "13397:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 475,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "13405:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 476,
																	"name": "GROUP_ORDER",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "13408:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 473,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -16,
																"src": "13390:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13390:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13382:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": {
															"id": 471,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "13382:7:1",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13382:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13359:62:1"
											},
											{
												"assignments": [
													481
												],
												"declarations": [
													{
														"constant": false,
														"id": 481,
														"mutability": "mutable",
														"name": "actual",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 515,
														"src": "13427:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 480,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13427:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 494,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13462:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13454:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 483,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "13454:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13454:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 487,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "13466:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 490,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "13477:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13469:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 488,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "13469:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13469:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 492,
															"name": "scalarTimesX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "13481:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 482,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -6,
														"src": "13444:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13444:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13427:67:1"
											},
											{
												"assignments": [
													496
												],
												"declarations": [
													{
														"constant": false,
														"id": 496,
														"mutability": "mutable",
														"name": "expected",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 515,
														"src": "13560:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 495,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13560:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 509,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 504,
																					"name": "product",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 439,
																					"src": "13622:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																						"typeString": "uint256[2] memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																						"typeString": "uint256[2] memory"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 502,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -1,
																					"src": "13605:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 503,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "13605:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13605:25:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 501,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -8,
																		"src": "13595:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13595:36:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13587:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 499,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13587:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13587:45:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13579:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 497,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13579:7:1",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13579:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13560:73:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 510,
																"name": "actual",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "13647:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 511,
																"name": "expected",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "13657:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13647:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 513,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "13646:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 443,
												"id": 514,
												"nodeType": "Return",
												"src": "13639:27:1"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "12205:485:1",
										"text": "*********************************************************************\n@notice Check that product==scalar*multiplicand\n   * @dev Based on Vitalik Buterin's idea in ethresear.ch post cited below.\n   * @param multiplicand: secp256k1 point\n@param scalar: non-zero GF(GROUP_ORDER) scalar\n@param product: secp256k1 expected to be multiplier * multiplicand\n@return verifies true iff product==scalar*multiplicand, with cryptographically high probability"
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ecmulVerify",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "multiplicand",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 516,
												"src": "12714:30:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 430,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12714:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 432,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12722:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "12714:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "scalar",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 516,
												"src": "12746:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12746:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "product",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 516,
												"src": "12766:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 436,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12766:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 438,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12774:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "12766:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12713:79:1"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "verifies",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 516,
												"src": "12815:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 441,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12815:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12814:15:1"
									},
									"scope": 1283,
									"src": "12693:978:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "13882:197:1",
										"statements": [
											{
												"assignments": [
													532
												],
												"declarations": [
													{
														"constant": false,
														"id": 532,
														"mutability": "mutable",
														"name": "num1",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 565,
														"src": "13890:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 531,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13890:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 538,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 534,
															"name": "z2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "13912:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 535,
															"name": "x1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "13916:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 536,
															"name": "FIELD_SIZE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "13920:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 533,
														"name": "mulmod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -16,
														"src": "13905:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13905:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13890:41:1"
											},
											{
												"assignments": [
													540
												],
												"declarations": [
													{
														"constant": false,
														"id": 540,
														"mutability": "mutable",
														"name": "num2",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 565,
														"src": "13939:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 539,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13939:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 548,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 542,
																"name": "FIELD_SIZE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "13961:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 543,
																"name": "x2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "13974:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13961:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 545,
															"name": "z1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "13978:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 546,
															"name": "FIELD_SIZE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "13982:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 541,
														"name": "mulmod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -16,
														"src": "13954:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13954:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13939:54:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"id": 549,
																"name": "x3",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "14002:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 550,
																"name": "z3",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "14006:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 551,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "14001:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 553,
																		"name": "num1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "14020:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 554,
																		"name": "num2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 540,
																		"src": "14026:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 555,
																		"name": "FIELD_SIZE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 147,
																		"src": "14032:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 552,
																	"name": "addmod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -2,
																	"src": "14013:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14013:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 558,
																		"name": "z1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "14052:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 559,
																		"name": "z2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 524,
																		"src": "14056:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 560,
																		"name": "FIELD_SIZE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 147,
																		"src": "14060:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 557,
																	"name": "mulmod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -16,
																	"src": "14045:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14045:26:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 562,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14012:60:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "14001:71:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 564,
												"nodeType": "ExpressionStatement",
												"src": "14001:71:1"
											}
										]
									},
									"documentation": null,
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "projectiveSub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "x1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 566,
												"src": "13784:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13784:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "z1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 566,
												"src": "13796:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13796:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "x2",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 566,
												"src": "13808:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "z2",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 566,
												"src": "13820:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13783:48:1"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "x3",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 566,
												"src": "13858:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13858:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "z3",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 566,
												"src": "13870:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13857:24:1"
									},
									"scope": 1283,
									"src": "13761:318:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "14286:82:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"id": 581,
																"name": "x3",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "14295:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 582,
																"name": "z3",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "14299:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 583,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "14294:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 585,
																		"name": "x1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 568,
																		"src": "14313:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 586,
																		"name": "x2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 572,
																		"src": "14317:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 587,
																		"name": "FIELD_SIZE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 147,
																		"src": "14321:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 584,
																	"name": "mulmod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -16,
																	"src": "14306:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14306:26:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 590,
																		"name": "z1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 570,
																		"src": "14341:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 591,
																		"name": "z2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "14345:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 592,
																		"name": "FIELD_SIZE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 147,
																		"src": "14349:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 589,
																	"name": "mulmod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -16,
																	"src": "14334:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14334:26:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 594,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14305:56:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "14294:67:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "14294:67:1"
											}
										]
									},
									"documentation": null,
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "projectiveMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "x1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 598,
												"src": "14188:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14188:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "z1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 598,
												"src": "14200:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14200:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "x2",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 598,
												"src": "14212:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14212:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "z2",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 598,
												"src": "14224:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14224:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14187:48:1"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "x3",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 598,
												"src": "14262:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14262:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "z3",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 598,
												"src": "14274:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14274:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14261:24:1"
									},
									"scope": 1283,
									"src": "14165:203:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "16104:1861:1",
										"statements": [
											{
												"assignments": [
													617,
													619
												],
												"declarations": [
													{
														"constant": false,
														"id": 617,
														"mutability": "mutable",
														"name": "z1",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 750,
														"src": "16783:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 616,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16783:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 619,
														"mutability": "mutable",
														"name": "z2",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 750,
														"src": "16795:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 618,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16795:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 623,
												"initialValue": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "31",
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16810:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"argumentTypes": null,
															"hexValue": "31",
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16813:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"id": 622,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "16809:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_rational_1_by_1_$",
														"typeString": "tuple(int_const 1,int_const 1)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16782:33:1"
											},
											{
												"assignments": [
													625
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"mutability": "mutable",
														"name": "lx",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 750,
														"src": "16892:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 624,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16892:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 633,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 627,
															"name": "qy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "16912:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 628,
																"name": "FIELD_SIZE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "16916:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 629,
																"name": "py",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "16929:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16916:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 631,
															"name": "FIELD_SIZE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "16933:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 626,
														"name": "addmod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -2,
														"src": "16905:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16905:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16892:52:1"
											},
											{
												"assignments": [
													635
												],
												"declarations": [
													{
														"constant": false,
														"id": 635,
														"mutability": "mutable",
														"name": "lz",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 750,
														"src": "16952:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 634,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16952:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 643,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 637,
															"name": "qx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "16972:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 638,
																"name": "FIELD_SIZE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "16976:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 639,
																"name": "px",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "16989:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16976:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 641,
															"name": "FIELD_SIZE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "16993:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 636,
														"name": "addmod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -2,
														"src": "16965:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16965:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16952:52:1"
											},
											{
												"assignments": [
													645
												],
												"declarations": [
													{
														"constant": false,
														"id": 645,
														"mutability": "mutable",
														"name": "dx",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 750,
														"src": "17013:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 644,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17013:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 646,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "17013:10:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"id": 647,
																"name": "sx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "17117:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 648,
																"name": "dx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "17121:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 649,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "17116:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 651,
																"name": "lx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 625,
																"src": "17141:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 652,
																"name": "lz",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "17145:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 653,
																"name": "lx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 625,
																"src": "17149:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 654,
																"name": "lz",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "17153:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 650,
															"name": "projectiveMul",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "17127:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17127:29:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "17116:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 657,
												"nodeType": "ExpressionStatement",
												"src": "17116:40:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"id": 658,
																"name": "sx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "17188:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 659,
																"name": "dx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "17192:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 660,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "17187:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 662,
																"name": "sx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "17212:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 663,
																"name": "dx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "17216:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 664,
																"name": "px",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "17220:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 665,
																"name": "z1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "17224:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 661,
															"name": "projectiveSub",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "17198:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"
															}
														},
														"id": 666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17198:29:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "17187:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "17187:40:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"id": 669,
																"name": "sx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "17262:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 670,
																"name": "dx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "17266:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 671,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "17261:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 673,
																"name": "sx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "17286:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 674,
																"name": "dx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "17290:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 675,
																"name": "qx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 605,
																"src": "17294:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 676,
																"name": "z2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 619,
																"src": "17298:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 672,
															"name": "projectiveSub",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "17272:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"
															}
														},
														"id": 677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17272:29:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "17261:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "17261:40:1"
											},
											{
												"assignments": [
													681
												],
												"declarations": [
													{
														"constant": false,
														"id": 681,
														"mutability": "mutable",
														"name": "dy",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 750,
														"src": "17339:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 680,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17339:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 682,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "17339:10:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"id": 683,
																"name": "sy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 612,
																"src": "17445:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 684,
																"name": "dy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 681,
																"src": "17449:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 685,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "17444:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 687,
																"name": "px",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "17469:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 688,
																"name": "z1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "17473:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 689,
																"name": "sx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "17477:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 690,
																"name": "dx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "17481:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 686,
															"name": "projectiveSub",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "17455:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"
															}
														},
														"id": 691,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17455:29:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "17444:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "17444:40:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"id": 694,
																"name": "sy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 612,
																"src": "17502:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 695,
																"name": "dy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 681,
																"src": "17506:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 696,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "17501:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 698,
																"name": "sy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 612,
																"src": "17526:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 699,
																"name": "dy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 681,
																"src": "17530:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 700,
																"name": "lx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 625,
																"src": "17534:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 701,
																"name": "lz",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "17538:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 697,
															"name": "projectiveMul",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "17512:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"
															}
														},
														"id": 702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17512:29:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "17501:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "17501:40:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"id": 705,
																"name": "sy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 612,
																"src": "17578:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 706,
																"name": "dy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 681,
																"src": "17582:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 707,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "17577:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 709,
																"name": "sy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 612,
																"src": "17602:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 710,
																"name": "dy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 681,
																"src": "17606:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 711,
																"name": "py",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "17610:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 712,
																"name": "z1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "17614:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 708,
															"name": "projectiveSub",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "17588:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"
															}
														},
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17588:29:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "17577:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "17577:40:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 716,
														"name": "dx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "17661:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 717,
														"name": "dy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "17667:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17661:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 748,
													"nodeType": "Block",
													"src": "17871:88:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 744,
																	"name": "sz",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "17943:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 745,
																	"name": "dx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "17948:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17943:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 747,
															"nodeType": "ExpressionStatement",
															"src": "17943:7:1"
														}
													]
												},
												"id": 749,
												"nodeType": "IfStatement",
												"src": "17657:302:1",
												"trueBody": {
													"id": 743,
													"nodeType": "Block",
													"src": "17671:194:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 719,
																	"name": "sx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "17743:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 721,
																			"name": "sx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 610,
																			"src": "17755:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 722,
																			"name": "dy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 681,
																			"src": "17759:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 723,
																			"name": "FIELD_SIZE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "17763:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 720,
																		"name": "mulmod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -16,
																		"src": "17748:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17748:26:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17743:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 726,
															"nodeType": "ExpressionStatement",
															"src": "17743:31:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 727,
																	"name": "sy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "17784:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 729,
																			"name": "sy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 612,
																			"src": "17796:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 730,
																			"name": "dx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 645,
																			"src": "17800:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 731,
																			"name": "FIELD_SIZE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "17804:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 728,
																		"name": "mulmod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -16,
																		"src": "17789:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17789:26:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17784:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 734,
															"nodeType": "ExpressionStatement",
															"src": "17784:31:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 735,
																	"name": "sz",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "17825:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 737,
																			"name": "dx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 645,
																			"src": "17837:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 738,
																			"name": "dy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 681,
																			"src": "17841:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 739,
																			"name": "FIELD_SIZE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "17845:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 736,
																		"name": "mulmod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -16,
																		"src": "17830:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17830:26:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17825:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 742,
															"nodeType": "ExpressionStatement",
															"src": "17825:31:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "14372:1594:1",
										"text": "**************************************************************************\n@notice Computes elliptic-curve sum, in projective co-ordinates\n@dev Using projective coordinates avoids costly divisions\n@dev To use this with p and q in affine coordinates, call\n@dev projectiveECAdd(px, py, qx, qy). This will return\n@dev the addition of (px, py, 1) and (qx, qy, 1), in the\n@dev secp256k1 group.\n@dev This can be used to calculate the z which is the inverse to zInv\n@dev in isValidVRFOutput. But consider using a faster\n@dev re-implementation such as ProjectiveECAdd in the golang vrf package.\n@dev This function assumes [px,py,1],[qx,qy,1] are valid projective\ncoordinates of secp256k1 points. That is safe in this contract,\nbecause this method is only used by linearCombination, which checks\npoints are on the curve via ecrecover.**************************************************************************\n@param px The first affine coordinate of the first summand\n@param py The second affine coordinate of the first summand\n@param qx The first affine coordinate of the second summand\n@param qy The second affine coordinate of the second summand\n(px,py) and (qx,qy) must be distinct, valid secp256k1 points.**************************************************************************\nReturn values are projective coordinates of [px,py,1]+[qx,qy,1] as points\non secp256k1, in P²(𝔽ₙ)\n@return sx \n@return sy\n@return sz"
									},
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "projectiveECAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "px",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 751,
												"src": "15994:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15994:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "py",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 751,
												"src": "16006:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16006:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "qx",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 751,
												"src": "16018:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "qy",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 751,
												"src": "16030:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16030:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15993:48:1"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "sx",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 751,
												"src": "16068:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16068:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "sy",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 751,
												"src": "16080:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16080:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "sz",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 751,
												"src": "16092:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16092:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16067:36:1"
									},
									"scope": 1283,
									"src": "15969:1996:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "18364:389:1",
										"statements": [
											{
												"assignments": [
													769
												],
												"declarations": [
													{
														"constant": false,
														"id": 769,
														"mutability": "mutable",
														"name": "x",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 820,
														"src": "18370:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 768,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18370:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 770,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "18370:9:1"
											},
											{
												"assignments": [
													772
												],
												"declarations": [
													{
														"constant": false,
														"id": 772,
														"mutability": "mutable",
														"name": "y",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 820,
														"src": "18385:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 771,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18385:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 773,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "18385:9:1"
											},
											{
												"assignments": [
													775
												],
												"declarations": [
													{
														"constant": false,
														"id": 775,
														"mutability": "mutable",
														"name": "z",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 820,
														"src": "18400:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 774,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18400:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 776,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "18400:9:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"id": 777,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "18416:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 778,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "18419:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 779,
																"name": "z",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "18422:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 780,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "18415:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 782,
																	"name": "p1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "18443:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																"id": 784,
																"indexExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18446:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18443:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 785,
																	"name": "p1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "18450:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																"id": 787,
																"indexExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18453:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18450:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 788,
																	"name": "p2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "18457:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																"id": 790,
																"indexExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18460:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18457:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 791,
																	"name": "p2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "18464:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																"id": 793,
																"indexExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18467:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18464:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 781,
															"name": "projectiveECAdd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "18427:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256,uint256,uint256)"
															}
														},
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18427:43:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256,uint256)"
														}
													},
													"src": "18415:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "18415:55:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 799,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 775,
																		"src": "18491:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 800,
																		"name": "invZ",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "18494:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 801,
																		"name": "FIELD_SIZE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 147,
																		"src": "18500:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 798,
																	"name": "mulmod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -16,
																	"src": "18484:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18484:27:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18515:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "18484:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "696e765a206d75737420626520696e7665727365206f66207a",
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18518:27:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca",
																"typeString": "literal_string \"invZ must be inverse of z\""
															},
															"value": "invZ must be inverse of z"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca",
																"typeString": "literal_string \"invZ must be inverse of z\""
															}
														],
														"id": 797,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18476:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18476:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 807,
												"nodeType": "ExpressionStatement",
												"src": "18476:70:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 809,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "18698:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 810,
																	"name": "invZ",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "18701:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 811,
																	"name": "FIELD_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 147,
																	"src": "18707:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 808,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -16,
																"src": "18691:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18691:27:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 814,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 772,
																	"src": "18727:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 815,
																	"name": "invZ",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "18730:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 816,
																	"name": "FIELD_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 147,
																	"src": "18736:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 813,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -16,
																"src": "18720:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18720:27:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 818,
													"isConstant": false,
													"isInlineArray": true,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "18690:58:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
														"typeString": "uint256[2] memory"
													}
												},
												"functionReturnParameters": 767,
												"id": 819,
												"nodeType": "Return",
												"src": "18683:65:1"
											}
										]
									},
									"documentation": null,
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "affineECAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "p1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 821,
												"src": "18260:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 752,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "18260:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 754,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18268:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "18260:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "p2",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 821,
												"src": "18282:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 756,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "18282:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 758,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 757,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18290:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "18282:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "invZ",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 821,
												"src": "18308:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18254:67:1"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 821,
												"src": "18345:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 763,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "18345:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 765,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18353:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "18345:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18344:19:1"
									},
									"scope": 1283,
									"src": "18234:519:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "19018:898:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 837,
																"name": "lcWitness",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "19100:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19121:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19113:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 838,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19113:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19113:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "19100:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "626164207769746e657373",
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19125:13:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211",
																"typeString": "literal_string \"bad witness\""
															},
															"value": "bad witness"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211",
																"typeString": "literal_string \"bad witness\""
															}
														],
														"id": 836,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "19092:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19092:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "19092:47:1"
											},
											{
												"assignments": [
													847
												],
												"declarations": [
													{
														"constant": false,
														"id": 847,
														"mutability": "mutable",
														"name": "v",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 906,
														"src": "19147:7:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 846,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "19147:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 859,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 848,
																			"name": "p",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 827,
																			"src": "19158:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																				"typeString": "uint256[2] memory"
																			}
																		},
																		"id": 850,
																		"indexExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19160:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "19158:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19165:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "19158:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19170:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "19158:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 855,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "19157:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "3238",
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19180:2:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_28_by_1",
															"typeString": "int_const 28"
														},
														"value": "28"
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "19157:25:1",
													"trueExpression": {
														"argumentTypes": null,
														"hexValue": "3237",
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19175:2:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_27_by_1",
															"typeString": "int_const 27"
														},
														"value": "27"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19147:35:1"
											},
											{
												"assignments": [
													861
												],
												"declarations": [
													{
														"constant": false,
														"id": 861,
														"mutability": "mutable",
														"name": "pseudoHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 906,
														"src": "19219:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 860,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "19219:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 874,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 864,
																"name": "GROUP_ORDER",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 144,
																"src": "19248:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 866,
																			"name": "p",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 827,
																			"src": "19269:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																				"typeString": "uint256[2] memory"
																			}
																		},
																		"id": 868,
																		"indexExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 867,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19271:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "19269:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 869,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 829,
																		"src": "19275:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 870,
																		"name": "GROUP_ORDER",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 144,
																		"src": "19278:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 865,
																	"name": "mulmod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -16,
																	"src": "19262:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19262:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19248:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 863,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "19240:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": {
															"id": 862,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "19240:7:1",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19240:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19219:72:1"
											},
											{
												"assignments": [
													876
												],
												"declarations": [
													{
														"constant": false,
														"id": 876,
														"mutability": "mutable",
														"name": "pseudoSignature",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 906,
														"src": "19310:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 875,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "19310:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 887,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 880,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "19351:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 881,
																		"name": "p",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 827,
																		"src": "19354:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																			"typeString": "uint256[2] memory"
																		}
																	},
																	"id": 883,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19356:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19354:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 884,
																	"name": "GROUP_ORDER",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "19360:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 879,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -16,
																"src": "19344:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19344:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "19336:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": {
															"id": 877,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "19336:7:1",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19336:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19310:63:1"
											},
											{
												"assignments": [
													889
												],
												"declarations": [
													{
														"constant": false,
														"id": 889,
														"mutability": "mutable",
														"name": "computed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 906,
														"src": "19798:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 888,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "19798:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 901,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 891,
															"name": "pseudoHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "19827:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 892,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "19839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 895,
																		"name": "p",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 827,
																		"src": "19850:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																			"typeString": "uint256[2] memory"
																		}
																	},
																	"id": 897,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19852:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19850:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19842:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 893,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "19842:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19842:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 899,
															"name": "pseudoSignature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "19857:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 890,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -6,
														"src": "19817:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19817:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19798:75:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 902,
														"name": "computed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "19888:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 903,
														"name": "lcWitness",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "19900:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19888:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 835,
												"id": 905,
												"nodeType": "Return",
												"src": "19881:28:1"
											}
										]
									},
									"documentation": null,
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyLinearCombinationWithGenerator",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 907,
												"src": "18923:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18923:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "p",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 907,
												"src": "18934:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 824,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "18934:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 826,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18942:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "18934:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 907,
												"src": "18955:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18955:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "lcWitness",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 907,
												"src": "18966:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18966:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18917:67:1"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 907,
												"src": "19012:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 833,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19012:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19011:6:1"
									},
									"scope": 1283,
									"src": "18872:1044:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 976,
										"nodeType": "Block",
										"src": "20625:346:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 937,
																					"name": "cp1Witness",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 917,
																					"src": "20642:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																						"typeString": "uint256[2] memory"
																					}
																				},
																				"id": 939,
																				"indexExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 938,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "20653:1:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "20642:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 940,
																					"name": "sp2Witness",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 927,
																					"src": "20658:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																						"typeString": "uint256[2] memory"
																					}
																				},
																				"id": 942,
																				"indexExpression": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 941,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "20669:1:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "20658:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20642:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 944,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20641:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 945,
																	"name": "FIELD_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 147,
																	"src": "20675:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20641:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20689:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20641:49:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "706f696e747320696e2073756d206d7573742062652064697374696e6374",
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20706:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca",
																"typeString": "literal_string \"points in sum must be distinct\""
															},
															"value": "points in sum must be distinct"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca",
																"typeString": "literal_string \"points in sum must be distinct\""
															}
														],
														"id": 936,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "20633:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20633:106:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "20633:106:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 954,
																	"name": "p1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "20767:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 955,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "20771:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 956,
																	"name": "cp1Witness",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "20774:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																],
																"id": 953,
																"name": "ecmulVerify",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "20755:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (uint256[2] memory,uint256,uint256[2] memory) pure returns (bool)"
																}
															},
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20755:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4669727374206d756c7469706c69636174696f6e20636865636b206661696c6564",
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20787:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_40e788544e29554c975084a69228c0b0b4a1c9c1f6404406ec2b6d9b86d179a9",
																"typeString": "literal_string \"First multiplication check failed\""
															},
															"value": "First multiplication check failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_40e788544e29554c975084a69228c0b0b4a1c9c1f6404406ec2b6d9b86d179a9",
																"typeString": "literal_string \"First multiplication check failed\""
															}
														],
														"id": 952,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "20747:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20747:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "20747:76:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 963,
																	"name": "p2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 923,
																	"src": "20851:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 964,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 919,
																	"src": "20855:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 965,
																	"name": "sp2Witness",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "20858:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																],
																"id": 962,
																"name": "ecmulVerify",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "20839:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (uint256[2] memory,uint256,uint256[2] memory) pure returns (bool)"
																}
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20839:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5365636f6e64206d756c7469706c69636174696f6e20636865636b206661696c6564",
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20871:36:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4bae64ba22ed7fbb776e6032297d511b182dfd08020c93d70fec3cfcc33a5267",
																"typeString": "literal_string \"Second multiplication check failed\""
															},
															"value": "Second multiplication check failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4bae64ba22ed7fbb776e6032297d511b182dfd08020c93d70fec3cfcc33a5267",
																"typeString": "literal_string \"Second multiplication check failed\""
															}
														],
														"id": 961,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "20831:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20831:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 969,
												"nodeType": "ExpressionStatement",
												"src": "20831:77:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 971,
															"name": "cp1Witness",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "20935:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 972,
															"name": "sp2Witness",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "20947:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 973,
															"name": "zInv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "20959:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 970,
														"name": "affineECAdd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "20923:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
															"typeString": "function (uint256[2] memory,uint256[2] memory,uint256) pure returns (uint256[2] memory)"
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20923:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
														"typeString": "uint256[2] memory"
													}
												},
												"functionReturnParameters": 935,
												"id": 975,
												"nodeType": "Return",
												"src": "20916:48:1"
											}
										]
									},
									"documentation": null,
									"id": 977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "linearCombination",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 977,
												"src": "20431:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "p1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 977,
												"src": "20442:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 910,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "20442:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 912,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20450:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "20442:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "cp1Witness",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 977,
												"src": "20464:28:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 914,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "20464:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 916,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20472:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "20464:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 977,
												"src": "20498:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20498:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "p2",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 977,
												"src": "20509:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 920,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "20509:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 922,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20517:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "20509:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "sp2Witness",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 977,
												"src": "20531:28:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 924,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "20531:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 926,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 925,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20539:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "20531:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "zInv",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 977,
												"src": "20565:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20565:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20425:153:1"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 977,
												"src": "20606:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 931,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "20606:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 933,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20614:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "20606:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20605:19:1"
									},
									"scope": 1283,
									"src": "20399:572:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 980,
									"mutability": "constant",
									"name": "SCALAR_FROM_CURVE_POINTS_HASH_PREFIX",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1283,
									"src": "21103:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 978,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "21103:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "32",
										"id": 979,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "21159:1:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "22066:170:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1008,
																			"name": "SCALAR_FROM_CURVE_POINTS_HASH_PREFIX",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "22125:36:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 1009,
																			"name": "hash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 984,
																			"src": "22198:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																				"typeString": "uint256[2] memory"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 1010,
																			"name": "pk",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 988,
																			"src": "22204:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																				"typeString": "uint256[2] memory"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 1011,
																			"name": "gamma",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 992,
																			"src": "22208:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																				"typeString": "uint256[2] memory"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 1012,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 998,
																			"src": "22215:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																				"typeString": "uint256[2] memory"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 1013,
																			"name": "uWitness",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 994,
																			"src": "22218:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																				"typeString": "uint256[2] memory"
																			},
																			{
																				"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																				"typeString": "uint256[2] memory"
																			},
																			{
																				"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																				"typeString": "uint256[2] memory"
																			},
																			{
																				"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																				"typeString": "uint256[2] memory"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1006,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -1,
																			"src": "22108:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "22108:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22108:119:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1005,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -8,
																"src": "22098:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22098:130:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "22081:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1003,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22081:7:1",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22081:148:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1002,
												"id": 1017,
												"nodeType": "Return",
												"src": "22074:155:1"
											}
										]
									},
									"documentation": null,
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "scalarFromCurvePoints",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "hash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1019,
												"src": "21914:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 981,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "21914:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 983,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 982,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21922:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "21914:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "pk",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1019,
												"src": "21938:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 985,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "21938:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 987,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21946:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "21938:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "gamma",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1019,
												"src": "21960:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 989,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "21960:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 991,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21968:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "21960:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "uWitness",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1019,
												"src": "21989:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21989:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1019,
												"src": "22007:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 995,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "22007:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 997,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22015:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "22007:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21908:119:1"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1019,
												"src": "22055:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22055:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22054:11:1"
									},
									"scope": 1283,
									"src": "21878:358:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "23054:1286:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1050,
																	"name": "pk",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1023,
																	"src": "23080:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																],
																"id": 1049,
																"name": "isOnCurve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "23070:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (uint256[2] memory) pure returns (bool)"
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23070:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7075626c6963206b6579206973206e6f74206f6e206375727665",
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23085:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c",
																"typeString": "literal_string \"public key is not on curve\""
															},
															"value": "public key is not on curve"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c",
																"typeString": "literal_string \"public key is not on curve\""
															}
														],
														"id": 1048,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "23062:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23062:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1054,
												"nodeType": "ExpressionStatement",
												"src": "23062:52:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1057,
																	"name": "gamma",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "23140:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																],
																"id": 1056,
																"name": "isOnCurve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "23130:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (uint256[2] memory) pure returns (bool)"
																}
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23130:16:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "67616d6d61206973206e6f74206f6e206375727665",
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23148:23:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c",
																"typeString": "literal_string \"gamma is not on curve\""
															},
															"value": "gamma is not on curve"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c",
																"typeString": "literal_string \"gamma is not on curve\""
															}
														],
														"id": 1055,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "23122:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23122:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1061,
												"nodeType": "ExpressionStatement",
												"src": "23122:50:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1064,
																	"name": "cGammaWitness",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1039,
																	"src": "23198:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																],
																"id": 1063,
																"name": "isOnCurve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "23188:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (uint256[2] memory) pure returns (bool)"
																}
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23188:24:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6347616d6d615769746e657373206973206e6f74206f6e206375727665",
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23214:31:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b",
																"typeString": "literal_string \"cGammaWitness is not on curve\""
															},
															"value": "cGammaWitness is not on curve"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b",
																"typeString": "literal_string \"cGammaWitness is not on curve\""
															}
														],
														"id": 1062,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "23180:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23180:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "23180:66:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1071,
																	"name": "sHashWitness",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1043,
																	"src": "23272:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																],
																"id": 1070,
																"name": "isOnCurve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "23262:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (uint256[2] memory) pure returns (bool)"
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23262:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "73486173685769746e657373206973206e6f74206f6e206375727665",
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23287:30:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f",
																"typeString": "literal_string \"sHashWitness is not on curve\""
															},
															"value": "sHashWitness is not on curve"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f",
																"typeString": "literal_string \"sHashWitness is not on curve\""
															}
														],
														"id": 1069,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "23254:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23254:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "23254:64:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1078,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "23757:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1079,
																	"name": "pk",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1023,
																	"src": "23760:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1080,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "23764:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1081,
																	"name": "uWitness",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1035,
																	"src": "23767:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1077,
																"name": "verifyLinearCombinationWithGenerator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "23720:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (uint256,uint256[2] memory,uint256,address) pure returns (bool)"
																}
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23720:56:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6164647228632a706b2b732a6729e289a05f755769746e657373",
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23786:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0f7ac8cec68afc47fd4e44d8cd3aa5d9522e42bf75327b41295f78f22758e02d",
																"typeString": "literal_string \"addr(c*pk+s*g)≠_uWitness\""
															},
															"value": "addr(c*pk+s*g)≠_uWitness"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0f7ac8cec68afc47fd4e44d8cd3aa5d9522e42bf75327b41295f78f22758e02d",
																"typeString": "literal_string \"addr(c*pk+s*g)≠_uWitness\""
															}
														],
														"id": 1076,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "23703:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23703:119:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "23703:119:1"
											},
											{
												"assignments": [
													1091
												],
												"declarations": [
													{
														"constant": false,
														"id": 1091,
														"mutability": "mutable",
														"name": "hash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1130,
														"src": "23917:22:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2]"
														},
														"typeName": {
															"baseType": {
																"id": 1089,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "23917:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1090,
															"length": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23925:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "ArrayTypeName",
															"src": "23917:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
																"typeString": "uint256[2]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1096,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1093,
															"name": "pk",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "23954:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1094,
															"name": "seed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "23958:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1092,
														"name": "hashToCurve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "23942:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
															"typeString": "function (uint256[2] memory,uint256) view returns (uint256[2] memory)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23942:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
														"typeString": "uint256[2] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23917:46:1"
											},
											{
												"assignments": [
													1102
												],
												"declarations": [
													{
														"constant": false,
														"id": 1102,
														"mutability": "mutable",
														"name": "v",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1130,
														"src": "24055:19:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2]"
														},
														"typeName": {
															"baseType": {
																"id": 1100,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "24055:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1101,
															"length": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24063:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "ArrayTypeName",
															"src": "24055:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
																"typeString": "uint256[2]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1112,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1104,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "24104:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1105,
															"name": "gamma",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "24107:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1106,
															"name": "cGammaWitness",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "24114:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1107,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "24129:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1108,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "24132:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1109,
															"name": "sHashWitness",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "24138:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1110,
															"name": "zInv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "24152:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1103,
														"name": "linearCombination",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "24077:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
															"typeString": "function (uint256,uint256[2] memory,uint256[2] memory,uint256,uint256[2] memory,uint256[2] memory,uint256) pure returns (uint256[2] memory)"
														}
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24077:80:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
														"typeString": "uint256[2] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24055:102:1"
											},
											{
												"assignments": [
													1114
												],
												"declarations": [
													{
														"constant": false,
														"id": 1114,
														"mutability": "mutable",
														"name": "derivedC",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1130,
														"src": "24216:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1113,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24216:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1122,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1116,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "24257:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1117,
															"name": "pk",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "24263:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1118,
															"name": "gamma",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "24267:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1119,
															"name": "uWitness",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "24274:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1120,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "24284:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															}
														],
														"id": 1115,
														"name": "scalarFromCurvePoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "24235:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_address_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256[2] memory,uint256[2] memory,uint256[2] memory,address,uint256[2] memory) pure returns (uint256)"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24235:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24216:70:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1124,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1029,
																"src": "24302:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1125,
																"name": "derivedC",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1114,
																"src": "24307:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24302:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "696e76616c69642070726f6f66",
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24317:15:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624",
																"typeString": "literal_string \"invalid proof\""
															},
															"value": "invalid proof"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624",
																"typeString": "literal_string \"invalid proof\""
															}
														],
														"id": 1123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "24294:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24294:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "24294:39:1"
											}
										]
									},
									"documentation": null,
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyVRFProof",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "pk",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1131,
												"src": "22848:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 1020,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "22848:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1022,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 1021,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22856:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "22848:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "gamma",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1131,
												"src": "22870:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 1024,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "22870:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1026,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22878:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "22870:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1131,
												"src": "22895:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22895:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1131,
												"src": "22906:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22906:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "seed",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1131,
												"src": "22921:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22921:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "uWitness",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1131,
												"src": "22935:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22935:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "cGammaWitness",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1131,
												"src": "22953:31:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 1036,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "22953:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1038,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22961:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "22953:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "sHashWitness",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1131,
												"src": "22990:30:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 1040,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "22990:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1042,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 1041,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22998:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "22990:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "zInv",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1131,
												"src": "23022:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23022:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22842:193:1"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23054:0:1"
									},
									"scope": 1283,
									"src": "22819:1521:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1134,
									"mutability": "constant",
									"name": "VRF_RANDOM_OUTPUT_HASH_PREFIX",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1283,
									"src": "24470:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1132,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24470:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "33",
										"id": 1133,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "24519:1:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "e911439c",
									"id": 1155,
									"mutability": "constant",
									"name": "PROOF_LENGTH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1283,
									"src": "24594:351:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1135,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "24594:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_416_by_1",
											"typeString": "int_const 416"
										},
										"id": 1154,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"commonType": {
												"typeIdentifier": "t_rational_384_by_1",
												"typeString": "int_const 384"
											},
											"id": 1152,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"argumentTypes": null,
												"commonType": {
													"typeIdentifier": "t_rational_320_by_1",
													"typeString": "int_const 320"
												},
												"id": 1150,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_256_by_1",
														"typeString": "int_const 256"
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_224_by_1",
															"typeString": "int_const 224"
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_224_by_1",
																"typeString": "int_const 224"
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_192_by_1",
																	"typeString": "int_const 192"
																},
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_160_by_1",
																		"typeString": "int_const 160"
																	},
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"id": 1138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"hexValue": "3634",
																			"id": 1136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24630:2:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "3634",
																			"id": 1137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24675:2:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "24630:47:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3332",
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24693:2:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	"src": "24630:65:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_160_by_1",
																		"typeString": "int_const 160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 1141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24707:2:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "24630:79:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_192_by_1",
																	"typeString": "int_const 192"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3332",
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24721:2:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_32_by_1",
																	"typeString": "int_const 32"
																},
																"value": "32"
															},
															"src": "24630:93:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_224_by_1",
																"typeString": "int_const 224"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24738:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "24630:109:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_224_by_1",
															"typeString": "int_const 224"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 1147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24818:2:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "24630:190:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_256_by_1",
														"typeString": "int_const 256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "+",
												"rightExpression": {
													"argumentTypes": null,
													"hexValue": "3634",
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "24892:2:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													},
													"value": "64"
												},
												"src": "24630:264:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_320_by_1",
													"typeString": "int_const 320"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "+",
											"rightExpression": {
												"argumentTypes": null,
												"hexValue": "3634",
												"id": 1151,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "24918:2:1",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_64_by_1",
													"typeString": "int_const 64"
												},
												"value": "64"
											},
											"src": "24630:290:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_384_by_1",
												"typeString": "int_const 384"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "3332",
											"id": 1153,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "24943:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_32_by_1",
												"typeString": "int_const 32"
											},
											"value": "32"
										},
										"src": "24630:315:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_416_by_1",
											"typeString": "int_const 416"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1281,
										"nodeType": "Block",
										"src": "25645:901:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1163,
																	"name": "proof",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "25661:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "25661:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1165,
																"name": "PROOF_LENGTH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "25677:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25661:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "77726f6e672070726f6f66206c656e677468",
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25691:20:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_869e73f748a03d1463bb7b47e41dc9f2989934ca6019d0a0e3b068f9645d9228",
																"typeString": "literal_string \"wrong proof length\""
															},
															"value": "wrong proof length"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_869e73f748a03d1463bb7b47e41dc9f2989934ca6019d0a0e3b068f9645d9228",
																"typeString": "literal_string \"wrong proof length\""
															}
														],
														"id": 1162,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "25653:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25653:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1169,
												"nodeType": "ExpressionStatement",
												"src": "25653:59:1"
											},
											{
												"assignments": [
													1175
												],
												"declarations": [
													{
														"constant": false,
														"id": 1175,
														"mutability": "mutable",
														"name": "pk",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1281,
														"src": "25721:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2]"
														},
														"typeName": {
															"baseType": {
																"id": 1173,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "25721:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1174,
															"length": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25729:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "ArrayTypeName",
															"src": "25721:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
																"typeString": "uint256[2]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1176,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "25721:20:1"
											},
											{
												"assignments": [
													1182
												],
												"declarations": [
													{
														"constant": false,
														"id": 1182,
														"mutability": "mutable",
														"name": "gamma",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1281,
														"src": "25794:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2]"
														},
														"typeName": {
															"baseType": {
																"id": 1180,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "25794:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1181,
															"length": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25802:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "ArrayTypeName",
															"src": "25794:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
																"typeString": "uint256[2]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1183,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "25794:23:1"
											},
											{
												"assignments": [
													1189
												],
												"declarations": [
													{
														"constant": false,
														"id": 1189,
														"mutability": "mutable",
														"name": "cSSeed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1281,
														"src": "25903:24:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
															"typeString": "uint256[3]"
														},
														"typeName": {
															"baseType": {
																"id": 1187,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "25903:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1188,
															"length": {
																"argumentTypes": null,
																"hexValue": "33",
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25911:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"nodeType": "ArrayTypeName",
															"src": "25903:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
																"typeString": "uint256[3]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1190,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "25903:24:1"
											},
											{
												"assignments": [
													1192
												],
												"declarations": [
													{
														"constant": false,
														"id": 1192,
														"mutability": "mutable",
														"name": "uWitness",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1281,
														"src": "25935:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1191,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25935:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1193,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "25935:16:1"
											},
											{
												"assignments": [
													1199
												],
												"declarations": [
													{
														"constant": false,
														"id": 1199,
														"mutability": "mutable",
														"name": "cGammaWitness",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1281,
														"src": "25959:31:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2]"
														},
														"typeName": {
															"baseType": {
																"id": 1197,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "25959:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1198,
															"length": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25967:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "ArrayTypeName",
															"src": "25959:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
																"typeString": "uint256[2]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1200,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "25959:31:1"
											},
											{
												"assignments": [
													1206
												],
												"declarations": [
													{
														"constant": false,
														"id": 1206,
														"mutability": "mutable",
														"name": "sHashWitness",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1281,
														"src": "25998:30:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2]"
														},
														"typeName": {
															"baseType": {
																"id": 1204,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "25998:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1205,
															"length": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26006:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "ArrayTypeName",
															"src": "25998:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
																"typeString": "uint256[2]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1207,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "25998:30:1"
											},
											{
												"assignments": [
													1209
												],
												"declarations": [
													{
														"constant": false,
														"id": 1209,
														"mutability": "mutable",
														"name": "zInv",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1281,
														"src": "26036:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1208,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26036:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1210,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "26036:12:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"id": 1211,
																"name": "pk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "26057:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 1212,
																"name": "gamma",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "26061:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 1213,
																"name": "cSSeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "26068:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
																	"typeString": "uint256[3] memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 1214,
																"name": "uWitness",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1192,
																"src": "26076:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"argumentTypes": null,
																"id": 1215,
																"name": "cGammaWitness",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1199,
																"src": "26086:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 1216,
																"name": "sHashWitness",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1206,
																"src": "26101:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															},
															{
																"argumentTypes": null,
																"id": 1217,
																"name": "zInv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1209,
																"src": "26115:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1218,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "26056:64:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$_t_address_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$",
															"typeString": "tuple(uint256[2] memory,uint256[2] memory,uint256[3] memory,address,uint256[2] memory,uint256[2] memory,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1221,
																"name": "proof",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1157,
																"src": "26143:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "26151:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1222,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "26151:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1225,
																		"indexExpression": {
																			"argumentTypes": null,
																			"hexValue": "32",
																			"id": 1224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26159:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "26151:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_array$_t_uint256_$2_memory_ptr_$",
																			"typeString": "type(uint256[2] memory)"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "26163:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1226,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "26163:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1229,
																		"indexExpression": {
																			"argumentTypes": null,
																			"hexValue": "32",
																			"id": 1228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26171:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "26163:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_array$_t_uint256_$2_memory_ptr_$",
																			"typeString": "type(uint256[2] memory)"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "26175:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1230,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "26175:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1233,
																		"indexExpression": {
																			"argumentTypes": null,
																			"hexValue": "33",
																			"id": 1232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26183:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "26175:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_array$_t_uint256_$3_memory_ptr_$",
																			"typeString": "type(uint256[3] memory)"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "26187:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1234,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "26187:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "26196:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1236,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "26196:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1239,
																		"indexExpression": {
																			"argumentTypes": null,
																			"hexValue": "32",
																			"id": 1238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26204:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "26196:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_array$_t_uint256_$2_memory_ptr_$",
																			"typeString": "type(uint256[2] memory)"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "26224:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1240,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "26224:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1243,
																		"indexExpression": {
																			"argumentTypes": null,
																			"hexValue": "32",
																			"id": 1242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26232:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "26224:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_array$_t_uint256_$2_memory_ptr_$",
																			"typeString": "type(uint256[2] memory)"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "26236:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1244,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "26236:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	}
																],
																"id": 1246,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "26150:94:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_type$_t_array$_t_uint256_$2_memory_ptr_$_$_t_type$_t_array$_t_uint256_$2_memory_ptr_$_$_t_type$_t_array$_t_uint256_$3_memory_ptr_$_$_t_type$_t_address_$_$_t_type$_t_array$_t_uint256_$2_memory_ptr_$_$_t_type$_t_array$_t_uint256_$2_memory_ptr_$_$_t_type$_t_uint256_$_$",
																	"typeString": "tuple(type(uint256[2] memory),type(uint256[2] memory),type(uint256[3] memory),type(address),type(uint256[2] memory),type(uint256[2] memory),type(uint256))"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_tuple$_t_type$_t_array$_t_uint256_$2_memory_ptr_$_$_t_type$_t_array$_t_uint256_$2_memory_ptr_$_$_t_type$_t_array$_t_uint256_$3_memory_ptr_$_$_t_type$_t_address_$_$_t_type$_t_array$_t_uint256_$2_memory_ptr_$_$_t_type$_t_array$_t_uint256_$2_memory_ptr_$_$_t_type$_t_uint256_$_$",
																	"typeString": "tuple(type(uint256[2] memory),type(uint256[2] memory),type(uint256[3] memory),type(address),type(uint256[2] memory),type(uint256[2] memory),type(uint256))"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1219,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -1,
																"src": "26123:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "decode",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "26123:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26123:122:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$_t_address_payable_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$",
															"typeString": "tuple(uint256[2] memory,uint256[2] memory,uint256[3] memory,address payable,uint256[2] memory,uint256[2] memory,uint256)"
														}
													},
													"src": "26056:189:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "26056:189:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1251,
															"name": "pk",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "26277:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1252,
															"name": "gamma",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "26289:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1253,
																"name": "cSSeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "26304:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
																	"typeString": "uint256[3] memory"
																}
															},
															"id": 1255,
															"indexExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26311:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26304:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1256,
																"name": "cSSeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "26328:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
																	"typeString": "uint256[3] memory"
																}
															},
															"id": 1258,
															"indexExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26335:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26328:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1259,
																"name": "cSSeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "26352:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
																	"typeString": "uint256[3] memory"
																}
															},
															"id": 1261,
															"indexExpression": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26359:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26352:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1262,
															"name": "uWitness",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "26379:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1263,
															"name": "cGammaWitness",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "26397:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1264,
															"name": "sHashWitness",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "26420:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1265,
															"name": "zInv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "26442:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																"typeString": "uint256[2] memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1250,
														"name": "verifyVRFProof",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "26253:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (uint256[2] memory,uint256[2] memory,uint256,uint256,uint256,address,uint256[2] memory,uint256[2] memory,uint256) view"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26253:201:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1267,
												"nodeType": "ExpressionStatement",
												"src": "26253:201:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1268,
														"name": "output",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "26462:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1274,
																				"name": "VRF_RANDOM_OUTPUT_HASH_PREFIX",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1134,
																				"src": "26500:29:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 1275,
																				"name": "gamma",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1182,
																				"src": "26531:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																					"typeString": "uint256[2] memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																					"typeString": "uint256[2] memory"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1272,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "26489:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "26489:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "26489:48:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1271,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -8,
																	"src": "26479:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26479:59:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26471:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1269,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "26471:7:1",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26471:68:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26462:77:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "26462:77:1"
											}
										]
									},
									"documentation": null,
									"id": 1282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "randomValueFromVRFProof",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "proof",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1282,
												"src": "25582:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1156,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25582:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25581:20:1"
									},
									"returnParameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "output",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1282,
												"src": "25629:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25629:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25628:16:1"
									},
									"scope": 1283,
									"src": "25549:997:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1284,
							"src": "7137:19411:1"
						}
					],
					"src": "0:26548:1"
				},
				"id": 1
			},
			"Users/leilei/Downloads/VRFCoordinator/VRFConsumerBase.sol": {
				"ast": {
					"absolutePath": "Users/leilei/Downloads/VRFCoordinator/VRFConsumerBase.sol",
					"exportedSymbols": {
						"VRFConsumerBase": [
							1406
						]
					},
					"id": 1407,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1285,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"absolutePath": "Users/leilei/Downloads/VRFCoordinator/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 1287,
							"nodeType": "ImportDirective",
							"scope": 1407,
							"sourceUnit": 139,
							"src": "25:64:2",
							"symbolAliases": [
								{
									"foreign": {
										"argumentTypes": null,
										"id": 1286,
										"name": "SafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": null,
										"src": "34:8:2",
										"typeDescriptions": {
											"typeIdentifier": null,
											"typeString": null
										}
									},
									"local": "SafeMath_Chainlink"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "Users/leilei/Downloads/VRFCoordinator/interfaces/LinkTokenInterface.sol",
							"file": "./interfaces/LinkTokenInterface.sol",
							"id": 1288,
							"nodeType": "ImportDirective",
							"scope": 1407,
							"sourceUnit": 2244,
							"src": "91:45:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol",
							"file": "./VRFRequestIDBase.sol",
							"id": 1289,
							"nodeType": "ImportDirective",
							"scope": 1407,
							"sourceUnit": 2139,
							"src": "138:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1291,
										"name": "VRFRequestIDBase",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2138,
										"src": "4071:16:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_VRFRequestIDBase_$2138",
											"typeString": "contract VRFRequestIDBase"
										}
									},
									"id": 1292,
									"nodeType": "InheritanceSpecifier",
									"src": "4071:16:2"
								}
							],
							"contractDependencies": [
								2138
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1290,
								"nodeType": "StructuredDocumentation",
								"src": "172:3861:2",
								"text": "****************************************************************************\n@notice Interface for contracts using VRF randomness\n*****************************************************************************\n@dev PURPOSE\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n@dev to Vera the verifier in such a way that Vera can be sure he's not\n@dev making his output up to suit himself. Reggie provides Vera a public key\n@dev to which he knows the secret key. Each time Vera provides a seed to\n@dev Reggie, he gives back a value which is computed completely\n@dev deterministically from the seed and the secret key.\n * @dev Reggie provides a proof by which Vera can verify that the output was\n@dev correctly computed once Reggie tells it to her, but without that proof,\n@dev the output is indistinguishable to her from a uniform random sample\n@dev from the output space.\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n@dev to talk to Vera the verifier about the work Reggie is doing, to provide\n@dev simple access to a verifiable source of randomness.\n*****************************************************************************\n@dev USAGE\n * @dev Calling contracts must inherit from VRFConsumerInterface, and can\n@dev initialize VRFConsumerInterface's attributes in their constructor as\n@dev shown:\n * @dev   contract VRFConsumer {\n@dev     constuctor(<other arguments>, address _vrfCoordinator, address _link)\n@dev       VRFConsumerBase(_vrfCoordinator, _link) public {\n@dev         <initialization with other arguments goes here>\n@dev       }\n@dev   }\n * @dev The oracle will have given you an ID for the VRF keypair they have\n@dev committed to (let's call it keyHash), and have told you the minimum LINK\n@dev price for VRF service. Make sure your contract has sufficient LINK, and\n@dev call requestRandomness(keyHash, fee, seed), where seed is the input you\n@dev want to generate randomness from.\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n@dev to your request, it will call your contract's fulfillRandomness method.\n * @dev The randomness argument to fulfillRandomness is the actual random value\n@dev generated from your seed.\n * @dev The requestId argument is generated from the keyHash and the seed by\n@dev makeRequestId(keyHash, seed). If your contract could have concurrent\n@dev requests open, you can use the requestId to track which seed is\n@dev associated with which randomness. See VRFRequestIDBase.sol for more\n@dev details.\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n@dev differ. (Which is critical to making unpredictable randomness! See the\n@dev next section.)\n * *****************************************************************************\n@dev SECURITY CONSIDERATIONS\n * @dev Since the ultimate input to the VRF is mixed with the block hash of the\n@dev block in which the request is made, user-provided seeds have no impact\n@dev on its economic security properties. They are only included for API\n@dev compatability with previous versions of this contract.\n * @dev Since the block hash of the block which contains the requestRandomness()\n@dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n@dev miner could, in principle, fork the blockchain to evict the block\n@dev containing the request, forcing the request to be included in a\n@dev different block with a different hash, and therefore a different input\n@dev to the VRF. However, such an attack would incur a substantial economic\n@dev cost. This cost scales with the number of blocks the VRF oracle waits\n@dev until it calls fulfillRandomness()."
							},
							"fullyImplemented": false,
							"id": 1406,
							"linearizedBaseContracts": [
								1406,
								2138
							],
							"name": "VRFConsumerBase",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1295,
									"libraryName": {
										"contractScope": null,
										"id": 1293,
										"name": "SafeMath_Chainlink",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 138,
										"src": "4099:18:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$138",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "4093:37:2",
									"typeName": {
										"id": 1294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4122:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": null,
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "4134:496:2",
										"text": "@notice fulfillRandomness handles the VRF response. Your contract must\n@notice implement it.\n   * @dev The VRFCoordinator expects a calling contract to have a method with\n@dev this signature, and will trigger it once it has verified the proof\n@dev associated with the randomness (It is triggered via a call to\n@dev rawFulfillRandomness, below.)\n   * @param requestId The Id initially returned by requestRandomness\n@param randomness the VRF output"
									},
									"id": 1303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fulfillRandomness",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "requestId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1303,
												"src": "4660:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1297,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4660:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "randomness",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1303,
												"src": "4679:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4679:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4659:39:2"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4719:0:2"
									},
									"scope": 1406,
									"src": "4633:87:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1357,
										"nodeType": "Block",
										"src": "5766:835:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1318,
															"name": "vrfCoordinator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "5793:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1319,
															"name": "_fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "5809:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1322,
																	"name": "_keyHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1306,
																	"src": "5826:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1323,
																	"name": "_seed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1310,
																	"src": "5836:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1320,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "5815:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5815:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5815:27:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1315,
															"name": "LINK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "5772:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_LinkTokenInterface_$2243",
																"typeString": "contract LinkTokenInterface"
															}
														},
														"id": 1317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferAndCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2231,
														"src": "5772:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (address,uint256,bytes memory) external returns (bool)"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5772:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "5772:71:2"
											},
											{
												"assignments": [
													1328
												],
												"declarations": [
													{
														"constant": false,
														"id": 1328,
														"mutability": "mutable",
														"name": "vRFSeed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1357,
														"src": "6074:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1327,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6074:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1340,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1330,
															"name": "_keyHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "6110:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1331,
															"name": "_seed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "6120:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1334,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "6135:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_VRFConsumerBase_$1406",
																		"typeString": "contract VRFConsumerBase"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_VRFConsumerBase_$1406",
																		"typeString": "contract VRFConsumerBase"
																	}
																],
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6127:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1332,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6127:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6127:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1336,
																"name": "nonces",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1366,
																"src": "6142:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																	"typeString": "mapping(bytes32 => uint256)"
																}
															},
															"id": 1338,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1337,
																"name": "_keyHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1306,
																"src": "6149:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6142:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1329,
														"name": "makeVRFInputSeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2118,
														"src": "6093:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bytes32,uint256,address,uint256) pure returns (uint256)"
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6093:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6074:85:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1341,
															"name": "nonces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "6509:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1343,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1342,
															"name": "_keyHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "6516:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6509:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31",
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6549:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1344,
																	"name": "nonces",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1366,
																	"src": "6528:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																		"typeString": "mapping(bytes32 => uint256)"
																	}
																},
																"id": 1346,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1345,
																	"name": "_keyHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1306,
																	"src": "6535:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6528:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 28,
															"src": "6528:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6528:23:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6509:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1351,
												"nodeType": "ExpressionStatement",
												"src": "6509:42:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1353,
															"name": "_keyHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "6578:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1354,
															"name": "vRFSeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "6588:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1352,
														"name": "makeRequestId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2137,
														"src": "6564:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,uint256) pure returns (bytes32)"
														}
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6564:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1314,
												"id": 1356,
												"nodeType": "Return",
												"src": "6557:39:2"
											}
										]
									},
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "4724:924:2",
										"text": "@notice requestRandomness initiates a request for VRF output given _seed\n   * @dev See \"SECURITY CONSIDERATIONS\" above for more information on _seed.\n   * @dev The fulfillRandomness method receives the output, once it's provided\n@dev by the Oracle, and verified by the vrfCoordinator.\n   * @dev The _keyHash must already be registered with the VRFCoordinator, and\n@dev the _fee must exceed the fee specified during registration of the\n@dev _keyHash.\n   * @param _keyHash ID of public key against which randomness is generated\n@param _fee The amount of LINK to send with the request\n@param _seed seed mixed into the input of the VRF\n   * @return requestId unique ID for this request\n   * @dev The returned requestId can be used to distinguish responses to *\n@dev concurrent requests. It is passed as the first argument to\n@dev fulfillRandomness."
									},
									"functionSelector": "dc6cfe10",
									"id": 1358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requestRandomness",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "_keyHash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1358,
												"src": "5678:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1305,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5678:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "_fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1358,
												"src": "5696:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "_seed",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1358,
												"src": "5710:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5710:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5677:47:2"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "requestId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1358,
												"src": "5745:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5745:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5744:19:2"
									},
									"scope": 1406,
									"src": "5651:950:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1360,
									"mutability": "immutable",
									"name": "LINK",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1406,
									"src": "6605:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_LinkTokenInterface_$2243",
										"typeString": "contract LinkTokenInterface"
									},
									"typeName": {
										"contractScope": null,
										"id": 1359,
										"name": "LinkTokenInterface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2243,
										"src": "6605:18:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_LinkTokenInterface_$2243",
											"typeString": "contract LinkTokenInterface"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1362,
									"mutability": "immutable",
									"name": "vrfCoordinator",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1406,
									"src": "6651:40:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1361,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6651:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "9e317f12",
									"id": 1366,
									"mutability": "mutable",
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1406,
									"src": "6831:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
										"typeString": "mapping(bytes32 => uint256)"
									},
									"typeName": {
										"id": 1365,
										"keyType": {
											"id": 1363,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "6839:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "6831:53:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
											"typeString": "mapping(bytes32 => uint256)"
										},
										"valueType": {
											"id": 1364,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6864:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "6961:81:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1373,
														"name": "vrfCoordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "6967:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1374,
														"name": "_vrfCoordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1368,
														"src": "6984:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6967:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1376,
												"nodeType": "ExpressionStatement",
												"src": "6967:32:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1377,
														"name": "LINK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "7005:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_LinkTokenInterface_$2243",
															"typeString": "contract LinkTokenInterface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1379,
																"name": "_link",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1370,
																"src": "7031:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1378,
															"name": "LinkTokenInterface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2243,
															"src": "7012:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LinkTokenInterface_$2243_$",
																"typeString": "type(contract LinkTokenInterface)"
															}
														},
														"id": 1380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7012:25:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_LinkTokenInterface_$2243",
															"typeString": "contract LinkTokenInterface"
														}
													},
													"src": "7005:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_LinkTokenInterface_$2243",
														"typeString": "contract LinkTokenInterface"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "7005:32:2"
											}
										]
									},
									"documentation": null,
									"id": 1384,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "_vrfCoordinator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1384,
												"src": "6914:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6914:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "_link",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1384,
												"src": "6939:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6939:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6913:40:2"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6961:0:2"
									},
									"scope": 1406,
									"src": "6902:140:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1404,
										"nodeType": "Block",
										"src": "7315:129:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1392,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "7329:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "7329:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1394,
																"name": "vrfCoordinator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "7343:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7329:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c",
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7359:33:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445",
																"typeString": "literal_string \"Only VRFCoordinator can fulfill\""
															},
															"value": "Only VRFCoordinator can fulfill"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445",
																"typeString": "literal_string \"Only VRFCoordinator can fulfill\""
															}
														],
														"id": 1391,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7321:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7321:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1398,
												"nodeType": "ExpressionStatement",
												"src": "7321:72:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1400,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "7417:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1401,
															"name": "randomness",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "7428:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1399,
														"name": "fulfillRandomness",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "7399:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256)"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7399:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1403,
												"nodeType": "ExpressionStatement",
												"src": "7399:40:2"
											}
										]
									},
									"documentation": null,
									"functionSelector": "94985ddd",
									"id": 1405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rawFulfillRandomness",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "requestId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1405,
												"src": "7267:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1385,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7267:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "randomness",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1405,
												"src": "7286:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7286:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7266:39:2"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7315:0:2"
									},
									"scope": 1406,
									"src": "7237:207:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1407,
							"src": "4034:3412:2"
						}
					],
					"src": "0:7446:2"
				},
				"id": 2
			},
			"Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol": {
				"ast": {
					"absolutePath": "Users/leilei/Downloads/VRFCoordinator/VRFCoordinator.sol",
					"exportedSymbols": {
						"VRFCoordinator": [
							2088
						]
					},
					"id": 2089,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1408,
							"literals": [
								"solidity",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:3"
						},
						{
							"absolutePath": "Users/leilei/Downloads/VRFCoordinator/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 1409,
							"nodeType": "ImportDirective",
							"scope": 2089,
							"sourceUnit": 139,
							"src": "24:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Users/leilei/Downloads/VRFCoordinator/interfaces/LinkTokenInterface.sol",
							"file": "./interfaces/LinkTokenInterface.sol",
							"id": 1410,
							"nodeType": "ImportDirective",
							"scope": 2089,
							"sourceUnit": 2244,
							"src": "50:45:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Users/leilei/Downloads/VRFCoordinator/interfaces/BlockHashStoreInterface.sol",
							"file": "./interfaces/BlockHashStoreInterface.sol",
							"id": 1411,
							"nodeType": "ImportDirective",
							"scope": 2089,
							"sourceUnit": 2149,
							"src": "96:50:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Users/leilei/Downloads/VRFCoordinator/VRF.sol",
							"file": "./VRF.sol",
							"id": 1412,
							"nodeType": "ImportDirective",
							"scope": 2089,
							"sourceUnit": 1284,
							"src": "148:19:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol",
							"file": "./VRFRequestIDBase.sol",
							"id": 1413,
							"nodeType": "ImportDirective",
							"scope": 2089,
							"sourceUnit": 2139,
							"src": "168:32:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Users/leilei/Downloads/VRFCoordinator/VRFConsumerBase.sol",
							"file": "./VRFConsumerBase.sol",
							"id": 1414,
							"nodeType": "ImportDirective",
							"scope": 2089,
							"sourceUnit": 1407,
							"src": "201:31:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1416,
										"name": "VRF",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1283,
										"src": "381:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_VRF_$1283",
											"typeString": "contract VRF"
										}
									},
									"id": 1417,
									"nodeType": "InheritanceSpecifier",
									"src": "381:3:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1418,
										"name": "VRFRequestIDBase",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2138,
										"src": "386:16:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_VRFRequestIDBase_$2138",
											"typeString": "contract VRFRequestIDBase"
										}
									},
									"id": 1419,
									"nodeType": "InheritanceSpecifier",
									"src": "386:16:3"
								}
							],
							"contractDependencies": [
								1283,
								2138
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1415,
								"nodeType": "StructuredDocumentation",
								"src": "234:119:3",
								"text": "@title VRFCoordinator coordinates on-chain verifiable-randomness requests\n@title with off-chain responses"
							},
							"fullyImplemented": true,
							"id": 2088,
							"linearizedBaseContracts": [
								2088,
								2138,
								1283
							],
							"name": "VRFCoordinator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1422,
									"libraryName": {
										"contractScope": null,
										"id": 1420,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 138,
										"src": "414:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$138",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "408:27:3",
									"typeName": {
										"id": 1421,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "427:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1424,
									"mutability": "mutable",
									"name": "LINK",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2088,
									"src": "439:32:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_LinkTokenInterface_$2243",
										"typeString": "contract LinkTokenInterface"
									},
									"typeName": {
										"contractScope": null,
										"id": 1423,
										"name": "LinkTokenInterface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2243,
										"src": "439:18:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_LinkTokenInterface_$2243",
											"typeString": "contract LinkTokenInterface"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1426,
									"mutability": "mutable",
									"name": "blockHashStore",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2088,
									"src": "475:47:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_BlockHashStoreInterface_$2148",
										"typeString": "contract BlockHashStoreInterface"
									},
									"typeName": {
										"contractScope": null,
										"id": 1425,
										"name": "BlockHashStoreInterface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2148,
										"src": "475:23:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BlockHashStoreInterface_$2148",
											"typeString": "contract BlockHashStoreInterface"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1445,
										"nodeType": "Block",
										"src": "586:106:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1433,
														"name": "LINK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1424,
														"src": "592:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_LinkTokenInterface_$2243",
															"typeString": "contract LinkTokenInterface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1435,
																"name": "_link",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1428,
																"src": "618:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1434,
															"name": "LinkTokenInterface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2243,
															"src": "599:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LinkTokenInterface_$2243_$",
																"typeString": "type(contract LinkTokenInterface)"
															}
														},
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "599:25:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_LinkTokenInterface_$2243",
															"typeString": "contract LinkTokenInterface"
														}
													},
													"src": "592:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_LinkTokenInterface_$2243",
														"typeString": "contract LinkTokenInterface"
													}
												},
												"id": 1438,
												"nodeType": "ExpressionStatement",
												"src": "592:32:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1439,
														"name": "blockHashStore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "630:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_BlockHashStoreInterface_$2148",
															"typeString": "contract BlockHashStoreInterface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1441,
																"name": "_blockHashStore",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "671:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1440,
															"name": "BlockHashStoreInterface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2148,
															"src": "647:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_BlockHashStoreInterface_$2148_$",
																"typeString": "type(contract BlockHashStoreInterface)"
															}
														},
														"id": 1442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "647:40:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_BlockHashStoreInterface_$2148",
															"typeString": "contract BlockHashStoreInterface"
														}
													},
													"src": "630:57:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_BlockHashStoreInterface_$2148",
														"typeString": "contract BlockHashStoreInterface"
													}
												},
												"id": 1444,
												"nodeType": "ExpressionStatement",
												"src": "630:57:3"
											}
										]
									},
									"documentation": null,
									"id": 1446,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "_link",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1446,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "_blockHashStore",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1446,
												"src": "554:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "538:40:3"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:0:3"
									},
									"scope": 2088,
									"src": "527:165:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "VRFCoordinator.Callback",
									"id": 1453,
									"members": [
										{
											"constant": false,
											"id": 1448,
											"mutability": "mutable",
											"name": "callbackContract",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1453,
											"src": "747:24:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1447,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "747:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1450,
											"mutability": "mutable",
											"name": "randomnessFee",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1453,
											"src": "1045:20:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 1449,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "1045:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1452,
											"mutability": "mutable",
											"name": "seedAndBlockNum",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1453,
											"src": "1321:23:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1451,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1321:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Callback",
									"nodeType": "StructDefinition",
									"scope": 2088,
									"src": "696:653:3",
									"visibility": "public"
								},
								{
									"canonicalName": "VRFCoordinator.ServiceAgreement",
									"id": 1460,
									"members": [
										{
											"constant": false,
											"id": 1455,
											"mutability": "mutable",
											"name": "vRFOracle",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1460,
											"src": "1427:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1454,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1427:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1457,
											"mutability": "mutable",
											"name": "fee",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1460,
											"src": "1499:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 1456,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "1499:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1459,
											"mutability": "mutable",
											"name": "jobID",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1460,
											"src": "1580:13:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1458,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1580:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "ServiceAgreement",
									"nodeType": "StructDefinition",
									"scope": 2088,
									"src": "1353:297:3",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "21f36509",
									"id": 1464,
									"mutability": "mutable",
									"name": "callbacks",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2088,
									"src": "1654:70:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Callback_$1453_storage_$",
										"typeString": "mapping(bytes32 => struct VRFCoordinator.Callback)"
									},
									"typeName": {
										"id": 1463,
										"keyType": {
											"id": 1461,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1662:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1654:53:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Callback_$1453_storage_$",
											"typeString": "mapping(bytes32 => struct VRFCoordinator.Callback)"
										},
										"valueType": {
											"contractScope": null,
											"id": 1462,
											"name": "Callback",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1453,
											"src": "1698:8:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Callback_$1453_storage_ptr",
												"typeString": "struct VRFCoordinator.Callback"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "75d35070",
									"id": 1468,
									"mutability": "mutable",
									"name": "serviceAgreements",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2088,
									"src": "1728:82:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ServiceAgreement_$1460_storage_$",
										"typeString": "mapping(bytes32 => struct VRFCoordinator.ServiceAgreement)"
									},
									"typeName": {
										"id": 1467,
										"keyType": {
											"id": 1465,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1736:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1728:53:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ServiceAgreement_$1460_storage_$",
											"typeString": "mapping(bytes32 => struct VRFCoordinator.ServiceAgreement)"
										},
										"valueType": {
											"contractScope": null,
											"id": 1466,
											"name": "ServiceAgreement",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1460,
											"src": "1764:16:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ServiceAgreement_$1460_storage_ptr",
												"typeString": "struct VRFCoordinator.ServiceAgreement"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "006f6ad0",
									"id": 1472,
									"mutability": "mutable",
									"name": "withdrawableTokens",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2088,
									"src": "1814:89:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1471,
										"keyType": {
											"id": 1469,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1822:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1814:59:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1470,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1846:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1478,
									"mutability": "mutable",
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2088,
									"src": "1907:98:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(bytes32 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1477,
										"keyType": {
											"id": 1473,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1915:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1907:79:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(bytes32 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1476,
											"keyType": {
												"id": 1474,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1951:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1943:42:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1475,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1977:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1492,
									"name": "RandomnessRequest",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"indexed": false,
												"mutability": "mutable",
												"name": "keyHash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1492,
												"src": "2236:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1479,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2236:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"indexed": false,
												"mutability": "mutable",
												"name": "seed",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1492,
												"src": "2257:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2257:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1484,
												"indexed": true,
												"mutability": "mutable",
												"name": "jobID",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1492,
												"src": "2275:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1483,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2275:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1492,
												"src": "2302:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1492,
												"src": "2322:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2322:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"indexed": false,
												"mutability": "mutable",
												"name": "requestID",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1492,
												"src": "2339:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1489,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2339:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2230:127:3"
									},
									"src": "2207:151:3"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1498,
									"name": "NewServiceAgreement",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"indexed": false,
												"mutability": "mutable",
												"name": "keyHash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1498,
												"src": "2388:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1493,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2388:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1498,
												"src": "2405:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2405:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2387:30:3"
									},
									"src": "2362:56:3"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1504,
									"name": "RandomnessRequestFulfilled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"indexed": false,
												"mutability": "mutable",
												"name": "requestId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1504,
												"src": "2455:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1499,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2455:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1502,
												"indexed": false,
												"mutability": "mutable",
												"name": "output",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1504,
												"src": "2474:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2474:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2454:35:3"
									},
									"src": "2422:68:3"
								},
								{
									"body": {
										"id": 1587,
										"nodeType": "Block",
										"src": "2992:606:3",
										"statements": [
											{
												"assignments": [
													1519
												],
												"declarations": [
													{
														"constant": false,
														"id": 1519,
														"mutability": "mutable",
														"name": "keyHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1587,
														"src": "2998:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1518,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2998:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1523,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1521,
															"name": "_publicProvingKey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "3026:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
																"typeString": "uint256[2] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
																"typeString": "uint256[2] calldata"
															}
														],
														"id": 1520,
														"name": "hashOfKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2035,
														"src": "3016:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (uint256[2] memory) pure returns (bytes32)"
														}
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3016:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2998:46:3"
											},
											{
												"assignments": [
													1525
												],
												"declarations": [
													{
														"constant": false,
														"id": 1525,
														"mutability": "mutable",
														"name": "oldVRFOracle",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1587,
														"src": "3050:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1524,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3050:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1530,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1526,
															"name": "serviceAgreements",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "3073:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ServiceAgreement_$1460_storage_$",
																"typeString": "mapping(bytes32 => struct VRFCoordinator.ServiceAgreement storage ref)"
															}
														},
														"id": 1528,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1527,
															"name": "keyHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "3091:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3073:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ServiceAgreement_$1460_storage",
															"typeString": "struct VRFCoordinator.ServiceAgreement storage ref"
														}
													},
													"id": 1529,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "vRFOracle",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1455,
													"src": "3073:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3050:59:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1532,
																"name": "oldVRFOracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "3123:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3147:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3139:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1533,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3139:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3139:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3123:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "706c656173652072656769737465722061206e6577206b6579",
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3151:27:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_206a96f1dc54b9197656746e097b21bbcaa13fd65bcdc8ddcf5323ad03eb1a53",
																"typeString": "literal_string \"please register a new key\""
															},
															"value": "please register a new key"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_206a96f1dc54b9197656746e097b21bbcaa13fd65bcdc8ddcf5323ad03eb1a53",
																"typeString": "literal_string \"please register a new key\""
															}
														],
														"id": 1531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3115:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3115:64:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1540,
												"nodeType": "ExpressionStatement",
												"src": "3115:64:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1542,
																"name": "_oracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1509,
																"src": "3193:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3212:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3204:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1543,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3204:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3204:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3193:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5f6f7261636c65206d757374206e6f7420626520307830",
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3216:25:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8e11b65407b8098c777c9bc179d492cbb554da9b82556e35542fe8078bd28be",
																"typeString": "literal_string \"_oracle must not be 0x0\""
															},
															"value": "_oracle must not be 0x0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8e11b65407b8098c777c9bc179d492cbb554da9b82556e35542fe8078bd28be",
																"typeString": "literal_string \"_oracle must not be 0x0\""
															}
														],
														"id": 1541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3185:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3185:57:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1550,
												"nodeType": "ExpressionStatement",
												"src": "3185:57:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1551,
																"name": "serviceAgreements",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "3248:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ServiceAgreement_$1460_storage_$",
																	"typeString": "mapping(bytes32 => struct VRFCoordinator.ServiceAgreement storage ref)"
																}
															},
															"id": 1553,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1552,
																"name": "keyHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "3266:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3248:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ServiceAgreement_$1460_storage",
																"typeString": "struct VRFCoordinator.ServiceAgreement storage ref"
															}
														},
														"id": 1554,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vRFOracle",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1455,
														"src": "3248:36:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1555,
														"name": "_oracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1509,
														"src": "3287:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3248:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "3248:46:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1558,
																"name": "serviceAgreements",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "3300:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ServiceAgreement_$1460_storage_$",
																	"typeString": "mapping(bytes32 => struct VRFCoordinator.ServiceAgreement storage ref)"
																}
															},
															"id": 1560,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1559,
																"name": "keyHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "3318:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3300:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ServiceAgreement_$1460_storage",
																"typeString": "struct VRFCoordinator.ServiceAgreement storage ref"
															}
														},
														"id": 1561,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "jobID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1459,
														"src": "3300:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1562,
														"name": "_jobID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "3335:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3300:41:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1564,
												"nodeType": "ExpressionStatement",
												"src": "3300:41:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1566,
																"name": "_fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1507,
																"src": "3409:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "316539",
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3417:9:3",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000000"
																},
																"value": "1e9"
															},
															"src": "3409:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "796f752063616e277420636861726765206d6f7265207468616e20616c6c20746865204c494e4b20696e2074686520776f726c642c20677265656479",
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3434:62:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3a4898a14f86303f4f0f062cf67700e5107caf8a2238d9bba8aa8f9b688110e9",
																"typeString": "literal_string \"you can't charge more than all the LINK in the world, greedy\""
															},
															"value": "you can't charge more than all the LINK in the world, greedy"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3a4898a14f86303f4f0f062cf67700e5107caf8a2238d9bba8aa8f9b688110e9",
																"typeString": "literal_string \"you can't charge more than all the LINK in the world, greedy\""
															}
														],
														"id": 1565,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3401:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3401:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1571,
												"nodeType": "ExpressionStatement",
												"src": "3401:96:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1572,
																"name": "serviceAgreements",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "3503:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ServiceAgreement_$1460_storage_$",
																	"typeString": "mapping(bytes32 => struct VRFCoordinator.ServiceAgreement storage ref)"
																}
															},
															"id": 1574,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1573,
																"name": "keyHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "3521:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3503:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ServiceAgreement_$1460_storage",
																"typeString": "struct VRFCoordinator.ServiceAgreement storage ref"
															}
														},
														"id": 1575,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "fee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1457,
														"src": "3503:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1578,
																"name": "_fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1507,
																"src": "3543:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3536:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint96_$",
																"typeString": "type(uint96)"
															},
															"typeName": {
																"id": 1576,
																"name": "uint96",
																"nodeType": "ElementaryTypeName",
																"src": "3536:6:3",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3536:12:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "3503:45:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 1581,
												"nodeType": "ExpressionStatement",
												"src": "3503:45:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1583,
															"name": "keyHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "3579:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1584,
															"name": "_fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "3588:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1582,
														"name": "NewServiceAgreement",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1498,
														"src": "3559:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256)"
														}
													},
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3559:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1586,
												"nodeType": "EmitStatement",
												"src": "3554:39:3"
											}
										]
									},
									"documentation": {
										"id": 1505,
										"nodeType": "StructuredDocumentation",
										"src": "2494:358:3",
										"text": "@notice Commits calling address to serve randomness\n@param _fee minimum LINK payment required to serve randomness\n@param _oracle the address of the Chainlink node with the proving key and job\n@param _publicProvingKey public key used to prove randomness\n@param _jobID ID of the corresponding chainlink job in the oracle's db"
									},
									"functionSelector": "d8340209",
									"id": 1588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "registerProvingKey",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "_fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1588,
												"src": "2888:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2888:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "_oracle",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1588,
												"src": "2902:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2902:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "_publicProvingKey",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1588,
												"src": "2919:37:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 1510,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2919:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1512,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 1511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2927:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "2919:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "_jobID",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1588,
												"src": "2958:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1514,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2958:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2882:94:3"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2992:0:3"
									},
									"scope": 2088,
									"src": "2855:743:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1621,
										"nodeType": "Block",
										"src": "4360:135:3",
										"statements": [
											{
												"assignments": [
													1601,
													1603
												],
												"declarations": [
													{
														"constant": false,
														"id": 1601,
														"mutability": "mutable",
														"name": "keyHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1621,
														"src": "4367:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1600,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4367:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1603,
														"mutability": "mutable",
														"name": "seed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1621,
														"src": "4384:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1602,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4384:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1613,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1606,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "4411:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"id": 1608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4419:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 1607,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4419:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4428:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1609,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4428:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																}
															],
															"id": 1611,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4418:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_uint256_$_$",
																"typeString": "tuple(type(bytes32),type(uint256))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_uint256_$_$",
																"typeString": "tuple(type(bytes32),type(uint256))"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1604,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -1,
															"src": "4400:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1605,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4400:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4400:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_uint256_$",
														"typeString": "tuple(bytes32,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4366:71:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1615,
															"name": "keyHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1601,
															"src": "4461:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1616,
															"name": "seed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "4470:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1617,
															"name": "_fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "4476:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1618,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "4482:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1614,
														"name": "randomnessRequest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "4443:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (bytes32,uint256,uint256,address)"
														}
													},
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4443:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1620,
												"nodeType": "ExpressionStatement",
												"src": "4443:47:3"
											}
										]
									},
									"documentation": {
										"id": 1589,
										"nodeType": "StructuredDocumentation",
										"src": "3602:653:3",
										"text": "@notice Called by LINK.transferAndCall, on successful LINK transfer\n   * @dev To invoke this, use the requestRandomness method in VRFConsumerBase.\n   * @dev The VRFCoordinator will call back to the calling contract when the\n@dev oracle responds, on the method fulfillRandomness. See\n@dev VRFConsumerBase.fulfilRandomness for its signature. Your consuming\n@dev contract should inherit from VRFConsumerBase, and implement\n@dev fulfilRandomness.\n   * @param _sender address: who sent the LINK (must be a contract)\n@param _fee amount of LINK sent\n@param _data abi-encoded call to randomnessRequest"
									},
									"functionSelector": "a4c0ed36",
									"id": 1622,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1598,
											"modifierName": {
												"argumentTypes": null,
												"id": 1597,
												"name": "onlyLINK",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2070,
												"src": "4349:8:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4349:8:3"
										}
									],
									"name": "onTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "_sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1622,
												"src": "4283:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4283:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "_fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1622,
												"src": "4300:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4300:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1622,
												"src": "4314:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4314:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4282:51:3"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4360:0:3"
									},
									"scope": 2088,
									"src": "4258:237:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "5420:789:3",
										"statements": [
											{
												"assignments": [
													1639
												],
												"declarations": [
													{
														"constant": false,
														"id": 1639,
														"mutability": "mutable",
														"name": "nonce",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1738,
														"src": "5426:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1638,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5426:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1645,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1640,
															"name": "nonces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "5442:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(bytes32 => mapping(address => uint256))"
															}
														},
														"id": 1642,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1641,
															"name": "_keyHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "5449:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5442:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1644,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1643,
														"name": "_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1631,
														"src": "5459:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5442:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5426:41:3"
											},
											{
												"assignments": [
													1647
												],
												"declarations": [
													{
														"constant": false,
														"id": 1647,
														"mutability": "mutable",
														"name": "preSeed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1738,
														"src": "5473:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1646,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5473:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1654,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1649,
															"name": "_keyHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "5508:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1650,
															"name": "_consumerSeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1627,
															"src": "5518:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1651,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1631,
															"src": "5533:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1652,
															"name": "nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "5542:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1648,
														"name": "makeVRFInputSeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2118,
														"src": "5491:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bytes32,uint256,address,uint256) pure returns (uint256)"
														}
													},
													"id": 1653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5491:57:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5473:75:3"
											},
											{
												"assignments": [
													1656
												],
												"declarations": [
													{
														"constant": false,
														"id": 1656,
														"mutability": "mutable",
														"name": "requestId",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1738,
														"src": "5554:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1655,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5554:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1661,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1658,
															"name": "_keyHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "5588:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1659,
															"name": "preSeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "5598:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1657,
														"name": "makeRequestId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2137,
														"src": "5574:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,uint256) pure returns (bytes32)"
														}
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5574:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5554:52:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1663,
																		"name": "callbacks",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1464,
																		"src": "5696:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Callback_$1453_storage_$",
																			"typeString": "mapping(bytes32 => struct VRFCoordinator.Callback storage ref)"
																		}
																	},
																	"id": 1665,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1664,
																		"name": "requestId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1656,
																		"src": "5706:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5696:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Callback_$1453_storage",
																		"typeString": "struct VRFCoordinator.Callback storage ref"
																	}
																},
																"id": 1666,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "callbackContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1448,
																"src": "5696:37:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5745:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5737:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1667,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5737:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5737:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5696:51:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1662,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "5689:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5689:59:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1673,
												"nodeType": "ExpressionStatement",
												"src": "5689:59:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1674,
																"name": "callbacks",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1464,
																"src": "5754:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Callback_$1453_storage_$",
																	"typeString": "mapping(bytes32 => struct VRFCoordinator.Callback storage ref)"
																}
															},
															"id": 1676,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1675,
																"name": "requestId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1656,
																"src": "5764:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5754:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Callback_$1453_storage",
																"typeString": "struct VRFCoordinator.Callback storage ref"
															}
														},
														"id": 1677,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "callbackContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1448,
														"src": "5754:37:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1678,
														"name": "_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1631,
														"src": "5794:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5754:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1680,
												"nodeType": "ExpressionStatement",
												"src": "5754:47:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1682,
																"name": "_feePaid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1629,
																"src": "5814:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31653237",
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5825:4:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000000"
																},
																"value": "1e27"
															},
															"src": "5814:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1681,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "5807:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5807:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1686,
												"nodeType": "ExpressionStatement",
												"src": "5807:23:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1687,
																"name": "callbacks",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1464,
																"src": "5865:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Callback_$1453_storage_$",
																	"typeString": "mapping(bytes32 => struct VRFCoordinator.Callback storage ref)"
																}
															},
															"id": 1689,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1688,
																"name": "requestId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1656,
																"src": "5875:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5865:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Callback_$1453_storage",
																"typeString": "struct VRFCoordinator.Callback storage ref"
															}
														},
														"id": 1690,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "randomnessFee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1450,
														"src": "5865:34:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1693,
																"name": "_feePaid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1629,
																"src": "5909:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5902:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint96_$",
																"typeString": "type(uint96)"
															},
															"typeName": {
																"id": 1691,
																"name": "uint96",
																"nodeType": "ElementaryTypeName",
																"src": "5902:6:3",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5902:16:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "5865:53:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 1696,
												"nodeType": "ExpressionStatement",
												"src": "5865:53:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1697,
																"name": "callbacks",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1464,
																"src": "5924:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Callback_$1453_storage_$",
																	"typeString": "mapping(bytes32 => struct VRFCoordinator.Callback storage ref)"
																}
															},
															"id": 1699,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1698,
																"name": "requestId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1656,
																"src": "5934:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5924:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Callback_$1453_storage",
																"typeString": "struct VRFCoordinator.Callback storage ref"
															}
														},
														"id": 1700,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "seedAndBlockNum",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1452,
														"src": "5924:36:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1704,
																		"name": "preSeed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1647,
																		"src": "5997:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1705,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "6006:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "6006:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1702,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -1,
																		"src": "5973:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5973:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5973:46:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1701,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -8,
															"src": "5963:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5963:57:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5924:96:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1710,
												"nodeType": "ExpressionStatement",
												"src": "5924:96:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1712,
															"name": "_keyHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "6049:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1713,
															"name": "preSeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "6059:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1714,
																	"name": "serviceAgreements",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "6068:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ServiceAgreement_$1460_storage_$",
																		"typeString": "mapping(bytes32 => struct VRFCoordinator.ServiceAgreement storage ref)"
																	}
																},
																"id": 1716,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1715,
																	"name": "_keyHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1625,
																	"src": "6086:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6068:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ServiceAgreement_$1460_storage",
																	"typeString": "struct VRFCoordinator.ServiceAgreement storage ref"
																}
															},
															"id": 1717,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "jobID",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1459,
															"src": "6068:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1718,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1631,
															"src": "6109:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1719,
															"name": "_feePaid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1629,
															"src": "6118:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1720,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1656,
															"src": "6128:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1711,
														"name": "RandomnessRequest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1492,
														"src": "6031:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_bytes32_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,uint256,bytes32,address,uint256,bytes32)"
														}
													},
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6031:107:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1722,
												"nodeType": "EmitStatement",
												"src": "6026:112:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1723,
																"name": "nonces",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "6144:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(bytes32 => mapping(address => uint256))"
																}
															},
															"id": 1726,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1724,
																"name": "_keyHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1625,
																"src": "6151:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6144:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1727,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1725,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1631,
															"src": "6161:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6144:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31",
																"id": 1734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6202:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1728,
																		"name": "nonces",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1478,
																		"src": "6172:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(bytes32 => mapping(address => uint256))"
																		}
																	},
																	"id": 1730,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1729,
																		"name": "_keyHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1625,
																		"src": "6179:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6172:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1732,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1731,
																	"name": "_sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1631,
																	"src": "6189:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6172:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 28,
															"src": "6172:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6172:32:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6144:60:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1737,
												"nodeType": "ExpressionStatement",
												"src": "6144:60:3"
											}
										]
									},
									"documentation": {
										"id": 1623,
										"nodeType": "StructuredDocumentation",
										"src": "4499:741:3",
										"text": "@notice creates the chainlink request for randomness\n   * @param _keyHash ID of the VRF public key against which to generate output\n@param _consumerSeed Input to the VRF, from which randomness is generated\n@param _feePaid Amount of LINK sent with request. Must exceed fee for key\n@param _sender Requesting contract; to be called back with VRF output\n   * @dev _consumerSeed is mixed with key hash, sender address and nonce to\n@dev obtain preSeed, which is passed to VRF oracle, which mixes it with the\n@dev hash of the block containing this request, to compute the final seed.\n   * @dev The requestId used to store the request data is constructed from the\n@dev preSeed and keyHash."
									},
									"id": 1739,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 1634,
													"name": "_feePaid",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1629,
													"src": "5398:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"argumentTypes": null,
													"id": 1635,
													"name": "_keyHash",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1625,
													"src": "5408:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1636,
											"modifierName": {
												"argumentTypes": null,
												"id": 1633,
												"name": "sufficientLINK",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2054,
												"src": "5383:14:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$_t_bytes32_$",
													"typeString": "modifier (uint256,bytes32)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5383:34:3"
										}
									],
									"name": "randomnessRequest",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "_keyHash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1739,
												"src": "5275:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1624,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5275:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "_consumerSeed",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1739,
												"src": "5297:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5297:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "_feePaid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1739,
												"src": "5324:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5324:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "_sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1739,
												"src": "5346:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5346:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5269:96:3"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5420:0:3"
									},
									"scope": 2088,
									"src": "5243:966:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "8aa7927b",
									"id": 1742,
									"mutability": "constant",
									"name": "PUBLIC_KEY_OFFSET",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2088,
									"src": "6339:48:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1740,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6339:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783230",
										"id": 1741,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6383:4:3",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "0x20"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b415f4f5",
									"id": 1745,
									"mutability": "constant",
									"name": "PRESEED_OFFSET",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2088,
									"src": "6461:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1743,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6461:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786530",
										"id": 1744,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6502:4:3",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_224_by_1",
											"typeString": "int_const 224"
										},
										"value": "0xe0"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1799,
										"nodeType": "Block",
										"src": "6990:553:3",
										"statements": [
											{
												"assignments": [
													1752,
													1754,
													1756,
													1758
												],
												"declarations": [
													{
														"constant": false,
														"id": 1752,
														"mutability": "mutable",
														"name": "currentKeyHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1799,
														"src": "6997:22:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1751,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6997:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1754,
														"mutability": "mutable",
														"name": "callback",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1799,
														"src": "7021:24:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Callback_$1453_memory_ptr",
															"typeString": "struct VRFCoordinator.Callback"
														},
														"typeName": {
															"contractScope": null,
															"id": 1753,
															"name": "Callback",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1453,
															"src": "7021:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Callback_$1453_storage_ptr",
																"typeString": "struct VRFCoordinator.Callback"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1756,
														"mutability": "mutable",
														"name": "requestId",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1799,
														"src": "7047:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1755,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7047:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1758,
														"mutability": "mutable",
														"name": "randomness",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1799,
														"src": "7071:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1757,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7071:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1762,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1760,
															"name": "_proof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "7116:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1759,
														"name": "getRandomnessFromProof",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1984,
														"src": "7093:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bytes32_$_t_struct$_Callback_$1453_memory_ptr_$_t_bytes32_$_t_uint256_$",
															"typeString": "function (bytes memory) view returns (bytes32,struct VRFCoordinator.Callback memory,bytes32,uint256)"
														}
													},
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7093:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_struct$_Callback_$1453_memory_ptr_$_t_bytes32_$_t_uint256_$",
														"typeString": "tuple(bytes32,struct VRFCoordinator.Callback memory,bytes32,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6996:127:3"
											},
											{
												"assignments": [
													1764
												],
												"declarations": [
													{
														"constant": false,
														"id": 1764,
														"mutability": "mutable",
														"name": "oadd",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1799,
														"src": "7148:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1763,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7148:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1769,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1765,
															"name": "serviceAgreements",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "7163:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ServiceAgreement_$1460_storage_$",
																"typeString": "mapping(bytes32 => struct VRFCoordinator.ServiceAgreement storage ref)"
															}
														},
														"id": 1767,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1766,
															"name": "currentKeyHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1752,
															"src": "7181:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7163:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ServiceAgreement_$1460_storage",
															"typeString": "struct VRFCoordinator.ServiceAgreement storage ref"
														}
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "vRFOracle",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1455,
													"src": "7163:43:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7148:58:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1770,
															"name": "withdrawableTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "7212:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1772,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1771,
															"name": "oadd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1764,
															"src": "7231:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7212:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1777,
																	"name": "callback",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1754,
																	"src": "7275:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Callback_$1453_memory_ptr",
																		"typeString": "struct VRFCoordinator.Callback memory"
																	}
																},
																"id": 1778,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "randomnessFee",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1450,
																"src": "7275:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1773,
																	"name": "withdrawableTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1472,
																	"src": "7239:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1775,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1774,
																	"name": "oadd",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1764,
																	"src": "7258:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7239:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 28,
															"src": "7239:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7239:59:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7212:86:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1781,
												"nodeType": "ExpressionStatement",
												"src": "7212:86:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "7372:27:3",
													"subExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1782,
															"name": "callbacks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "7379:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Callback_$1453_storage_$",
																"typeString": "mapping(bytes32 => struct VRFCoordinator.Callback storage ref)"
															}
														},
														"id": 1784,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1783,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "7389:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7379:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Callback_$1453_storage",
															"typeString": "struct VRFCoordinator.Callback storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1786,
												"nodeType": "ExpressionStatement",
												"src": "7372:27:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1788,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "7428:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1789,
															"name": "randomness",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "7439:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1790,
																"name": "callback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1754,
																"src": "7451:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Callback_$1453_memory_ptr",
																	"typeString": "struct VRFCoordinator.Callback memory"
																}
															},
															"id": 1791,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "callbackContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1448,
															"src": "7451:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1787,
														"name": "callBackWithRandomness",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "7405:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (bytes32,uint256,address)"
														}
													},
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7405:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1793,
												"nodeType": "ExpressionStatement",
												"src": "7405:72:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1795,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "7516:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1796,
															"name": "randomness",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "7527:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1794,
														"name": "RandomnessRequestFulfilled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "7489:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256)"
														}
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7489:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1798,
												"nodeType": "EmitStatement",
												"src": "7484:54:3"
											}
										]
									},
									"documentation": {
										"id": 1746,
										"nodeType": "StructuredDocumentation",
										"src": "6511:414:3",
										"text": "@notice Called by the chainlink node to fulfill requests\n   * @param _proof the proof of randomness. Actual random output built from this\n   * @dev The structure of _proof corresponds to vrf.MarshaledOnChainResponse,\n@dev in the node source code. I.e., it is a vrf.MarshaledProof with the\n@dev seed replaced by the preSeed, followed by the hash of the requesting\n@dev block."
									},
									"functionSelector": "5e1c1059",
									"id": 1800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fulfillRandomnessRequest",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "_proof",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1800,
												"src": "6962:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1747,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6962:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6961:21:3"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6990:0:3"
									},
									"scope": 2088,
									"src": "6928:615:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1845,
										"nodeType": "Block",
										"src": "7657:1279:3",
										"statements": [
											{
												"assignments": [
													1810
												],
												"declarations": [
													{
														"constant": false,
														"id": 1810,
														"mutability": "mutable",
														"name": "v",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1845,
														"src": "7816:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_VRFConsumerBase_$1406",
															"typeString": "contract VRFConsumerBase"
														},
														"typeName": {
															"contractScope": null,
															"id": 1809,
															"name": "VRFConsumerBase",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1406,
															"src": "7816:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_VRFConsumerBase_$1406",
																"typeString": "contract VRFConsumerBase"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1811,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "7816:17:3"
											},
											{
												"assignments": [
													1813
												],
												"declarations": [
													{
														"constant": false,
														"id": 1813,
														"mutability": "mutable",
														"name": "resp",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1845,
														"src": "7839:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1812,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7839:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1822,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1816,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1810,
																	"src": "7889:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_VRFConsumerBase_$1406",
																		"typeString": "contract VRFConsumerBase"
																	}
																},
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "rawFulfillRandomness",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1405,
																"src": "7889:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
																	"typeString": "function (bytes32,uint256) external"
																}
															},
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7889:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"argumentTypes": null,
															"id": 1819,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1802,
															"src": "7922:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1820,
															"name": "randomness",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1804,
															"src": "7933:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1814,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -1,
															"src": "7859:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1815,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7859:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:85:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7839:105:3"
											},
											{
												"assignments": [
													1824
												],
												"declarations": [
													{
														"constant": false,
														"id": 1824,
														"mutability": "mutable",
														"name": "b",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1845,
														"src": "8213:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1823,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8213:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1826,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "323036303030",
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8225:6:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_206000_by_1",
														"typeString": "int_const 206000"
													},
													"value": "206000"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8213:18:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1828,
																	"name": "gasleft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -7,
																	"src": "8245:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8245:9:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1830,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1824,
																"src": "8258:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8245:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f7420656e6f7567682067617320666f7220636f6e73756d6572",
															"id": 1832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8261:29:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c816b0be31b4ff6568775c57154270cb6742b4541711a582b675ea909198f4b7",
																"typeString": "literal_string \"not enough gas for consumer\""
															},
															"value": "not enough gas for consumer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c816b0be31b4ff6568775c57154270cb6742b4541711a582b675ea909198f4b7",
																"typeString": "literal_string \"not enough gas for consumer\""
															}
														],
														"id": 1827,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8237:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8237:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1834,
												"nodeType": "ExpressionStatement",
												"src": "8237:54:3"
											},
											{
												"assignments": [
													1836,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1836,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1845,
														"src": "8716:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1835,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8716:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1841,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1839,
															"name": "resp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "8755:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1837,
															"name": "consumerContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1806,
															"src": "8733:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "8733:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8733:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8715:45:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 1842,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1836,
															"src": "8923:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1843,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8922:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1844,
												"nodeType": "ExpressionStatement",
												"src": "8922:9:3"
											}
										]
									},
									"documentation": null,
									"id": 1846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callBackWithRandomness",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "requestId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1846,
												"src": "7579:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1801,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7579:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "randomness",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1846,
												"src": "7598:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7598:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "consumerContract",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1846,
												"src": "7622:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7622:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7578:69:3"
									},
									"returnParameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7657:0:3"
									},
									"scope": 2088,
									"src": "7547:1389:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1983,
										"nodeType": "Block",
										"src": "9115:1704:3",
										"statements": [
											{
												"assignments": [
													1860
												],
												"declarations": [
													{
														"constant": false,
														"id": 1860,
														"mutability": "mutable",
														"name": "BLOCKNUM_OFFSET",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1983,
														"src": "9273:23:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1859,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9273:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1864,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1863,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "30783230",
														"id": 1861,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9299:4:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "0x20"
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1862,
														"name": "PROOF_LENGTH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "9306:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9299:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9273:45:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1866,
																	"name": "_proof",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1848,
																	"src": "9456:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "9456:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1868,
																"name": "BLOCKNUM_OFFSET",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1860,
																"src": "9473:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9456:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "77726f6e672070726f6f66206c656e677468",
															"id": 1870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9490:20:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_869e73f748a03d1463bb7b47e41dc9f2989934ca6019d0a0e3b068f9645d9228",
																"typeString": "literal_string \"wrong proof length\""
															},
															"value": "wrong proof length"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_869e73f748a03d1463bb7b47e41dc9f2989934ca6019d0a0e3b068f9645d9228",
																"typeString": "literal_string \"wrong proof length\""
															}
														],
														"id": 1865,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9448:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9448:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1872,
												"nodeType": "ExpressionStatement",
												"src": "9448:63:3"
											},
											{
												"assignments": [
													1878
												],
												"declarations": [
													{
														"constant": false,
														"id": 1878,
														"mutability": "mutable",
														"name": "publicKey",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1983,
														"src": "9517:27:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
															"typeString": "uint256[2]"
														},
														"typeName": {
															"baseType": {
																"id": 1876,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9517:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1877,
															"length": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 1875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9525:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "ArrayTypeName",
															"src": "9517:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
																"typeString": "uint256[2]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1879,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "9517:27:3"
											},
											{
												"assignments": [
													1881
												],
												"declarations": [
													{
														"constant": false,
														"id": 1881,
														"mutability": "mutable",
														"name": "preSeed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1983,
														"src": "9550:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1880,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9550:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1882,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "9550:15:3"
											},
											{
												"assignments": [
													1884
												],
												"declarations": [
													{
														"constant": false,
														"id": 1884,
														"mutability": "mutable",
														"name": "blockNum",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1983,
														"src": "9571:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1883,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9571:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1885,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "9571:16:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9602:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9653:43:3",
															"value": {
																"arguments": [
																	{
																		"name": "_proof",
																		"nodeType": "YulIdentifier",
																		"src": "9670:6:3"
																	},
																	{
																		"name": "PUBLIC_KEY_OFFSET",
																		"nodeType": "YulIdentifier",
																		"src": "9678:17:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9666:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9666:30:3"
															},
															"variableNames": [
																{
																	"name": "publicKey",
																	"nodeType": "YulIdentifier",
																	"src": "9653:9:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9703:45:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_proof",
																				"nodeType": "YulIdentifier",
																				"src": "9724:6:3"
																			},
																			{
																				"name": "PRESEED_OFFSET",
																				"nodeType": "YulIdentifier",
																				"src": "9732:14:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9720:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:27:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9714:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9714:34:3"
															},
															"variableNames": [
																{
																	"name": "preSeed",
																	"nodeType": "YulIdentifier",
																	"src": "9703:7:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9755:47:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_proof",
																				"nodeType": "YulIdentifier",
																				"src": "9777:6:3"
																			},
																			{
																				"name": "BLOCKNUM_OFFSET",
																				"nodeType": "YulIdentifier",
																				"src": "9785:15:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9773:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9773:28:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9767:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9767:35:3"
															},
															"variableNames": [
																{
																	"name": "blockNum",
																	"nodeType": "YulIdentifier",
																	"src": "9755:8:3"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1860,
														"isOffset": false,
														"isSlot": false,
														"src": "9785:15:3",
														"valueSize": 1
													},
													{
														"declaration": 1745,
														"isOffset": false,
														"isSlot": false,
														"src": "9732:14:3",
														"valueSize": 1
													},
													{
														"declaration": 1742,
														"isOffset": false,
														"isSlot": false,
														"src": "9678:17:3",
														"valueSize": 1
													},
													{
														"declaration": 1848,
														"isOffset": false,
														"isSlot": false,
														"src": "9670:6:3",
														"valueSize": 1
													},
													{
														"declaration": 1848,
														"isOffset": false,
														"isSlot": false,
														"src": "9724:6:3",
														"valueSize": 1
													},
													{
														"declaration": 1848,
														"isOffset": false,
														"isSlot": false,
														"src": "9777:6:3",
														"valueSize": 1
													},
													{
														"declaration": 1884,
														"isOffset": false,
														"isSlot": false,
														"src": "9755:8:3",
														"valueSize": 1
													},
													{
														"declaration": 1881,
														"isOffset": false,
														"isSlot": false,
														"src": "9703:7:3",
														"valueSize": 1
													},
													{
														"declaration": 1878,
														"isOffset": false,
														"isSlot": false,
														"src": "9653:9:3",
														"valueSize": 1
													}
												],
												"id": 1886,
												"nodeType": "InlineAssembly",
												"src": "9593:215:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1887,
														"name": "currentKeyHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "9813:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1889,
																"name": "publicKey",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1878,
																"src": "9840:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																	"typeString": "uint256[2] memory"
																}
															],
															"id": 1888,
															"name": "hashOfKey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2035,
															"src": "9830:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (uint256[2] memory) pure returns (bytes32)"
															}
														},
														"id": 1890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9830:20:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "9813:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1892,
												"nodeType": "ExpressionStatement",
												"src": "9813:37:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1893,
														"name": "requestId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1855,
														"src": "9856:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1895,
																"name": "currentKeyHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1851,
																"src": "9882:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"argumentTypes": null,
																"id": 1896,
																"name": "preSeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1881,
																"src": "9898:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1894,
															"name": "makeRequestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2137,
															"src": "9868:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
																"typeString": "function (bytes32,uint256) pure returns (bytes32)"
															}
														},
														"id": 1897,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9868:38:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "9856:50:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1899,
												"nodeType": "ExpressionStatement",
												"src": "9856:50:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1900,
														"name": "callback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "9912:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Callback_$1453_memory_ptr",
															"typeString": "struct VRFCoordinator.Callback memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1901,
															"name": "callbacks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "9923:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Callback_$1453_storage_$",
																"typeString": "mapping(bytes32 => struct VRFCoordinator.Callback storage ref)"
															}
														},
														"id": 1903,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1902,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "9933:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9923:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Callback_$1453_storage",
															"typeString": "struct VRFCoordinator.Callback storage ref"
														}
													},
													"src": "9912:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Callback_$1453_memory_ptr",
														"typeString": "struct VRFCoordinator.Callback memory"
													}
												},
												"id": 1905,
												"nodeType": "ExpressionStatement",
												"src": "9912:31:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1907,
																	"name": "callback",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1853,
																	"src": "9957:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Callback_$1453_memory_ptr",
																		"typeString": "struct VRFCoordinator.Callback memory"
																	}
																},
																"id": 1908,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "callbackContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1448,
																"src": "9957:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9994:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9986:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1909,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9986:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9986:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9957:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f20636f72726573706f6e64696e672072657175657374",
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9998:26:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0a22e24581fcff86b8b543ef8e2219a473898fcae1e4cc51caf4398ff1ee2d16",
																"typeString": "literal_string \"no corresponding request\""
															},
															"value": "no corresponding request"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0a22e24581fcff86b8b543ef8e2219a473898fcae1e4cc51caf4398ff1ee2d16",
																"typeString": "literal_string \"no corresponding request\""
															}
														],
														"id": 1906,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9949:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9949:76:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1916,
												"nodeType": "ExpressionStatement",
												"src": "9949:76:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1918,
																	"name": "callback",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1853,
																	"src": "10039:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Callback_$1453_memory_ptr",
																		"typeString": "struct VRFCoordinator.Callback memory"
																	}
																},
																"id": 1919,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "seedAndBlockNum",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1452,
																"src": "10039:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1923,
																				"name": "preSeed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1881,
																				"src": "10094:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 1924,
																				"name": "blockNum",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1884,
																				"src": "10109:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1921,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "10077:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "10077:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10077:41:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1920,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -8,
																	"src": "10067:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10067:52:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "10039:80:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "77726f6e672070726553656564206f7220626c6f636b206e756d",
															"id": 1928,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10121:28:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_182c2531b114b04c853f145f50dee2870a46a1e8d65b04925e24e7b8421acaeb",
																"typeString": "literal_string \"wrong preSeed or block num\""
															},
															"value": "wrong preSeed or block num"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_182c2531b114b04c853f145f50dee2870a46a1e8d65b04925e24e7b8421acaeb",
																"typeString": "literal_string \"wrong preSeed or block num\""
															}
														],
														"id": 1917,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10031:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10031:119:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1930,
												"nodeType": "ExpressionStatement",
												"src": "10031:119:3"
											},
											{
												"assignments": [
													1932
												],
												"declarations": [
													{
														"constant": false,
														"id": 1932,
														"mutability": "mutable",
														"name": "blockHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1983,
														"src": "10157:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1931,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10157:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1936,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1934,
															"name": "blockNum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "10187:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1933,
														"name": "blockhash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -5,
														"src": "10177:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (uint256) view returns (bytes32)"
														}
													},
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10177:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10157:39:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1937,
														"name": "blockHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1932,
														"src": "10206:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10227:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10219:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 1938,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10219:7:3",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1941,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10219:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "10206:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1961,
												"nodeType": "IfStatement",
												"src": "10202:159:3",
												"trueBody": {
													"id": 1960,
													"nodeType": "Block",
													"src": "10231:130:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1943,
																	"name": "blockHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1932,
																	"src": "10239:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1946,
																			"name": "blockNum",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1884,
																			"src": "10279:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1944,
																			"name": "blockHashStore",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1426,
																			"src": "10251:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_BlockHashStoreInterface_$2148",
																				"typeString": "contract BlockHashStoreInterface"
																			}
																		},
																		"id": 1945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "getBlockhash",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2147,
																		"src": "10251:27:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bytes32_$",
																			"typeString": "function (uint256) view external returns (bytes32)"
																		}
																	},
																	"id": 1947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10251:37:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "10239:49:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1949,
															"nodeType": "ExpressionStatement",
															"src": "10239:49:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 1956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1951,
																			"name": "blockHash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1932,
																			"src": "10304:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1954,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10325:1:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1953,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10317:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes32_$",
																					"typeString": "type(bytes32)"
																				},
																				"typeName": {
																					"id": 1952,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "10317:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10317:10:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "10304:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "706c656173652070726f766520626c6f636b68617368",
																		"id": 1957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10329:24:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_157072dad8ce8f12a15c5ba33c5d629a5a70dd4d33c211f18b8f659f385ec149",
																			"typeString": "literal_string \"please prove blockhash\""
																		},
																		"value": "please prove blockhash"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_157072dad8ce8f12a15c5ba33c5d629a5a70dd4d33c211f18b8f659f385ec149",
																			"typeString": "literal_string \"please prove blockhash\""
																		}
																	],
																	"id": 1950,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "10296:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10296:58:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1959,
															"nodeType": "ExpressionStatement",
															"src": "10296:58:3"
														}
													]
												}
											},
											{
												"assignments": [
													1963
												],
												"declarations": [
													{
														"constant": false,
														"id": 1963,
														"mutability": "mutable",
														"name": "actualSeed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1983,
														"src": "10442:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1962,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10442:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1974,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1969,
																			"name": "preSeed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1881,
																			"src": "10498:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 1970,
																			"name": "blockHash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1932,
																			"src": "10507:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1967,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -1,
																			"src": "10481:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "10481:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 1971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10481:36:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1966,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -8,
																"src": "10471:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10471:47:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10463:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1964,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10463:7:3",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10463:56:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10442:77:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10586:153:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_proof",
																				"nodeType": "YulIdentifier",
																				"src": "10662:6:3"
																			},
																			{
																				"name": "PRESEED_OFFSET",
																				"nodeType": "YulIdentifier",
																				"src": "10670:14:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10658:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10658:27:3"
																	},
																	{
																		"name": "actualSeed",
																		"nodeType": "YulIdentifier",
																		"src": "10687:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10651:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10651:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10651:47:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_proof",
																		"nodeType": "YulIdentifier",
																		"src": "10712:6:3"
																	},
																	{
																		"name": "PROOF_LENGTH",
																		"nodeType": "YulIdentifier",
																		"src": "10720:12:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10705:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10705:28:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10705:28:3"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1745,
														"isOffset": false,
														"isSlot": false,
														"src": "10670:14:3",
														"valueSize": 1
													},
													{
														"declaration": 1155,
														"isOffset": false,
														"isSlot": false,
														"src": "10720:12:3",
														"valueSize": 1
													},
													{
														"declaration": 1848,
														"isOffset": false,
														"isSlot": false,
														"src": "10662:6:3",
														"valueSize": 1
													},
													{
														"declaration": 1848,
														"isOffset": false,
														"isSlot": false,
														"src": "10712:6:3",
														"valueSize": 1
													},
													{
														"declaration": 1963,
														"isOffset": false,
														"isSlot": false,
														"src": "10687:10:3",
														"valueSize": 1
													}
												],
												"id": 1975,
												"nodeType": "InlineAssembly",
												"src": "10577:162:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1976,
														"name": "randomness",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1857,
														"src": "10744:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1979,
																"name": "_proof",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1848,
																"src": "10785:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1977,
																"name": "VRF",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "10757:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_VRF_$1283_$",
																	"typeString": "type(contract VRF)"
																}
															},
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "randomValueFromVRFProof",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1282,
															"src": "10757:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (bytes memory) view returns (uint256)"
															}
														},
														"id": 1980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10757:35:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10744:48:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1982,
												"nodeType": "ExpressionStatement",
												"src": "10744:48:3"
											}
										]
									},
									"documentation": null,
									"id": 1984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRandomnessFromProof",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "_proof",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1984,
												"src": "8972:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1847,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8972:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8971:21:3"
									},
									"returnParameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "currentKeyHash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1984,
												"src": "9020:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1850,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9020:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "callback",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1984,
												"src": "9044:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Callback_$1453_memory_ptr",
													"typeString": "struct VRFCoordinator.Callback"
												},
												"typeName": {
													"contractScope": null,
													"id": 1852,
													"name": "Callback",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1453,
													"src": "9044:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Callback_$1453_storage_ptr",
														"typeString": "struct VRFCoordinator.Callback"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "requestId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1984,
												"src": "9076:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1854,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9076:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "randomness",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1984,
												"src": "9095:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9095:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9019:95:3"
									},
									"scope": 2088,
									"src": "8940:1879:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2016,
										"nodeType": "Block",
										"src": "11144:135:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1995,
															"name": "withdrawableTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "11150:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1998,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1996,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "11169:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11169:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11150:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2004,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1989,
																"src": "11218:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1999,
																	"name": "withdrawableTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1472,
																	"src": "11183:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2002,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2000,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "11202:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "11202:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11183:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 54,
															"src": "11183:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11183:43:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11150:76:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2007,
												"nodeType": "ExpressionStatement",
												"src": "11150:76:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2011,
																	"name": "_recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1987,
																	"src": "11253:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 2012,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1989,
																	"src": "11265:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 2009,
																	"name": "LINK",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "11239:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LinkTokenInterface_$2243",
																		"typeString": "contract LinkTokenInterface"
																	}
																},
																"id": 2010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2220,
																"src": "11239:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 2013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11239:34:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2008,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "11232:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11232:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2015,
												"nodeType": "ExpressionStatement",
												"src": "11232:42:3"
											}
										]
									},
									"documentation": {
										"id": 1985,
										"nodeType": "StructuredDocumentation",
										"src": "10823:217:3",
										"text": "@dev Allows the oracle operator to withdraw their LINK\n@param _recipient is the address the funds will be sent to\n@param _amount is the amount of LINK transferred from the Coordinator contract"
									},
									"functionSelector": "f3fef3a3",
									"id": 2017,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 1992,
													"name": "_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1989,
													"src": "11133:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1993,
											"modifierName": {
												"argumentTypes": null,
												"id": 1991,
												"name": "hasAvailableFunds",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2087,
												"src": "11115:17:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11115:26:3"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "_recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2017,
												"src": "11061:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11061:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2017,
												"src": "11081:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11081:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11060:37:3"
									},
									"returnParameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11144:0:3"
									},
									"scope": 2088,
									"src": "11043:236:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2034,
										"nodeType": "Block",
										"src": "11510:57:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2030,
																	"name": "_publicKey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2022,
																	"src": "11550:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
																		"typeString": "uint256[2] memory"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 2028,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "11533:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "11533:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11533:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2027,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "11523:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11523:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2026,
												"id": 2033,
												"nodeType": "Return",
												"src": "11516:46:3"
											}
										]
									},
									"documentation": {
										"id": 2018,
										"nodeType": "StructuredDocumentation",
										"src": "11283:145:3",
										"text": "@notice Returns the serviceAgreements key associated with this public key\n@param _publicKey the key to return the address for"
									},
									"functionSelector": "caf70c4a",
									"id": 2035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hashOfKey",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "_publicKey",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2035,
												"src": "11450:28:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 2019,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11450:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2021,
													"length": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 2020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11458:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "11450:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11449:30:3"
									},
									"returnParameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2035,
												"src": "11501:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2024,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11501:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11500:9:3"
									},
									"scope": 2088,
									"src": "11431:136:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2053,
										"nodeType": "Block",
										"src": "11836:94:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2043,
																"name": "_feePaid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2038,
																"src": "11850:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2044,
																		"name": "serviceAgreements",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1468,
																		"src": "11862:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ServiceAgreement_$1460_storage_$",
																			"typeString": "mapping(bytes32 => struct VRFCoordinator.ServiceAgreement storage ref)"
																		}
																	},
																	"id": 2046,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2045,
																		"name": "_keyHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2040,
																		"src": "11880:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11862:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ServiceAgreement_$1460_storage",
																		"typeString": "struct VRFCoordinator.ServiceAgreement storage ref"
																	}
																},
																"id": 2047,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "fee",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1457,
																"src": "11862:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "11850:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42656c6f7720616772656564207061796d656e74",
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11895:22:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_556a58e105a3b1cd1951dab88bc23d33e7619e179db000ae1af5dd131c5cb42c",
																"typeString": "literal_string \"Below agreed payment\""
															},
															"value": "Below agreed payment"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_556a58e105a3b1cd1951dab88bc23d33e7619e179db000ae1af5dd131c5cb42c",
																"typeString": "literal_string \"Below agreed payment\""
															}
														],
														"id": 2042,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11842:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11842:76:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2051,
												"nodeType": "ExpressionStatement",
												"src": "11842:76:3"
											},
											{
												"id": 2052,
												"nodeType": "PlaceholderStatement",
												"src": "11924:1:3"
											}
										]
									},
									"documentation": {
										"id": 2036,
										"nodeType": "StructuredDocumentation",
										"src": "11571:202:3",
										"text": "@dev Reverts if amount is not at least what was agreed upon in the service agreement\n@param _feePaid The payment for the request\n@param _keyHash The key which the request is for"
									},
									"id": 2054,
									"name": "sufficientLINK",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "_feePaid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2054,
												"src": "11800:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11800:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "_keyHash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2054,
												"src": "11818:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2039,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11818:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11799:36:3"
									},
									"src": "11776:154:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2069,
										"nodeType": "Block",
										"src": "12014:77:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2058,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "12028:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "12028:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2062,
																		"name": "LINK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1424,
																		"src": "12050:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_LinkTokenInterface_$2243",
																			"typeString": "contract LinkTokenInterface"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_LinkTokenInterface_$2243",
																			"typeString": "contract LinkTokenInterface"
																		}
																	],
																	"id": 2061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12042:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2060,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12042:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12042:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12028:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d75737420757365204c494e4b20746f6b656e",
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12057:21:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e987a5305d985c4322166f34f5dcca15d7dfa4faebb15d40e05678e672e6a6a7",
																"typeString": "literal_string \"Must use LINK token\""
															},
															"value": "Must use LINK token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e987a5305d985c4322166f34f5dcca15d7dfa4faebb15d40e05678e672e6a6a7",
																"typeString": "literal_string \"Must use LINK token\""
															}
														],
														"id": 2057,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12020:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12020:59:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2067,
												"nodeType": "ExpressionStatement",
												"src": "12020:59:3"
											},
											{
												"id": 2068,
												"nodeType": "PlaceholderStatement",
												"src": "12085:1:3"
											}
										]
									},
									"documentation": {
										"id": 2055,
										"nodeType": "StructuredDocumentation",
										"src": "11932:59:3",
										"text": "@dev Reverts if not sent from the LINK token"
									},
									"id": 2070,
									"name": "onlyLINK",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12011:2:3"
									},
									"src": "11994:97:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2086,
										"nodeType": "Block",
										"src": "12298:104:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 2076,
																	"name": "withdrawableTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1472,
																	"src": "12312:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2079,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2077,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "12331:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "12331:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12312:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2080,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2073,
																"src": "12346:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12312:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "63616e2774207769746864726177206d6f7265207468616e2062616c616e6365",
															"id": 2082,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12355:34:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1bfd9b8799d1b8ba1f420abec270b03aa85606145420f393771c9fcf9a812329",
																"typeString": "literal_string \"can't withdraw more than balance\""
															},
															"value": "can't withdraw more than balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1bfd9b8799d1b8ba1f420abec270b03aa85606145420f393771c9fcf9a812329",
																"typeString": "literal_string \"can't withdraw more than balance\""
															}
														],
														"id": 2075,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12304:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12304:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2084,
												"nodeType": "ExpressionStatement",
												"src": "12304:86:3"
											},
											{
												"id": 2085,
												"nodeType": "PlaceholderStatement",
												"src": "12396:1:3"
											}
										]
									},
									"documentation": {
										"id": 2071,
										"nodeType": "StructuredDocumentation",
										"src": "12095:156:3",
										"text": "@dev Reverts if amount requested is greater than withdrawable balance\n@param _amount The given amount to compare to `withdrawableTokens`"
									},
									"id": 2087,
									"name": "hasAvailableFunds",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2087,
												"src": "12281:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12281:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12280:17:3"
									},
									"src": "12254:148:3",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2089,
							"src": "354:12051:3"
						}
					],
					"src": "0:12405:3"
				},
				"id": 3
			},
			"Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol": {
				"ast": {
					"absolutePath": "Users/leilei/Downloads/VRFCoordinator/VRFRequestIDBase.sol",
					"exportedSymbols": {
						"VRFRequestIDBase": [
							2138
						]
					},
					"id": 2139,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2090,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2138,
							"linearizedBaseContracts": [
								2138
							],
							"name": "VRFRequestIDBase",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2117,
										"nodeType": "Block",
										"src": "906:90:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2109,
																			"name": "_keyHash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2093,
																			"src": "949:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 2110,
																			"name": "_userSeed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2095,
																			"src": "959:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 2111,
																			"name": "_requester",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2097,
																			"src": "970:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 2112,
																			"name": "_nonce",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2099,
																			"src": "982:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 2107,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -1,
																			"src": "938:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 2108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encode",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "938:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 2113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "938:51:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2106,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -8,
																"src": "928:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "928:62:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "920:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2104,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "920:7:4",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 2115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "920:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2103,
												"id": 2116,
												"nodeType": "Return",
												"src": "912:79:4"
											}
										]
									},
									"documentation": {
										"id": 2091,
										"nodeType": "StructuredDocumentation",
										"src": "56:706:4",
										"text": "@notice returns the seed which is actually input to the VRF coordinator\n   * @dev To prevent repetition of VRF output due to repetition of the\n@dev user-supplied seed, that seed is combined in a hash with the\n@dev user-specific nonce, and the address of the consuming contract. The\n@dev risk of repetition is mostly mitigated by inclusion of a blockhash in\n@dev the final seed, but the nonce does protect against repetition in\n@dev requests which are included in a single block.\n   * @param _userSeed VRF seed input provided by user\n@param _requester Address of the requesting contract\n@param _nonce User-specific nonce at the time of the request"
									},
									"id": 2118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "makeVRFInputSeed",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "_keyHash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2118,
												"src": "791:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2092,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "_userSeed",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2118,
												"src": "809:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "_requester",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2118,
												"src": "832:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "832:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "_nonce",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2118,
												"src": "852:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "790:77:4"
									},
									"returnParameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2118,
												"src": "895:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "894:9:4"
									},
									"scope": 2138,
									"src": "765:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2136,
										"nodeType": "Block",
										"src": "1477:70:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2131,
																	"name": "_keyHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "1517:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 2132,
																	"name": "_vRFInputSeed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2123,
																	"src": "1527:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 2129,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1500:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1500:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:41:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2128,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "1490:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1490:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2127,
												"id": 2135,
												"nodeType": "Return",
												"src": "1483:59:4"
											}
										]
									},
									"documentation": {
										"id": 2119,
										"nodeType": "StructuredDocumentation",
										"src": "1000:373:4",
										"text": "@notice Returns the id for this request\n@param _keyHash The serviceAgreement ID to be used for this request\n@param _vRFInputSeed The seed to be passed directly to the VRF\n@return The id for this request\n   * @dev Note that _vRFInputSeed is not the seed passed by the consuming\n@dev contract, but the one generated by makeVRFInputSeed"
									},
									"id": 2137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "makeRequestId",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "_keyHash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2137,
												"src": "1404:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1404:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2123,
												"mutability": "mutable",
												"name": "_vRFInputSeed",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2137,
												"src": "1422:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1422:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1398:46:4"
									},
									"returnParameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2137,
												"src": "1468:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2125,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1468:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1467:9:4"
									},
									"scope": 2138,
									"src": "1376:171:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2139,
							"src": "25:1524:4"
						}
					],
					"src": "0:1549:4"
				},
				"id": 4
			},
			"Users/leilei/Downloads/VRFCoordinator/interfaces/BlockHashStoreInterface.sol": {
				"ast": {
					"absolutePath": "Users/leilei/Downloads/VRFCoordinator/interfaces/BlockHashStoreInterface.sol",
					"exportedSymbols": {
						"BlockHashStoreInterface": [
							2148
						]
					},
					"id": 2149,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2140,
							"literals": [
								"solidity",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 2148,
							"linearizedBaseContracts": [
								2148
							],
							"name": "BlockHashStoreInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "e9413d38",
									"id": 2147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBlockhash",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "number",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2147,
												"src": "84:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "84:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "83:16:5"
									},
									"returnParameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2147,
												"src": "123:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2144,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "123:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "122:9:5"
									},
									"scope": 2148,
									"src": "62:70:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2149,
							"src": "24:110:5"
						}
					],
					"src": "0:134:5"
				},
				"id": 5
			},
			"Users/leilei/Downloads/VRFCoordinator/interfaces/LinkTokenInterface.sol": {
				"ast": {
					"absolutePath": "Users/leilei/Downloads/VRFCoordinator/interfaces/LinkTokenInterface.sol",
					"exportedSymbols": {
						"LinkTokenInterface": [
							2243
						]
					},
					"id": 2244,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2150,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 2243,
							"linearizedBaseContracts": [
								2243
							],
							"name": "LinkTokenInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "dd62ed3e",
									"id": 2159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2159,
												"src": "77:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "77:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2159,
												"src": "92:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "92:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "76:32:6"
									},
									"returnParameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "remaining",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2159,
												"src": "132:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "131:19:6"
									},
									"scope": 2243,
									"src": "58:93:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "095ea7b3",
									"id": 2168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2168,
												"src": "171:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "171:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2168,
												"src": "188:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "188:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "170:32:6"
									},
									"returnParameters": {
										"id": 2167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2168,
												"src": "221:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "221:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "220:14:6"
									},
									"scope": 2243,
									"src": "154:81:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "70a08231",
									"id": 2175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2175,
												"src": "257:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "256:15:6"
									},
									"returnParameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2175,
												"src": "295:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "295:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "294:17:6"
									},
									"scope": 2243,
									"src": "238:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "313ce567",
									"id": 2180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "332:2:6"
									},
									"returnParameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "decimalPlaces",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2180,
												"src": "358:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2177,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "358:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "357:21:6"
									},
									"scope": 2243,
									"src": "315:64:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "66188463",
									"id": 2189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseApproval",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2189,
												"src": "408:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "408:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2184,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2189,
												"src": "425:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "407:37:6"
									},
									"returnParameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2189,
												"src": "463:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "463:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "462:14:6"
									},
									"scope": 2243,
									"src": "382:95:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "d73dd623",
									"id": 2196,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseApproval",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2191,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2196,
												"src": "506:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "506:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2196,
												"src": "523:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "505:42:6"
									},
									"returnParameters": {
										"id": 2195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "556:0:6"
									},
									"scope": 2243,
									"src": "480:77:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "06fdde03",
									"id": 2201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "573:2:6"
									},
									"returnParameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "tokenName",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2201,
												"src": "599:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2198,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "599:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "598:25:6"
									},
									"scope": 2243,
									"src": "560:64:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "95d89b41",
									"id": 2206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "642:2:6"
									},
									"returnParameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "tokenSymbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2206,
												"src": "668:25:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2203,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "668:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "667:27:6"
									},
									"scope": 2243,
									"src": "627:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "18160ddd",
									"id": 2211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "718:2:6"
									},
									"returnParameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "totalTokensIssued",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2211,
												"src": "744:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "743:27:6"
									},
									"scope": 2243,
									"src": "698:73:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "a9059cbb",
									"id": 2220,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2220,
												"src": "792:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2220,
												"src": "804:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "791:27:6"
									},
									"returnParameters": {
										"id": 2219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2218,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2220,
												"src": "837:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "837:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "836:14:6"
									},
									"scope": 2243,
									"src": "774:77:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "4000aea0",
									"id": 2231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2231,
												"src": "879:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2231,
												"src": "891:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2231,
												"src": "906:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2225,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "906:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "878:48:6"
									},
									"returnParameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2231,
												"src": "945:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "945:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "944:14:6"
									},
									"scope": 2243,
									"src": "854:105:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "23b872dd",
									"id": 2242,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2242,
												"src": "984:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2242,
												"src": "998:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "998:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2242,
												"src": "1010:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "983:41:6"
									},
									"returnParameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2242,
												"src": "1043:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2239,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1043:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1042:14:6"
									},
									"scope": 2243,
									"src": "962:95:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2244,
							"src": "25:1034:6"
						}
					],
					"src": "0:1059:6"
				},
				"id": 6
			}
		}
	}
}